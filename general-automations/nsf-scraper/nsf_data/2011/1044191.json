{
 "awd_id": "1044191",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Integrating Visualization and Interaction into the Formal Languages and Automata Course",
 "cfda_num": "47.076",
 "org_code": "11040200",
 "po_phone": "7032922832",
 "po_email": "ptymann@nsf.gov",
 "po_sign_block_name": "Paul Tymann",
 "awd_eff_date": "2011-04-01",
 "awd_exp_date": "2016-03-31",
 "tot_intn_awd_amt": 199996.0,
 "awd_amount": 199996.0,
 "awd_min_amd_letter_date": "2011-03-31",
 "awd_max_amd_letter_date": "2011-03-31",
 "awd_abstract_narration": "A major problem in computer science education is that students have difficulty understanding abstract concepts in theoretical computer science.  Almost all Formal Languages and Automata (FLA) textbooks present material in a formal manner with little visualization and no feedback.  A previously developed instructional software tool, called JFLAP, allows one to explore FLA topics in a visual and interactive manner.  The accompanying user manual is used as a supplement with an automata theory textbook.  Previous studies demonstrate that JFLAP is easy to use, increases student engagement and self-efficacy.  \r\n\r\nThis project is extending JFLAP features and developing new learning modules that introduce concepts rather than simply reinforce concepts.  Each web-based module includes background information, targeted questions and JFLAP exercises.  Unlike a typical textbook, the online nature of the module and interweaving content with interactive exercises allow students to explore concepts.  The goal is to develop thirty modules that support fifteen chapters of a traditional automata theory textbook.\r\n\r\nJFLAP has been widely adopted and is used in over 160 countries.  Six faculty from a variety of institutions have been selected to serve as early adopters and contribute to the assessment plan.  Student learning gains, software usability and student perceptions are assessed.  Developed materials will be available for free and promoted to the extensive number of JFLAP users as well as the broader computer science education community.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DUE",
 "org_div_long_name": "Division Of Undergraduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Susan",
   "pi_last_name": "Rodger",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Susan H Rodger",
   "pi_email_addr": "rodger@cs.duke.edu",
   "nsf_id": "000249531",
   "pi_start_date": "2011-03-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Duke University",
  "inst_street_address": "2200 W MAIN ST",
  "inst_street_address_2": "",
  "inst_city_name": "DURHAM",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9196843030",
  "inst_zip_code": "277054640",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "DUKE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "TP7EK8DZV6N5"
 },
 "perf_inst": {
  "perf_inst_name": "Duke University",
  "perf_str_addr": "2200 W MAIN ST",
  "perf_city_name": "DURHAM",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "277054640",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "153600",
   "pgm_ele_name": "S-STEM-Schlr Sci Tech Eng&Math"
  },
  {
   "pgm_ele_code": "751300",
   "pgm_ele_name": "TUES-Type 1 Project"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0411",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001112DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  },
  {
   "app_code": "13XX",
   "app_name": "H-1B FUND, EHR, NSF",
   "app_symb_id": "045176",
   "fund_code": "1300XXXXDB",
   "fund_name": "H-1B FUND, EDU, NSF",
   "fund_symb_id": "045176"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 199996.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>A major problem in computer science education is that students have difficulty understanding abstract concepts in theoretical computer science. Almost all Formal Languages and Automata (FLA) textbooks present such material in a formal manner with little visualization and no feedback. Many faculty currently teach automata theory in the traditional way with pencil and paper problem solving and no feedback. &nbsp;PI Rodger previously developed an instructional software tool called JFLAP that allows one to explore the topics in the FLA course in a visual and interactive manner. With JFLAP students are able to receive immediate feedback on problems, and solve new types of problems that would be difficult to do with pencil and paper. &nbsp;A study using JFLAP that Rodger ran in 2005-2007 with fourteen institutions showed that the majority of students using JFLAP had an easy time using JFLAP, gave a good assessment of JFLAP, thought JFLAP made them more engaged in the course, and thought JFLAP made learning FLA concepts easier.<br /><br />In this project, Rodger has created an innovative approach to teaching FLA by expanding JFLAP to integrate in the formal mathematics with the abstract concepts, and creating online curriculum materials that guide the user through a hands-on approach to learning FLA. Rodger and undergraduate students developed a new version of JFLAP that enhances the previous version by automatically showing the theoretical definitions as one creates an automaton or grammar, in addition to other improvements and new algorithm visualizations. &nbsp;JFLAP Version 8.0 Beta was released in January 2015. &nbsp;In addition, online curriculum materials that support both JFLAP Version 7.0 and JFLAP Version 8.0 Beta were developed that use JFLAP to introduce concepts and to work problems involving those concepts. Our online curriculum materials were released in July 2016. &nbsp;Seven faculty were selected as faculty participants of this project to attend a workshop in 2014 and to develop the curriculum materials. &nbsp;The project had two external reviewers that provided feedback on the new version of JFLAP, on the workshop, and on the curriculum materials developed.<br /><br />JFLAP Version 8.0 Beta has several new features. &nbsp;One feature is that it automatically generates parts of the theoretical definitions of structures. For example, when a student creates a grammar, parts of the formal definition automatically appear below the grammar such as the start variable, the set of variables and the set of terminals. When a student creates an automaton by drawing its transition diagram, the set of symbols forming the alphabet automatically appear below it.&nbsp; This new version of JFLAP allows students to experiment with additional algorithms. For example, there is an interactive animation of the CYK parsing algorithm, with a choice of two different representations of the table to fit with more textbooks. This new version of JFLAP allows one to experiment more with grammars. &nbsp;For example, after entering in a grammar, one can generate specific strings automatically, such as the first ten shortest strings, or all strings of length 6. This should aid in determining the language of the grammar. &nbsp;JFLAP now allows for multiple symbols for variables and terminals. This allows one to write words for these items which may be more meaningful.<br /><br />This project developed innovative curriculum materials for teaching the FLA undergraduate course. Some of the modules are appropriate for use in a non-majors or high school course, exposing more students to the foundations of computer science. &nbsp;The online curriculum materials we have developed consist of modules and exercises that cover 35 topics in formal languages and automata. Each topic has a module that describes the topic with an example using JFLAP, and then is followed by several JFLAP exercises related to the topic. &nbsp;The modules are interactive. They encourage students to load an example&nbsp; JFLAP file to build, modify or experiment with concepts. &nbsp;Using JFLAP to both introduce and reinforce FLA concepts will provide students a more visual, hands-on approach to learning this theoretical material while still emphasizing the mathematics. This approach can reach more students as there are different types of learners: kinesthetic, visual, auditory, and textual. &nbsp;JFLAP will allow faculty to relate the more theoretical FLA course to other computer science courses by addressing similar issues such as testing, debugging, and run time analysis. &nbsp;Weaker students can use JFLAP to work additional problems with immediate feedback. &nbsp;JFLAP and the online curriculum materials are available for free at jflap.org. JFLAP is used worldwide in FLA, DiscreteMath, Artificial Intelligence and Compiler courses. &nbsp;Using Google analytics, from Sept 2012 to June 25, 2016 the jflap.org website had 324,542 sessions, 255,881 users and 1,161,300 page views. &nbsp;The jflap.org website has had over 700,000 hits according to Webcounter since 1996.<br /><br /></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/11/2016<br>\n\t\t\t\t\tModified by: Susan&nbsp;H&nbsp;Rodger</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522630797_jflapLogo2--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522630797_jflapLogo2--rgov-800width.jpg\" title=\"JFLAP Logo\"><img src=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522630797_jflapLogo2--rgov-66x44.jpg\" alt=\"JFLAP Logo\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">JFLAP Logo</div>\n<div class=\"imageCredit\">Susan Rodger</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Susan&nbsp;H&nbsp;Rodger</div>\n<div class=\"imageTitle\">JFLAP Logo</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522034108_grammar--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522034108_grammar--rgov-800width.jpg\" title=\"Grammar for Simple Sentences\"><img src=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522034108_grammar--rgov-66x44.jpg\" alt=\"Grammar for Simple Sentences\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">A context-free grammar for generating simple sentences.</div>\n<div class=\"imageCredit\">Susan Rodger</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Susan&nbsp;H&nbsp;Rodger</div>\n<div class=\"imageTitle\">Grammar for Simple Sentences</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522144834_generateStrings--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522144834_generateStrings--rgov-800width.jpg\" title=\"Generating Sentences\"><img src=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522144834_generateStrings--rgov-66x44.jpg\" alt=\"Generating Sentences\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Shows JFLAP generating several sentences from a context-free grammar.</div>\n<div class=\"imageCredit\">Susan Rodger</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Susan&nbsp;H&nbsp;Rodger</div>\n<div class=\"imageTitle\">Generating Sentences</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522243523_cykExample--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522243523_cykExample--rgov-800width.jpg\" title=\"CYK Parsing\"><img src=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522243523_cykExample--rgov-66x44.jpg\" alt=\"CYK Parsing\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Example of the animation of a CYK parsing algorithm</div>\n<div class=\"imageCredit\">Susan Rodger</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Susan&nbsp;H&nbsp;Rodger</div>\n<div class=\"imageTitle\">CYK Parsing</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522385727_TuringBuildingBlock--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522385727_TuringBuildingBlock--rgov-800width.jpg\" title=\"Turing machine\"><img src=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470522385727_TuringBuildingBlock--rgov-66x44.jpg\" alt=\"Turing machine\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Example Turing machine built with JFLAP that uses building blocks.</div>\n<div class=\"imageCredit\">Susan Rodger</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Susan&nbsp;H&nbsp;Rodger</div>\n<div class=\"imageTitle\">Turing machine</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470521820349_dfaExample--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470521820349_dfaExample--rgov-800width.jpg\" title=\"DFA with Alphabet\"><img src=\"/por/images/Reports/POR/2016/1044191/1044191_10082243_1470521820349_dfaExample--rgov-66x44.jpg\" alt=\"DFA with Alphabet\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">Example of a deterministic finite automaton (DFA) showing its alphabet.</div>\n<div class=\"imageCredit\">Susan Rodger</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Susan&nbsp;H&nbsp;Rodger</div>\n<div class=\"imageTitle\">DFA with Alphabet</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "\nA major problem in computer science education is that students have difficulty understanding abstract concepts in theoretical computer science. Almost all Formal Languages and Automata (FLA) textbooks present such material in a formal manner with little visualization and no feedback. Many faculty currently teach automata theory in the traditional way with pencil and paper problem solving and no feedback.  PI Rodger previously developed an instructional software tool called JFLAP that allows one to explore the topics in the FLA course in a visual and interactive manner. With JFLAP students are able to receive immediate feedback on problems, and solve new types of problems that would be difficult to do with pencil and paper.  A study using JFLAP that Rodger ran in 2005-2007 with fourteen institutions showed that the majority of students using JFLAP had an easy time using JFLAP, gave a good assessment of JFLAP, thought JFLAP made them more engaged in the course, and thought JFLAP made learning FLA concepts easier.\n\nIn this project, Rodger has created an innovative approach to teaching FLA by expanding JFLAP to integrate in the formal mathematics with the abstract concepts, and creating online curriculum materials that guide the user through a hands-on approach to learning FLA. Rodger and undergraduate students developed a new version of JFLAP that enhances the previous version by automatically showing the theoretical definitions as one creates an automaton or grammar, in addition to other improvements and new algorithm visualizations.  JFLAP Version 8.0 Beta was released in January 2015.  In addition, online curriculum materials that support both JFLAP Version 7.0 and JFLAP Version 8.0 Beta were developed that use JFLAP to introduce concepts and to work problems involving those concepts. Our online curriculum materials were released in July 2016.  Seven faculty were selected as faculty participants of this project to attend a workshop in 2014 and to develop the curriculum materials.  The project had two external reviewers that provided feedback on the new version of JFLAP, on the workshop, and on the curriculum materials developed.\n\nJFLAP Version 8.0 Beta has several new features.  One feature is that it automatically generates parts of the theoretical definitions of structures. For example, when a student creates a grammar, parts of the formal definition automatically appear below the grammar such as the start variable, the set of variables and the set of terminals. When a student creates an automaton by drawing its transition diagram, the set of symbols forming the alphabet automatically appear below it.  This new version of JFLAP allows students to experiment with additional algorithms. For example, there is an interactive animation of the CYK parsing algorithm, with a choice of two different representations of the table to fit with more textbooks. This new version of JFLAP allows one to experiment more with grammars.  For example, after entering in a grammar, one can generate specific strings automatically, such as the first ten shortest strings, or all strings of length 6. This should aid in determining the language of the grammar.  JFLAP now allows for multiple symbols for variables and terminals. This allows one to write words for these items which may be more meaningful.\n\nThis project developed innovative curriculum materials for teaching the FLA undergraduate course. Some of the modules are appropriate for use in a non-majors or high school course, exposing more students to the foundations of computer science.  The online curriculum materials we have developed consist of modules and exercises that cover 35 topics in formal languages and automata. Each topic has a module that describes the topic with an example using JFLAP, and then is followed by several JFLAP exercises related to the topic.  The modules are interactive. They encourage students to load an example  JFLAP file to build, modify or experiment with concepts.  Using JFLAP to both introduce and reinforce FLA concepts will provide students a more visual, hands-on approach to learning this theoretical material while still emphasizing the mathematics. This approach can reach more students as there are different types of learners: kinesthetic, visual, auditory, and textual.  JFLAP will allow faculty to relate the more theoretical FLA course to other computer science courses by addressing similar issues such as testing, debugging, and run time analysis.  Weaker students can use JFLAP to work additional problems with immediate feedback.  JFLAP and the online curriculum materials are available for free at jflap.org. JFLAP is used worldwide in FLA, DiscreteMath, Artificial Intelligence and Compiler courses.  Using Google analytics, from Sept 2012 to June 25, 2016 the jflap.org website had 324,542 sessions, 255,881 users and 1,161,300 page views.  The jflap.org website has had over 700,000 hits according to Webcounter since 1996.\n\n\n\n\t\t\t\t\tLast Modified: 08/11/2016\n\n\t\t\t\t\tSubmitted by: Susan H Rodger"
 }
}