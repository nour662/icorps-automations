{
 "awd_id": "1043241",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "A Cognitive Tutoring System to Help Students Learn to Solve Multi-body Statics Problems",
 "cfda_num": "47.076",
 "org_code": "11040200",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Gul Kremer",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2014-07-31",
 "tot_intn_awd_amt": 199242.0,
 "awd_amount": 199242.0,
 "awd_min_amd_letter_date": "2011-08-01",
 "awd_max_amd_letter_date": "2011-08-01",
 "awd_abstract_narration": "This project focuses on providing intelligent and timely instruction through feedback and guidance while solving multi-body statics problems. The computer-based tutor being developed grants students tools to work on truss problems, with reasonably wide latitude to select subsystems, draw free body diagrams, and write and solve equations of equilibrium, in whatever order the user chooses. The tutoring system takes a cognitive-tutor-like approach in which the actual work of a user is viewed in light of an underlying model of student and expert cognition. The underlying model builds upon a conceptual framework in Statics, which has also led to the now widely used conceptual test, the Statics Concept Inventory. The tutoring system communicates the goal structure that underlies the solving of truss problems, which is similar to other multi-body statics problems, promotes a correct, general understanding of the problem-solving knowledge and of the strategic decisions for achieving an efficient solution, and provides immediate feedback on errors relative to the model of desired performance. The development focuses on the usability of the system, the ability of the system to interpret user work as would an instructor viewing paper and pencil work, and on the learning gains of users. This project extends cognitive style tutors to engineering domains, advancing understanding of how to promote learning and education and incorporates that understanding into a practical instructional tool. The infrastructure for education will be enhanced through the development of next-generation computer-based tutoring systems that can serve engineering education broadly. Materials will be disseminated and made available in a sustained way through the Open Learning Initiative, where the OLI Engineering Statics course is currently accessed by thousands of users. The project teams with a college that provides the first 2 years of engineering studies and feeds significant numbers of minority students into Georgia engineering schools. Also, by adapting the tutor so as to provide a stimulating and motivating experience for high school students who study trusses in physics courses, the project is expected to increase the numbers of high school students who choose engineering as a career.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DUE",
 "org_div_long_name": "Division Of Undergraduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Paul",
   "pi_last_name": "Steif",
   "pi_mid_init": "S",
   "pi_sufx_name": "",
   "pi_full_name": "Paul S Steif",
   "pi_email_addr": "steif@andrew.cmu.edu",
   "nsf_id": "000202829",
   "pi_start_date": "2011-08-01",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Levent",
   "pi_last_name": "Kara",
   "pi_mid_init": "B",
   "pi_sufx_name": "",
   "pi_full_name": "Levent B Kara",
   "pi_email_addr": "lkara@cmu.edu",
   "nsf_id": "000235581",
   "pi_start_date": "2011-08-01",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "5000 FORBES AVE",
  "perf_city_name": "PITTSBURGH",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133815",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "153600",
   "pgm_ele_name": "S-STEM-Schlr Sci Tech Eng&Math"
  },
  {
   "pgm_ele_code": "751300",
   "pgm_ele_name": "TUES-Type 1 Project"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0411",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001112DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  },
  {
   "app_code": "13XX",
   "app_name": "H-1B FUND, EHR, NSF",
   "app_symb_id": "045176",
   "fund_code": "1300XXXXDB",
   "fund_name": "H-1B FUND, EDU, NSF",
   "fund_symb_id": "045176"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 199242.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>A critical task of engineers is to solve problems &ndash; analyze physical situations to determine how they can be improved or designed from scratch. In engineering courses, students learn to solve problems of increasing difficulty.&nbsp; To learn any skill or task, one needs to practice and to receive feedback on those efforts, from which one can improve. Thus, engineering students must receive feedback while learning to solve problems. Engineering problems often involve graphical elements, for example diagrams of parts and arrows that represent forces between parts, as well as mathematical variables that quantify those forces.&nbsp; Students typically solve such problems as part of homework that is done outside of the classroom.&nbsp; While the grading of homework might offer the possibility of giving feedback to students on their efforts to solve homework problems, in practice there is insufficient time and expertise for graders to offer meaningful, helpful feedback. The computer offers some potential for automating the feedback process.</p>\n<p>It is relatively straightforward for computers to offer feedback when students are answering multiple-choice questions.&nbsp; This research was to develop a computer program with a graphical user interface, as found in modern, widely used programs such as Microsoft Office, but which allow students to choose and manipulate diagrams and mathematical elements to solve engineering problems.&nbsp; The interface should allow students to solve each problem by many different routes, akin to what students could do when solving on paper and pencil. In addition, the new system should be able to determine when students are making errors, and to provide students feedback with explanation. The student is then able to make corrections and continue solving the problem. The ability to interpret student work well enough to recognize errors and offer feedback is a significant advance for problems in which multiple paths can be taken and diagrams and mathematical elements are selected and manipulated.</p>\n<p>Such a computer program must not only help students to complete the problems. Through the process, students should have learned something: they should be able to solve problems with fewer errors in the future.&nbsp; This project thus sought to make advances in how it assesses whether the numbers of errors in fact decrease with practice. This is never simple because there is some randomness in performance. Errors are sometimes committed simply through carelessness; other times, the correct answer is arrived at by guessing. Thus, one seeks to determine whether there is a trend, in some statistical sense, which indicates a decrease in errors. The difficulty in perceiving such trends is compounded by the fact that some steps in solving a complex problem are intrinsically more difficult for students than others. Ideally, one would track successive instances of the same type of step, and see whether errors in carrying out that type of step tend to decrease.&nbsp;</p>\n<p>The separation of student responses into attempts to apply different types of steps has been done in the case of computer systems involving sequences of multiple-choice questions.&nbsp; The research conducted was more challenging in that it sought to distinguish different steps from a complex solution path, which is different for every student. This was accomplished, and then the percentage of students in a given class who erred while performing each type of step could be followed for successive opportunities to attempt that step.&nbsp; A Learning Curve is a plot of the percentage of students who committed an error, for one type of step, as function of the opportunity (first, second, third, etc.) to exercise that step. In some cases the error decreases with practice, and indication of learning. Such a decrease in error is not found for all types of steps. When there is not a de...",
  "por_txt_cntn": "\nA critical task of engineers is to solve problems &ndash; analyze physical situations to determine how they can be improved or designed from scratch. In engineering courses, students learn to solve problems of increasing difficulty.  To learn any skill or task, one needs to practice and to receive feedback on those efforts, from which one can improve. Thus, engineering students must receive feedback while learning to solve problems. Engineering problems often involve graphical elements, for example diagrams of parts and arrows that represent forces between parts, as well as mathematical variables that quantify those forces.  Students typically solve such problems as part of homework that is done outside of the classroom.  While the grading of homework might offer the possibility of giving feedback to students on their efforts to solve homework problems, in practice there is insufficient time and expertise for graders to offer meaningful, helpful feedback. The computer offers some potential for automating the feedback process.\n\nIt is relatively straightforward for computers to offer feedback when students are answering multiple-choice questions.  This research was to develop a computer program with a graphical user interface, as found in modern, widely used programs such as Microsoft Office, but which allow students to choose and manipulate diagrams and mathematical elements to solve engineering problems.  The interface should allow students to solve each problem by many different routes, akin to what students could do when solving on paper and pencil. In addition, the new system should be able to determine when students are making errors, and to provide students feedback with explanation. The student is then able to make corrections and continue solving the problem. The ability to interpret student work well enough to recognize errors and offer feedback is a significant advance for problems in which multiple paths can be taken and diagrams and mathematical elements are selected and manipulated.\n\nSuch a computer program must not only help students to complete the problems. Through the process, students should have learned something: they should be able to solve problems with fewer errors in the future.  This project thus sought to make advances in how it assesses whether the numbers of errors in fact decrease with practice. This is never simple because there is some randomness in performance. Errors are sometimes committed simply through carelessness; other times, the correct answer is arrived at by guessing. Thus, one seeks to determine whether there is a trend, in some statistical sense, which indicates a decrease in errors. The difficulty in perceiving such trends is compounded by the fact that some steps in solving a complex problem are intrinsically more difficult for students than others. Ideally, one would track successive instances of the same type of step, and see whether errors in carrying out that type of step tend to decrease. \n\nThe separation of student responses into attempts to apply different types of steps has been done in the case of computer systems involving sequences of multiple-choice questions.  The research conducted was more challenging in that it sought to distinguish different steps from a complex solution path, which is different for every student. This was accomplished, and then the percentage of students in a given class who erred while performing each type of step could be followed for successive opportunities to attempt that step.  A Learning Curve is a plot of the percentage of students who committed an error, for one type of step, as function of the opportunity (first, second, third, etc.) to exercise that step. In some cases the error decreases with practice, and indication of learning. Such a decrease in error is not found for all types of steps. When there is not a decrease, we gain insight into parts of the computer system that could potentially be improved.\n\nIn sum, we were able to show t..."
 }
}