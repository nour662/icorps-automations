{
 "awd_id": "1144158",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "III: EAGER: Accelerated Filtering of Spatiotemporal Archives Using Reconfigurable  Hardware",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": "7032927347",
 "po_email": "sspengle@nsf.gov",
 "po_sign_block_name": "Sylvia Spengler",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2012-07-31",
 "tot_intn_awd_amt": 100000.0,
 "awd_amount": 100000.0,
 "awd_min_amd_letter_date": "2011-07-16",
 "awd_max_amd_letter_date": "2011-07-16",
 "awd_abstract_narration": "The wide adoption of GPS and sensor technologies has created many applications that collect and maintain very large repositories of data in the form of trajectories. To better analyze such data, a user can pose complex pattern queries using a high level region-based representation that abstracts trajectories by the temporally ordered sequence of spatial regions (or areas/points of interest) they visited. For example: \"find moving objects that first passed by the train station, then by the town center and were always within a mile from the harbor\". Temporal and counter constraints, as well as region variables and region hierarchies can be added to create very powerful queries. Similarly, one can formulate join queries that identify pairs of trajectories with similar behavior, etc. While such pattern-based queries are critical in analyzing vast trajectory archives, traditional methods fail to scale due to the large computational effort and size of the data. Adding more resources (i.e., many processors) will not eliminate the bottleneck (each processor still uses multiple clock cycles per operation) and may also create a large communication overhead between the processors. Instead, this project takes a different, high risk-high payoff approach by using reconfigurable hardware, namely, Field Programmable Gate Arrays (FPGAs). FPGAs are code accelerators where a portion of the application is mapped as a circuit on the FPGA; thus they avoid the traditional load/store operations in the datapath that traditional CPUs perform. Such processing has the potential to provide orders of magnitude performance improvement, leading to further discoveries from vast amounts of data. The intellectual merit of this project emanates from the novel solutions needed: efficient FPGA designs to support region variables, time and counter constraints, region hierarchies, as well trajectory joins. If successful, this project has the potential to revolutionize the way queries over large trajectory data archives are processed. There is a broad range of applications (scientific, educational, and economic activities) that will be impacted from the fast processing provided by the FPGA filtering approach. Providing orders of magnitude speed improvement will have a profound effect in these applications. The combination of two distinct technologies (Databases and FPGAs) is an ideal vehicle for training graduate/undergraduate students and for transferring gained experience into relevant courses. For further information see the project web site at the URL: http://www.cs.ucr.edu/~tsotras/fpga/index.html",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Vassilis",
   "pi_last_name": "Tsotras",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Vassilis J Tsotras",
   "pi_email_addr": "tsotras@cs.ucr.edu",
   "nsf_id": "000149913",
   "pi_start_date": "2011-07-16",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Walid",
   "pi_last_name": "Najjar",
   "pi_mid_init": "A",
   "pi_sufx_name": "",
   "pi_full_name": "Walid A Najjar",
   "pi_email_addr": "najjar@cs.ucr.edu",
   "nsf_id": "000439876",
   "pi_start_date": "2011-07-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Riverside",
  "inst_street_address": "200 UNIVERSTY OFC BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "RIVERSIDE",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "9518275535",
  "inst_zip_code": "925210001",
  "inst_country_name": "United States",
  "cong_dist_code": "39",
  "st_cong_dist_code": "CA39",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF CALIFORNIA AT RIVERSIDE",
  "org_prnt_uei_num": "",
  "org_uei_num": "MR5QC5FCAVH5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Riverside",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "925210001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "39",
  "perf_st_cong_dist": "CA39",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736400",
   "pgm_ele_name": "Info Integration & Informatics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 100000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The wide adoption of GPS and sensor technologies has created many applications that collect and maintain very large repositories of data in the form of trajectories. To better analyze such data, a high level region-based representation abstracts the 2-dimensional space by a collection of non-overlapping regions. Trajectories are then abstracted by the temporally ordered sequence of spatial regions (or areas/points of interest) they visited. This enables the user to pose meaningful, complex pattern queries that relate to known spatial regions, places etc., that s/he is familiar with, like: &ldquo;find moving objects that first passed by the train station, then by the town center and were always within a mile from point the entrance to the harbor&rdquo;.&nbsp;</p>\n<p>While such pattern-based queries are critical in analyzing vast trajectory archives, traditional methods fail to scale due to the large computational effort and size of the data. One obvious approach is to use parallelism by adding more resources (i.e., many processors). While this idea will not eliminate the bottleneck (each processor still uses multiple clock cycles per operation) it may also create a large communication overhead between the processors. Instead, in this project we examined how to evaluate complex pattern queries on spatiotemporal data by using reconfigurable hardware, namely, Field Programmable Gate Arrays (FPGAs). Using FPGAs required a new computing paradigm drastically different than the traditional, software-based approaches on data filtering, thus leading to novel research problems.</p>\n<p>In particular, we present a study on FPGA-based architectures focusing on processing expressive motion patterns on spatio-temporal trajectories. User queries are provided as regular expressions over the region alphabet and can be implicitly or explicitly anchored to the time domain. More importantly, variables over the spatial regions can be used, which substantially enhance the flexibility and expressive power of the user queries. The spatio-temporal data is then transmitted to the FPGA, which first maps the data into the user-defined regions while simultaneously querying region sequences on thousands of complex patterns (queries). We explored the challenges in handling several constructs of the assumed query language, with a study on the trade-offs between expressiveness, scalability and matching accuracy (eliminating false-positives). The problem is rather straightforward when the query expression does not contain variables. When variables are included, and in addition, wild-star and wild+plus quantifiers, the FPGA design becomes more complex, requiring more space (overhead) at the FPGA chip. We have provided practical solutions to this problem, by making some simplifying assumptions on the values a variable can take (i.e., assuming a variable can take values from a fixed set of regions). Furthermore, we performed an extensive performance comparison where the FPGA setup is shown to outperform (by orders of magnitude throughput) the current state-of-the-art CPU-based approaches.&nbsp;</p>\n<p>There is a wide range of applications (scientific, educational, and economic activities deal with complex pattern queries over time varying data) that will benefit from the fast processing provided by our approach. The orders of magnitude speed improvement we have witnessed by using FPGAs can lead to a profound effect in these applications.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/06/2012<br>\n\t\t\t\t\tModified by: Vassilis&nbsp;J&nbsp;Tsotras</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe wide adoption of GPS and sensor technologies has created many applications that collect and maintain very large repositories of data in the form of trajectories. To better analyze such data, a high level region-based representation abstracts the 2-dimensional space by a collection of non-overlapping regions. Trajectories are then abstracted by the temporally ordered sequence of spatial regions (or areas/points of interest) they visited. This enables the user to pose meaningful, complex pattern queries that relate to known spatial regions, places etc., that s/he is familiar with, like: \"find moving objects that first passed by the train station, then by the town center and were always within a mile from point the entrance to the harbor\". \n\nWhile such pattern-based queries are critical in analyzing vast trajectory archives, traditional methods fail to scale due to the large computational effort and size of the data. One obvious approach is to use parallelism by adding more resources (i.e., many processors). While this idea will not eliminate the bottleneck (each processor still uses multiple clock cycles per operation) it may also create a large communication overhead between the processors. Instead, in this project we examined how to evaluate complex pattern queries on spatiotemporal data by using reconfigurable hardware, namely, Field Programmable Gate Arrays (FPGAs). Using FPGAs required a new computing paradigm drastically different than the traditional, software-based approaches on data filtering, thus leading to novel research problems.\n\nIn particular, we present a study on FPGA-based architectures focusing on processing expressive motion patterns on spatio-temporal trajectories. User queries are provided as regular expressions over the region alphabet and can be implicitly or explicitly anchored to the time domain. More importantly, variables over the spatial regions can be used, which substantially enhance the flexibility and expressive power of the user queries. The spatio-temporal data is then transmitted to the FPGA, which first maps the data into the user-defined regions while simultaneously querying region sequences on thousands of complex patterns (queries). We explored the challenges in handling several constructs of the assumed query language, with a study on the trade-offs between expressiveness, scalability and matching accuracy (eliminating false-positives). The problem is rather straightforward when the query expression does not contain variables. When variables are included, and in addition, wild-star and wild+plus quantifiers, the FPGA design becomes more complex, requiring more space (overhead) at the FPGA chip. We have provided practical solutions to this problem, by making some simplifying assumptions on the values a variable can take (i.e., assuming a variable can take values from a fixed set of regions). Furthermore, we performed an extensive performance comparison where the FPGA setup is shown to outperform (by orders of magnitude throughput) the current state-of-the-art CPU-based approaches. \n\nThere is a wide range of applications (scientific, educational, and economic activities deal with complex pattern queries over time varying data) that will benefit from the fast processing provided by our approach. The orders of magnitude speed improvement we have witnessed by using FPGAs can lead to a profound effect in these applications.\n\n \n\n\t\t\t\t\tLast Modified: 11/06/2012\n\n\t\t\t\t\tSubmitted by: Vassilis J Tsotras"
 }
}