{
 "awd_id": "1055107",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Scrapple: Fast Analytical Query Evaluation via Advanced Query Recycling Techniques",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Frank Olken",
 "awd_eff_date": "2011-01-01",
 "awd_exp_date": "2014-10-31",
 "tot_intn_awd_amt": 549997.0,
 "awd_amount": 126637.0,
 "awd_min_amd_letter_date": "2011-01-06",
 "awd_max_amd_letter_date": "2014-10-16",
 "awd_abstract_narration": "The complex analytical queries characterizing decision support applications can be very expensive to compute, and the value of such applications is directly correlated to the speed at which answers can be returned to the user.  Typically, once queries have been answered, database systems simply discard the results.  However, a huge optimization opportunity is missed by doing this: there is tremendous latent energy in the discarded query results, if we only knew how to recycle them to help answer subsequent related queries.  The goal of the project is to develop Scrapple, a principled database management system that aggressively reuses old query results to speed up the answering of new queries, resulting in potentially dramatic performance gains for a large class of decision support applications.\r\n\r\nScrapple's basic strategy is to view cached query results (and their intermediate subresults) as materialized views, and then employ advanced techniques for optimizing queries using materialized views to answer subsequent queries.  To execute this strategy, the project develops: (1) a novel and comprehensive theory of differential reformulation strategies; (2) a set of unifying principles connecting incremental view maintenance and optimization of queries using materialized views; (3) a novel and comprehensive theory of data provenance for aggregate queries; and (4) practical implementation techniques for recycling cached results via cost-based search strategies.  By using fully automated techniques, Scrapple will dramatically reduce the total cost of ownership of a typical data warehouse.  Moreover, the techniques at the heart of our approach have wide application in areas such as data integration, data exchange, view maintenance, and data provenance.  The research will also be used to develop lecture and project materials for new course modules. These educational materials, along the Scrapple source code and publications, will be made freely available at the project Web site, http://www.cs.ucdavis.edu/~green/scrapple.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Todd",
   "pi_last_name": "Green",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Todd J Green",
   "pi_email_addr": "green@cs.ucdavis.edu",
   "nsf_id": "000553407",
   "pi_start_date": "2011-01-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Davis",
  "inst_street_address": "1850 RESEARCH PARK DR STE 300",
  "inst_street_address_2": "",
  "inst_city_name": "DAVIS",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5307547700",
  "inst_zip_code": "956186153",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "CA04",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, DAVIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "TX2DAGQPENZ5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Davis",
  "perf_str_addr": "1850 RESEARCH PARK DR STE 300",
  "perf_city_name": "DAVIS",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "956186153",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "CA04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736400",
   "pgm_ele_name": "Info Integration & Informatics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "1187",
   "pgm_ref_txt": "PECASE- eligible"
  },
  {
   "pgm_ref_code": "7364",
   "pgm_ref_txt": "INFO INTEGRATION & INFORMATICS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0113",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001314DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 126636.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>Summary.&nbsp;</strong> The complex analytical queries characterizing decision support applications and analytical \"big data\" applications can be very expensive to compute, and the value of such applications is directly correlated to the speed at which answers can be returned to the user. Typically, once queries have been answered, database systems simply discard the results. However, a huge optimization opportunity is missed by doing this: there is tremendous latent energy in the discarded query results, if we only knew how to recycle them to help answer subsequent related queries. This would be especially useful for, e.g., parameterized queries, used heavily in practical database applications (and in standard benchmarks such as TPC-H), as well as many ad-hoc query workloads such as those resulting from an iterative process of &ldquo;zeroing-in&rdquo; on the underlying analytical question of interest.</p>\n<p>We proposed to build a principled system that aggressively reuses old query results to speed up the answering of new queries, resulting in potentially dramatic performance gains for a large class of decision support applications. The basic strategy of our implementation was to view old query results (and their intermediate subresults) as materialized views, and then employ advanced techniques for optimizing queries using materialized views to help answer subsequent queries. Executing such a strategy requires solving several formidable technical challenges:</p>\n<ol>\n<li>Existing techniques for optimizing queries using materialized views could not cope with the rich class of queries required by decision support applications, which make heavy use of aggregation, nested subqueries, and other advanced features of SQL.</li>\n<li>Reformulation strategies must incorporate novel differential techniques that are able to cope with materialized views that are nearly, but not exactly, applicable to the query to be answered.&nbsp;</li>\n<li>Fundamental theoretical questions related to this effort, such as the decidability of equivalence of aggregate queries with nested subqueries, were open at the onset of the project. These questions must be resolved in order to provide precise characterizations of the completeness of the proposed reformulation strategies.</li>\n</ol>\n<p>We therefore proposed a two-pronged approach, where the basic theoretical questions were to be investigated in parallel with a systems-building effort.</p>\n<p><strong>Intellectual merit.&nbsp;</strong> The project aimed to address difficult and fundamental problems in database theory and practical systems building. As an additional benefit, we hope to uncover a set of unifying principles connecting incremental view maintenance and optimization of queries using materialized views. On the face of it, these two problems seem very different, but our previous work has already established that for certain classes of queries and views, at least, they can be viewed as two sides of the same coin.</p>\n<p><strong>Broader impacts.&nbsp;</strong> We planned to disseminate the results of this research broadly and to make a prototype implementation of our system freely available under a permissive open source license. While the proposed research targeted a particular class of applications (decision support), the techniques at the heart of our approach were expected wider applications in areas such as data integration and view maintenance. We expected that our work may suggest new directions in those areas as well</p>\n<p><strong>Outcome</strong>. &nbsp;The project was terminated early due to the departure of the PI for a role in industry. &nbsp;However, it still yielded several results, including publications in top-tier database systems conferences such as SIGMOD and ICDE:</p>\n<ol>\n<li>Mingmin Chen and Todd&nbsp;J. Green. Bag equivalence of bounded symmetry degree conjunctive queries with inequalities. In&nbsp;<em>A...",
  "por_txt_cntn": "\nSummary.  The complex analytical queries characterizing decision support applications and analytical \"big data\" applications can be very expensive to compute, and the value of such applications is directly correlated to the speed at which answers can be returned to the user. Typically, once queries have been answered, database systems simply discard the results. However, a huge optimization opportunity is missed by doing this: there is tremendous latent energy in the discarded query results, if we only knew how to recycle them to help answer subsequent related queries. This would be especially useful for, e.g., parameterized queries, used heavily in practical database applications (and in standard benchmarks such as TPC-H), as well as many ad-hoc query workloads such as those resulting from an iterative process of \"zeroing-in\" on the underlying analytical question of interest.\n\nWe proposed to build a principled system that aggressively reuses old query results to speed up the answering of new queries, resulting in potentially dramatic performance gains for a large class of decision support applications. The basic strategy of our implementation was to view old query results (and their intermediate subresults) as materialized views, and then employ advanced techniques for optimizing queries using materialized views to help answer subsequent queries. Executing such a strategy requires solving several formidable technical challenges:\n\nExisting techniques for optimizing queries using materialized views could not cope with the rich class of queries required by decision support applications, which make heavy use of aggregation, nested subqueries, and other advanced features of SQL.\nReformulation strategies must incorporate novel differential techniques that are able to cope with materialized views that are nearly, but not exactly, applicable to the query to be answered. \nFundamental theoretical questions related to this effort, such as the decidability of equivalence of aggregate queries with nested subqueries, were open at the onset of the project. These questions must be resolved in order to provide precise characterizations of the completeness of the proposed reformulation strategies.\n\n\nWe therefore proposed a two-pronged approach, where the basic theoretical questions were to be investigated in parallel with a systems-building effort.\n\nIntellectual merit.  The project aimed to address difficult and fundamental problems in database theory and practical systems building. As an additional benefit, we hope to uncover a set of unifying principles connecting incremental view maintenance and optimization of queries using materialized views. On the face of it, these two problems seem very different, but our previous work has already established that for certain classes of queries and views, at least, they can be viewed as two sides of the same coin.\n\nBroader impacts.  We planned to disseminate the results of this research broadly and to make a prototype implementation of our system freely available under a permissive open source license. While the proposed research targeted a particular class of applications (decision support), the techniques at the heart of our approach were expected wider applications in areas such as data integration and view maintenance. We expected that our work may suggest new directions in those areas as well\n\nOutcome.  The project was terminated early due to the departure of the PI for a role in industry.  However, it still yielded several results, including publications in top-tier database systems conferences such as SIGMOD and ICDE:\n\nMingmin Chen and Todd J. Green. Bag equivalence of bounded symmetry degree conjunctive queries with inequalities. In AMW, 2011.\nTodd J. Green and Zachary G. Ives. Recomputing materialized instances after changes to mappings and data. In ICDE, 2012.  Runner-up to best paper award.\nShan Shan Huang, Todd J. Green, and Boon Thau Loo. Datalog and emerging applications: An interactive ..."
 }
}