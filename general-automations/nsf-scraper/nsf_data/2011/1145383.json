{
 "awd_id": "1145383",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Numerical Accuracy of Randomized Algorithms for Matrix Multiplication and Least Squares",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Balasubramanian Kalyanasundaram",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2014-11-30",
 "tot_intn_awd_amt": 85000.0,
 "awd_amount": 85000.0,
 "awd_min_amd_letter_date": "2011-07-23",
 "awd_max_amd_letter_date": "2014-09-22",
 "awd_abstract_narration": "The PI proposes to investigate the numerical accuracy and robustness of randomized algorithms for matrix multiplication and overdetermined least squares problems. Existing analyses of randomized algorithms are mostly concerned with asymptotic time and space complexity in exact arithmetic, and very little is known about their numerical behavior in floating point arithmetic.  The PI proposes to develop a numerical perturbation and stability theory for randomized algorithms for matrix multiplication and least squares problems.  This entails the invention of new approaches and concepts to capture the numerical behavior of randomized algorithms.  It is not at all clear what ``numerical stability'' means in this context, let alone how it should be defined. How does one distinguish variability caused by randomization from variability caused by finite precision?  Where should parameters like failure probability, choice of probabilities, and amount of sampling be accounted for?  Proposed approaches for answering these questions will include matrix perturbation analysis, probability theory, and methods on matrix manifolds.  Extensive numerical experiments will be performed to corroborate the analyses.\r\n\r\nThe motivation for randomized algorithms is the need for streaming massive data sets that are too large for traditional deterministic algorithms.  Randomized algorithms have been implemented successfully for applications such as pattern recognition, social network analysis, population genetics, circuit testing, and text classification.  The proposed research will help to determine for which application domains a randomized algorithm is suitable, and it will also result in practical bounds and recommendations for parameter choices to achieve a user-specified accuracy.  The proposed research is highly relevant because randomized algorithms will be indispensable for exascale computing, in applications like high energy physics and astronomy, where peta bytes of data are expected to stream in daily and tasks like rare event detection make it imperative to have a good understanding of numerical accuracy and robustness.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ilse",
   "pi_last_name": "Ipsen",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Ilse C Ipsen",
   "pi_email_addr": "ipsen@ncsu.edu",
   "nsf_id": "000220534",
   "pi_start_date": "2011-07-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "North Carolina State University",
  "inst_street_address": "2601 WOLF VILLAGE WAY",
  "inst_street_address_2": "",
  "inst_city_name": "RALEIGH",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9195152444",
  "inst_zip_code": "276950001",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "NC02",
  "org_lgl_bus_name": "NORTH CAROLINA STATE UNIVERSITY",
  "org_prnt_uei_num": "U3NVH931QJJ3",
  "org_uei_num": "U3NVH931QJJ3"
 },
 "perf_inst": {
  "perf_inst_name": "North Carolina State University",
  "perf_str_addr": "2701 Sullivan Drive; Suite 240",
  "perf_city_name": "Raleigh",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "276958205",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "NC02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "7933",
   "pgm_ref_txt": "NUM, SYMBOL, & ALGEBRA COMPUT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 85000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>\"Big data\", the buzz word these days, means solving problems where the amount of incoming data is massive,&nbsp; often arriving in relentless uninterrupted&nbsp; streams. Examples include images beamed down from satellites circling the earth,&nbsp; and electromagnetic frequencies collected by telescopes scanning the night sky. A radical way to cope with too much stuff is to throw away most of it.</p>\n<p>Randomized algorithms -- in a very over-simplified nutshell -- do so by playing dice on what to throw away and what to keep. The question is under which circumstances&nbsp; radical dice playing can be relied upon to produce useful information.<br /><br />This question was investigated for tasks that, though basic,&nbsp; form fundamental building blocks for computational methods in statistics, science, engineering, and the data sciences. The tasks at hand are matrix computations, and in particular matrix multiplication, and least squares/regression.<br />&nbsp;<br /><strong>Intellectual Merit:</strong></p>\n<p>1. The PI assessed the accuracy of&nbsp; a&nbsp; Monte-Carlo algorithm for performing Gram matrix multiplication. Combining both, the traditional (deterministic) and a probabilistic perspective shows that the Monte-Carlo algorithm can produce useful if limited information -- but only if the data are&nbsp; highly redundant. <br /><br />(In technical terms:&nbsp; The structure of the right singular vector matrix determines whether the Monte Carlo algorithm has any chance at all to reproduce the exact product. The computed results in general can be accurate to 1-2 significant digits,&nbsp; provided the matrix has low rank and low stable rank.)&nbsp;&nbsp; <br /><br />2. One way to calibrate the \"dice playing\" part of a randomized algorithm is to design a testbed, where the data can be easily tuned to be: highly redundant, extremely discriminating, or anything in between. The algorithm's reaction to the testbed is evaluated by analyzing the data pieces that it decides to keep, and how well&nbsp; they represent the pieces that were thrown away and the data set as a whole. <br /><br />This investigation comes in especially handy for the solution of large-scale least squares/regression problems. Employing a randomized algorithm to construct a pre-processor for the solution process can result in significant time savings.<br /><br />(In technical terms: For uniform sampling of rows from matrices with orthonormal columns, the PI derives probabilistic bounds on the condition number of the sampled matrices, in terms of&nbsp; coherence and leverage scores. To validate the bounds and develop the test bed, the PI designs several algorithms&nbsp; for generating orthonormal matrices with specified coherence and leverage scores. One application is the solution of large-scale least squares/regression problems.&nbsp; When a Krylov space solver is accelerated by a randomized preconditioner, the condition number bound is required for establishing the convergence rate.)<br /><br />3. The research has provided a proof of principle for analyzing the accuracy and reliability of randomized algorithms in practical situations, for data sets of all sizes.&nbsp; <br /><br />(In technical terms: It is possible to derive explicit probabilistic error bounds that hold in a non-asymptotic context;&nbsp; and that are informative even when applied to matrices of small dimension, under stringent success probabilities.)<br /><br /><strong>Broader Impacts:</strong><br /><br />1.&nbsp; This research has produced analytical end empirical results&nbsp; to assess the accuracy and reliability of randomized matrix algorithms.&nbsp; The results establish the viability of randomized algorithms for practical applications with small and large datasets; and they assist users in deciding whether&nbsp; a randomized algorithm should be considered for their specific application.<br /><br />&nbsp;2. The research has p...",
  "por_txt_cntn": "\n\"Big data\", the buzz word these days, means solving problems where the amount of incoming data is massive,  often arriving in relentless uninterrupted  streams. Examples include images beamed down from satellites circling the earth,  and electromagnetic frequencies collected by telescopes scanning the night sky. A radical way to cope with too much stuff is to throw away most of it.\n\nRandomized algorithms -- in a very over-simplified nutshell -- do so by playing dice on what to throw away and what to keep. The question is under which circumstances  radical dice playing can be relied upon to produce useful information.\n\nThis question was investigated for tasks that, though basic,  form fundamental building blocks for computational methods in statistics, science, engineering, and the data sciences. The tasks at hand are matrix computations, and in particular matrix multiplication, and least squares/regression.\n \nIntellectual Merit:\n\n1. The PI assessed the accuracy of  a  Monte-Carlo algorithm for performing Gram matrix multiplication. Combining both, the traditional (deterministic) and a probabilistic perspective shows that the Monte-Carlo algorithm can produce useful if limited information -- but only if the data are  highly redundant. \n\n(In technical terms:  The structure of the right singular vector matrix determines whether the Monte Carlo algorithm has any chance at all to reproduce the exact product. The computed results in general can be accurate to 1-2 significant digits,  provided the matrix has low rank and low stable rank.)   \n\n2. One way to calibrate the \"dice playing\" part of a randomized algorithm is to design a testbed, where the data can be easily tuned to be: highly redundant, extremely discriminating, or anything in between. The algorithm's reaction to the testbed is evaluated by analyzing the data pieces that it decides to keep, and how well  they represent the pieces that were thrown away and the data set as a whole. \n\nThis investigation comes in especially handy for the solution of large-scale least squares/regression problems. Employing a randomized algorithm to construct a pre-processor for the solution process can result in significant time savings.\n\n(In technical terms: For uniform sampling of rows from matrices with orthonormal columns, the PI derives probabilistic bounds on the condition number of the sampled matrices, in terms of  coherence and leverage scores. To validate the bounds and develop the test bed, the PI designs several algorithms  for generating orthonormal matrices with specified coherence and leverage scores. One application is the solution of large-scale least squares/regression problems.  When a Krylov space solver is accelerated by a randomized preconditioner, the condition number bound is required for establishing the convergence rate.)\n\n3. The research has provided a proof of principle for analyzing the accuracy and reliability of randomized algorithms in practical situations, for data sets of all sizes.  \n\n(In technical terms: It is possible to derive explicit probabilistic error bounds that hold in a non-asymptotic context;  and that are informative even when applied to matrices of small dimension, under stringent success probabilities.)\n\nBroader Impacts:\n\n1.  This research has produced analytical end empirical results  to assess the accuracy and reliability of randomized matrix algorithms.  The results establish the viability of randomized algorithms for practical applications with small and large datasets; and they assist users in deciding whether  a randomized algorithm should be considered for their specific application.\n\n 2. The research has produced a testbed for the \"dice playing\" part of a randomized algorithm, which is user-friendly software package in the form of a Matlab Toolbox called kappa_SQ. Code and documentation for kappa_SQ are available on arXiv.\n\nkappa_SQ is designed with both, experts and students in mind. A variety of parameter choices makes it easy for expe..."
 }
}