{
 "awd_id": "1122956",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Integrating Computational and Creative Thinking (IC2Think)",
 "cfda_num": "47.076",
 "org_code": "11040200",
 "po_phone": "7032922832",
 "po_email": "ptymann@nsf.gov",
 "po_sign_block_name": "Paul Tymann",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2014-07-31",
 "tot_intn_awd_amt": 250000.0,
 "awd_amount": 250000.0,
 "awd_min_amd_letter_date": "2011-07-27",
 "awd_max_amd_letter_date": "2011-07-27",
 "awd_abstract_narration": "Computational thinking and creative thinking are two core competencies which are essential for STEM students.  Computational thinking provides students with competitive skills to do well in today's increasingly data-intensive industries.  Creative thinking is flexible, imaginative, innovative thinking which draws on all of one's skills and experience.  Combining these skills in STEM curricula strengthens their impact by expanding students' ability to solve complex, ill-defined and interdisciplinary problems.\r\n\r\nThis project will extend an existing suite of online learning modules that introduce computational thinking in introductory computer science courses.  The enhancements will introduce creative thinking through interactive exercises.  Each module contains a brief tutorial to introduce a topic, interactive exercises to reinforce the concepts and a series of questions to assess student learning.\r\n\r\nAssessment is partially automated by using embedded data collection tools, online quizzes and web-based surveys.  The long term goal is to promote computational and creating thinking in a variety of STEM disciplines.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DUE",
 "org_div_long_name": "Division Of Undergraduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Leen-Kiat",
   "pi_last_name": "Soh",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Leen-Kiat Soh",
   "pi_email_addr": "lksoh@cse.unl.edu",
   "nsf_id": "000409977",
   "pi_start_date": "2011-07-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Duane",
   "pi_last_name": "Shell",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Duane Shell",
   "pi_email_addr": "dshell2@unl.edu",
   "nsf_id": "000405847",
   "pi_start_date": "2011-07-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Elizabeth",
   "pi_last_name": "Ingraham",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Elizabeth Ingraham",
   "pi_email_addr": "eingraham2@unl.edu",
   "nsf_id": "000499034",
   "pi_start_date": "2011-07-27",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Stephen",
   "pi_last_name": "Ramsay",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stephen Ramsay",
   "pi_email_addr": "sramsay@unlserve.unl.edu",
   "nsf_id": "000502124",
   "pi_start_date": "2011-07-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Nebraska-Lincoln",
  "inst_street_address": "2200 VINE ST # 830861",
  "inst_street_address_2": "",
  "inst_city_name": "LINCOLN",
  "inst_state_code": "NE",
  "inst_state_name": "Nebraska",
  "inst_phone_num": "4024723171",
  "inst_zip_code": "685032427",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NE01",
  "org_lgl_bus_name": "BOARD OF REGENTS OF THE UNIVERSITY OF NEBRASKA",
  "org_prnt_uei_num": "",
  "org_uei_num": "HTQ6K6NJFHA6"
 },
 "perf_inst": {
  "perf_inst_name": "University of Nebraska-Lincoln",
  "perf_str_addr": "2200 VINE ST # 830861",
  "perf_city_name": "LINCOLN",
  "perf_st_code": "NE",
  "perf_st_name": "Nebraska",
  "perf_zip_code": "685032427",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NE01",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "153600",
   "pgm_ele_name": "S-STEM-Schlr Sci Tech Eng&Math"
  },
  {
   "pgm_ele_code": "751100",
   "pgm_ele_name": "TUES-Type 2 Project"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0411",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001112DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  },
  {
   "app_code": "13XX",
   "app_name": "H-1B FUND, EHR, NSF",
   "app_symb_id": "045176",
   "fund_code": "1300XXXXDB",
   "fund_name": "H-1B FUND, EDU, NSF",
   "fund_symb_id": "045176"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 250000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In the IC2Think project, we proposed that learning computational thinking can be improved through synergy between computational and creative thinking.&nbsp; By blending computational and creative thinking, students can leverage their creative thinking skills to &ldquo;unlock&rdquo; their understanding of computational thinking.&nbsp; In this way, we can make computational thinking more generally applicable to STEM and non-STEM disciplines where students may have creative thinking skills but lack understanding of computing concepts.&nbsp; The reverse is also true: students who understand computational thinking could leverage it to improve their creative thinking skills. We have referred to this blending as <em>computational creativity</em>. The IC2Think project developed exercises that blend computational and creative thinking and investigated their impact on student learning and performance in introductory computer science courses.&nbsp; Our Computational Creativity Exercises (CCEs) were developed by an interdisciplinary team from computer science, educational psychology, art, and English.&nbsp; The CCEs are designed to provide instruction on computer science concepts such as conditionals, arrays, modular programming, and debugging but without requiring any programming code.&nbsp; Instead, the CCEs involve tasks seemingly unrelated to computer science, such as individually writing the chapters for a story based on separate plot points and then working in a group to revise the story to make the content more cohesive.&nbsp; This makes students focus on and apply the more abstract computational thinking principles that underlie the computer science concepts, providing the attention focusing, repetition, and connection of information required for learning as discussed in the Unified Learning Model.&nbsp; The exercises are designed to foster development of Epstein&rsquo;s creative competencies of broadening, surrounding, challenging, and capturing by engaging multiple senses, requiring integrative, imaginative thought, presenting challenging problems and combining both individual and group efforts. The principles underlying the design of our CCEs are (1) balancing of attributes between computational and creative thinking and (2) mapping between computational and creative concepts and skills as they manifest in different disciplines. By combining hands-on problem solving with written analysis and by requiring groups of students to work collaboratively, the CCEs draw on the diverse backgrounds of the students.</p>\n<p>We deployed four CCEs in four introductory computer science courses with 150 students.&nbsp; The results indicated a &ldquo;dosage&rdquo; effect, i.e., learning and course achievement increased with each additional CCE completed.&nbsp; These increases were <em>not</em> trivial.&nbsp; Students increased by almost a letter grade per exercise completed. We also found that higher student creative competency scores were associated with higher levels of learning, strategic self-regulation, deep learning strategies, and engagement.&nbsp; In a second study, students in a course with CCEs had significantly higher scores on a test of computational thinking and computer science knowledge and higher self-efficacy for using their CS skills in their field than students in the same course without CCE implementation.&nbsp; &nbsp;We also found that both computer science majors and non-majors benefitted from the CCEs.&nbsp; In relation to traditional findings for classroom educational interventions, these are strong effects that also demonstrate meaningful &ldquo;real world&rdquo; impact.&nbsp; The IC2Think project has shown promising results for improving education in STEM (and also non-STEM) disciplines, in term of student performance, recruitment, retention, and also in broadening participation in computing and increasing diversity.&nbsp; In contrast to stand-alone courses,...",
  "por_txt_cntn": "\nIn the IC2Think project, we proposed that learning computational thinking can be improved through synergy between computational and creative thinking.  By blending computational and creative thinking, students can leverage their creative thinking skills to \"unlock\" their understanding of computational thinking.  In this way, we can make computational thinking more generally applicable to STEM and non-STEM disciplines where students may have creative thinking skills but lack understanding of computing concepts.  The reverse is also true: students who understand computational thinking could leverage it to improve their creative thinking skills. We have referred to this blending as computational creativity. The IC2Think project developed exercises that blend computational and creative thinking and investigated their impact on student learning and performance in introductory computer science courses.  Our Computational Creativity Exercises (CCEs) were developed by an interdisciplinary team from computer science, educational psychology, art, and English.  The CCEs are designed to provide instruction on computer science concepts such as conditionals, arrays, modular programming, and debugging but without requiring any programming code.  Instead, the CCEs involve tasks seemingly unrelated to computer science, such as individually writing the chapters for a story based on separate plot points and then working in a group to revise the story to make the content more cohesive.  This makes students focus on and apply the more abstract computational thinking principles that underlie the computer science concepts, providing the attention focusing, repetition, and connection of information required for learning as discussed in the Unified Learning Model.  The exercises are designed to foster development of Epstein\u00c6s creative competencies of broadening, surrounding, challenging, and capturing by engaging multiple senses, requiring integrative, imaginative thought, presenting challenging problems and combining both individual and group efforts. The principles underlying the design of our CCEs are (1) balancing of attributes between computational and creative thinking and (2) mapping between computational and creative concepts and skills as they manifest in different disciplines. By combining hands-on problem solving with written analysis and by requiring groups of students to work collaboratively, the CCEs draw on the diverse backgrounds of the students.\n\nWe deployed four CCEs in four introductory computer science courses with 150 students.  The results indicated a \"dosage\" effect, i.e., learning and course achievement increased with each additional CCE completed.  These increases were not trivial.  Students increased by almost a letter grade per exercise completed. We also found that higher student creative competency scores were associated with higher levels of learning, strategic self-regulation, deep learning strategies, and engagement.  In a second study, students in a course with CCEs had significantly higher scores on a test of computational thinking and computer science knowledge and higher self-efficacy for using their CS skills in their field than students in the same course without CCE implementation.   We also found that both computer science majors and non-majors benefitted from the CCEs.  In relation to traditional findings for classroom educational interventions, these are strong effects that also demonstrate meaningful \"real world\" impact.  The IC2Think project has shown promising results for improving education in STEM (and also non-STEM) disciplines, in term of student performance, recruitment, retention, and also in broadening participation in computing and increasing diversity.  In contrast to stand-alone courses, our CCEs are more \"user friendly\"&mdash;i.e., accessible to a broader audience of students from many disciplines and easier to adopt by instructors and faculty in a variety of classroom and distance settings. The..."
 }
}