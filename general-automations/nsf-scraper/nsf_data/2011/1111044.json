{
 "awd_id": "1111044",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: Programming with Crowds: Models and Tools for General Purpose Crowdsourcing",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Frederick Kronz",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2015-08-31",
 "tot_intn_awd_amt": 369067.0,
 "awd_amount": 369067.0,
 "awd_min_amd_letter_date": "2011-09-19",
 "awd_max_amd_letter_date": "2011-09-19",
 "awd_abstract_narration": "Crowdsourcing is a powerful way to marshal small contributions from large numbers of people to solve real-world problems. Success stories range from classifying craters on Mars' surface (ClickWorker) to labeling images (the ESP Game, now Google Image Labeler) to task marketplaces (Amazon's Mechanical Turk). This project moves towards a vision of crowdsourcing that extends it to support complex, creative, and interdependent tasks, and embeds it into computing systems as part of our everyday lives. The project will focus on two application areas for complex crowdsourcing: science journalism and software development.\r\n\r\nThe intellectual merits of the project include the uncovering of new scientific knowledge about how to model online crowd behavior, and the development of new methods and tools for using crowds as part of computer system designs, particularly for complex, interdependent, real time work. The project will also show that these methods can be used for real-world problems. \r\n\r\nThe potential broader impacts include those specifically having to do with the two application areas, which could have significant impacts on society. Crowdsourcing science journalism will directly involve citizens in the process of science dissemination, making scientific information more accessible to the general public, and promoting greater awareness of science and the scientific process. Crowdsourcing software development can transform the way that software is created, lowering barriers and broadening participation in open source software development, and helping larger masses of people use and improve their programming skills. Other impacts will flow from the researchers' plans to publically share the infrastructure that they develop to facilitate complex crowdsourcing in many other areas. They also plan to integrate their research results into undergraduate courses.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Robert",
   "pi_last_name": "Miller",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Robert C Miller",
   "pi_email_addr": "rcm@mit.edu",
   "nsf_id": "000222423",
   "pi_start_date": "2011-09-19",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Massachusetts Institute of Technology",
  "inst_street_address": "77 MASSACHUSETTS AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172531000",
  "inst_zip_code": "021394301",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "E2NYLCDML6V1",
  "org_uei_num": "E2NYLCDML6V1"
 },
 "perf_inst": {
  "perf_inst_name": "Massachusetts Institute of Technology",
  "perf_str_addr": "77 MASSACHUSETTS AVE",
  "perf_city_name": "CAMBRIDGE",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021394301",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "795300",
   "pgm_ele_name": "SOCIAL-COMPUTATIONAL SYSTEMS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7953",
   "pgm_ref_txt": "SOCIAL-COMPUTATIONAL SYSTEMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 369067.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Crowdsourcing is a powerful way to collect small contributions from large numbers of people on the web to solve real-world problems. Success stories range from classifying craters on Mars' surface (ClickWorker) to labeling images (the ESP Game, now Google Image Labeler) to task marketplaces (Amazon's Mechanical Turk).</p>\n<p>This project has extended the frontiers of crowdsourcing in several directions, including (1) realtime crowdsourcing, (2) communitysourcing for solving problems with complex constraints, and (3) learnersourcing for education.</p>\n<p><strong>Realtime crowdsourcing</strong> means that the crowd&rsquo;s help is needed within seconds, rather than hours or days, in order to support an interactive application. &nbsp;Examples of interactive applications we have built that depend on realtime crowds include VizWiz, a smartphone app that allows a blind user to take a picture, ask a question about it, and get answers from a crowd in less than a minute; and Adrenaline, a camera app with a &ldquo;crowd-controlled shutter&rdquo;, which captures a short video and sends it to a crowd to choose the best frame to keep, getting the answer back in seconds.</p>\n<p><strong>Communitysourcing</strong> combines small contributions from members of a community to solve a complex problem. &nbsp;In collaboration with Carnegie Mellon University, Northwestern University, and University of Washington, our Cobi project has developed ways to use communitysourcing to create a schedule for a large multi-track research conference. &nbsp;Scheduling a conference is a daunting task, requiring consideration of the preferences and constraints of organizers, authors, and attendees. Traditionally, a few dedicated organizers manage the size and complexity of the schedule with limited information and coverage. Cobi consists of a collection of crowdsourcing applications that collect preferences and constraints from the community, and a visual scheduling interface that enables organizers and other community members to take informed actions based on collected information.</p>\n<p><strong>Learnersourcing</strong> draws on crowds of learners, who might be students enrolled in a MOOC or people learning informally from online resources like YouTube how-to videos, to contribute small bits of work that improve the learning experience of the system. We have been studying two kinds of learnersourcing: passive learnersourcing, which uses behavior traces from learners as they interact with learning materials to improve them, and active learnersourcing, which directly asks learners to do a small amount of work. &nbsp;The kinds of work that our systems collect have ranged from small bits of programming, to video outlines, to hints about solving assignments.</p>\n<p>The project has contributed support to 5 PhD students and 4 masters students at MIT, and work associated with the project has produced at least 19 research papers and 7 theses, and at least 8 software systems that are available as open source.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/30/2015<br>\n\t\t\t\t\tModified by: Robert&nbsp;C&nbsp;Miller</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nCrowdsourcing is a powerful way to collect small contributions from large numbers of people on the web to solve real-world problems. Success stories range from classifying craters on Mars' surface (ClickWorker) to labeling images (the ESP Game, now Google Image Labeler) to task marketplaces (Amazon's Mechanical Turk).\n\nThis project has extended the frontiers of crowdsourcing in several directions, including (1) realtime crowdsourcing, (2) communitysourcing for solving problems with complex constraints, and (3) learnersourcing for education.\n\nRealtime crowdsourcing means that the crowd\u00c6s help is needed within seconds, rather than hours or days, in order to support an interactive application.  Examples of interactive applications we have built that depend on realtime crowds include VizWiz, a smartphone app that allows a blind user to take a picture, ask a question about it, and get answers from a crowd in less than a minute; and Adrenaline, a camera app with a \"crowd-controlled shutter\", which captures a short video and sends it to a crowd to choose the best frame to keep, getting the answer back in seconds.\n\nCommunitysourcing combines small contributions from members of a community to solve a complex problem.  In collaboration with Carnegie Mellon University, Northwestern University, and University of Washington, our Cobi project has developed ways to use communitysourcing to create a schedule for a large multi-track research conference.  Scheduling a conference is a daunting task, requiring consideration of the preferences and constraints of organizers, authors, and attendees. Traditionally, a few dedicated organizers manage the size and complexity of the schedule with limited information and coverage. Cobi consists of a collection of crowdsourcing applications that collect preferences and constraints from the community, and a visual scheduling interface that enables organizers and other community members to take informed actions based on collected information.\n\nLearnersourcing draws on crowds of learners, who might be students enrolled in a MOOC or people learning informally from online resources like YouTube how-to videos, to contribute small bits of work that improve the learning experience of the system. We have been studying two kinds of learnersourcing: passive learnersourcing, which uses behavior traces from learners as they interact with learning materials to improve them, and active learnersourcing, which directly asks learners to do a small amount of work.  The kinds of work that our systems collect have ranged from small bits of programming, to video outlines, to hints about solving assignments.\n\nThe project has contributed support to 5 PhD students and 4 masters students at MIT, and work associated with the project has produced at least 19 research papers and 7 theses, and at least 8 software systems that are available as open source.\n\n\t\t\t\t\tLast Modified: 11/30/2015\n\n\t\t\t\t\tSubmitted by: Robert C Miller"
 }
}