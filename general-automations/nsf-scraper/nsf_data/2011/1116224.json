{
 "awd_id": "1116224",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: RUI: A Fast Backing Store System on top of Network RAM, Flash, and other Cluster-wide Storage",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2016-09-30",
 "tot_intn_awd_amt": 213224.0,
 "awd_amount": 213224.0,
 "awd_min_amd_letter_date": "2011-08-27",
 "awd_max_amd_letter_date": "2011-08-27",
 "awd_abstract_narration": "It is increasingly important to design cluster systems that efficiently support data-intensive computing. Parallel scientific and multimedia applications often perform large amounts of I/O either indirectly, due to swapping, or directly, due to temporary file accesses.  As the disparity between the speeds of magnetic disk and other hardware such as RAM, interconnection networks, and flash continues to grow, the cost of accessing disk will increasingly become the bottleneck to system performance.  \r\n\r\nThe objective of our project is to design and implement a fast backing storage system for clusters and local area networks.  Our system provides a single device interface on top of multiple heterogeneous cluster-wide physical storage, particularly targeting fast random-access storage such as Network RAM and flash.  Our work will free the OS from requiring  multiple device-specific policies in its paging and file systems for every combination of underlying physical storage devices.  As new technologies are developed, the low-level part of our system will incorporate them into its set of heterogeneous physical storage, but the OS will continue to use the same high-level interface of our system, that of a single, fast, random-access device.\r\n\r\nThe main goals of our work are: to take advantage of all types of fast storage in a cluster; to provide a single device interface that is independent of the underlying physical storage; to create a storage system that can adapt to changes in resource utilization and capacity; and to develop and examine policies for data placement and data migration between underlying devices.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Tia",
   "pi_last_name": "Newhall",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Tia Newhall",
   "pi_email_addr": "newhall@cs.swarthmore.edu",
   "nsf_id": "000065841",
   "pi_start_date": "2011-08-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Swarthmore College",
  "inst_street_address": "500 COLLEGE AVE",
  "inst_street_address_2": "",
  "inst_city_name": "SWARTHMORE",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "6103288000",
  "inst_zip_code": "190811390",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "PA05",
  "org_lgl_bus_name": "SWARTHMORE COLLEGE",
  "org_prnt_uei_num": "",
  "org_uei_num": "KPALJZQMJAX6"
 },
 "perf_inst": {
  "perf_inst_name": "Swarthmore College",
  "perf_str_addr": "500 COLLEGE AVE",
  "perf_city_name": "SWARTHMORE",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "190811390",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "PA05",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "1714",
   "pgm_ref_txt": "SPECIAL PROJECTS - CISE"
  },
  {
   "pgm_ref_code": "9229",
   "pgm_ref_txt": "RES IN UNDERGRAD INST-RESEARCH"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 213224.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In the era of Big Data computing, applications often create and process data whose cumulative size is too large to fit into the aggregate memory (RAM) of the set of computers on which they run.&nbsp; When these data-intensive applications are run on general-purpose parallel cluster computers, they may result in data being moved temporarily to slower secondary storage devices (traditionally magnetic disk), in order to free up some RAM space to store data that is being currently processed by the application.&nbsp;&nbsp; This movement to and from secondary storage could be the result of the virtual memory system swapping on individual cluster nodes, or the result of applications using the file system to create and store temporary files containing partial results (external sorting algorithms, and MapReduce are two examples that make use of temporary files).<br /><br />At the same time that applications are stressing the memory hierarchy, the types of secondary storage devices is increasingly diverse.&nbsp; It is common for clusters to have both HDD and SDD drives, other emerging storage technologies, such as phase change memory (PCM), may become more common in the future.&nbsp; In addition, imbalances in application workload across cluster nodes results in some nodes having idle RAM while others have an insufficient amount of RAM to run their local workload.&nbsp; This idle RAM can implement network RAM storage that can be used to store swap or file data.&nbsp; As the disparity continues to grow in the speed of HDD versus other devices such as RAM, network, SSD and PCM, the cost of accessing disk---either as a backing store for swapped pages or files---is increasingly the bottleneck to achieving good performance in these systems.&nbsp; To support efficient data intensive computing, it is is important that cluster node OSs make the most effective use of all types of available fast backing store in a cluster.<br /><br />The goal of our project is to design and implement a system that provides fast backing storage for swap and file data by combining heterogeneous storage devices that are increasingly common in clusters.&nbsp; Additionally, we want to hide the complexity of managing heterogeneous storage from node OSs, allowing this storage to be used in a wide range of contexts without having to modify OS subsystems or applications to use.&nbsp; Finally, we want to provide an adaptable system that easily incorporates new storage devices and provides tunable and adaptable policies to dynamically take advantage of available cluster resources, and to take advantage of the strengths of different types of underlying storage media.<br /><br />We designed, implemented and tested a fully working version of our Nswap2L system.&nbsp; It can be added as backing store for swap or file systems on cluster nodes running unmodified Linux 4.0 kernels.&nbsp;&nbsp; Nswap2L is designed to manage multiple underlying storage devices, and any type of underlying storage device that can be added as a device partition.&nbsp; We have tested Nswap2L with underlying magnetic disk, flash, and Network RAM storage.&nbsp; Our extensive /sys interface to the Nswap2L backing \"device\" allows users to add new underlying storage devices on the fly, and to change data placement and migration policies as Nswap2L runs.&nbsp; This project also supported five undergraduate students at Swarthmore College, two of whom are co-authors on publications resulting from their work.&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/26/2017<br>\n\t\t\t\t\tModified by: Tia&nbsp;Newhall</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn the era of Big Data computing, applications often create and process data whose cumulative size is too large to fit into the aggregate memory (RAM) of the set of computers on which they run.  When these data-intensive applications are run on general-purpose parallel cluster computers, they may result in data being moved temporarily to slower secondary storage devices (traditionally magnetic disk), in order to free up some RAM space to store data that is being currently processed by the application.   This movement to and from secondary storage could be the result of the virtual memory system swapping on individual cluster nodes, or the result of applications using the file system to create and store temporary files containing partial results (external sorting algorithms, and MapReduce are two examples that make use of temporary files).\n\nAt the same time that applications are stressing the memory hierarchy, the types of secondary storage devices is increasingly diverse.  It is common for clusters to have both HDD and SDD drives, other emerging storage technologies, such as phase change memory (PCM), may become more common in the future.  In addition, imbalances in application workload across cluster nodes results in some nodes having idle RAM while others have an insufficient amount of RAM to run their local workload.  This idle RAM can implement network RAM storage that can be used to store swap or file data.  As the disparity continues to grow in the speed of HDD versus other devices such as RAM, network, SSD and PCM, the cost of accessing disk---either as a backing store for swapped pages or files---is increasingly the bottleneck to achieving good performance in these systems.  To support efficient data intensive computing, it is is important that cluster node OSs make the most effective use of all types of available fast backing store in a cluster.\n\nThe goal of our project is to design and implement a system that provides fast backing storage for swap and file data by combining heterogeneous storage devices that are increasingly common in clusters.  Additionally, we want to hide the complexity of managing heterogeneous storage from node OSs, allowing this storage to be used in a wide range of contexts without having to modify OS subsystems or applications to use.  Finally, we want to provide an adaptable system that easily incorporates new storage devices and provides tunable and adaptable policies to dynamically take advantage of available cluster resources, and to take advantage of the strengths of different types of underlying storage media.\n\nWe designed, implemented and tested a fully working version of our Nswap2L system.  It can be added as backing store for swap or file systems on cluster nodes running unmodified Linux 4.0 kernels.   Nswap2L is designed to manage multiple underlying storage devices, and any type of underlying storage device that can be added as a device partition.  We have tested Nswap2L with underlying magnetic disk, flash, and Network RAM storage.  Our extensive /sys interface to the Nswap2L backing \"device\" allows users to add new underlying storage devices on the fly, and to change data placement and migration policies as Nswap2L runs.  This project also supported five undergraduate students at Swarthmore College, two of whom are co-authors on publications resulting from their work. \n\n\t\t\t\t\tLast Modified: 02/26/2017\n\n\t\t\t\t\tSubmitted by: Tia Newhall"
 }
}