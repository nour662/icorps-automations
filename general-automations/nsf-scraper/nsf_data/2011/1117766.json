{
 "awd_id": "1117766",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "III: Small: On the Conceptual Evaluation and Optimization of Queries in Spatiotemporal Data Systems",
 "cfda_num": "47.070",
 "org_code": "05020000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Maria Zemankova",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2016-08-31",
 "tot_intn_awd_amt": 496889.0,
 "awd_amount": 496889.0,
 "awd_min_amd_letter_date": "2011-08-08",
 "awd_max_amd_letter_date": "2011-08-08",
 "awd_abstract_narration": "The goal of this project is to research and develop techniques for the correct conceptual evaluation, processing, and optimization of multi-predicate spatial (MPS) queries in support of location-based services. The project achieves its goal using the following approaches: (1) Study the characteristics of MPS queries and develop a new consistent and provably correct conceptual evaluation strategy for MPS queries similar to the one for relational SQL queries; (2) Develop various query transformation rules that not only retain correctness but also transform MPS query execution plans into more efficient ones; (3) Investigate the validity of well-known relational optimization heuristics in the context of MPS queries and develop innovative optimization algorithms unique to MPS queries; (4) Develop a cost model to aid the query optimizer in selecting the best query execution plans for MPS queries and study the impact of the variation on temporal and spatial moving object distributions on MPS query execution plans; (5) Develop new adaptive spatiotemporal query processing techniques that can cope with the dynamic nature and scale of moving object environments; (6) Prototype an MPS location server that reflects the correct evaluation and efficient optimized execution of continuous and adaptive MPS operators; and (7) Develop simulators and analytical models to evaluate the performance of the developed techniques. The research results are beneficial to many applications including location servers, intelligent transportation systems, smart cities, supply chain management, and emergency response and recovery.\r\n\r\nThis project supports Ph.D. students to pursue research in the areas of spatiotemporal data management systems and advanced location servers, and involves undergraduate students in related research projects. The project develops and introduces a new entry-level undergraduate programming course around 2D and 3D map operations and queries that utilizes MPS queries and integrates the research results from the project to increase the interest in programming of students from Computer Science as well as from other Science disciplines. The project involves minority students through the Discovery Learning Center at Purdue Discovery Park and the Louis Stokes Alliance for Minority Participation (LSAMP) project and Alliances for Graduate Education Program (AGEP). Publications, technical reports, software and experimental data from this research are available at the project web site (http://www.cs.purdue.edu/~aref/MPS).",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "IIS",
 "org_div_long_name": "Division of Information & Intelligent Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Walid",
   "pi_last_name": "Aref",
   "pi_mid_init": "G",
   "pi_sufx_name": "",
   "pi_full_name": "Walid G Aref",
   "pi_email_addr": "aref@cs.purdue.edu",
   "nsf_id": "000235103",
   "pi_start_date": "2011-08-08",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Mourad",
   "pi_last_name": "Ouzzani",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mourad Ouzzani",
   "pi_email_addr": "mourad@cs.purdue.edu",
   "nsf_id": "000241303",
   "pi_start_date": "2011-08-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Purdue University",
  "inst_street_address": "2550 NORTHWESTERN AVE # 1100",
  "inst_street_address_2": "",
  "inst_city_name": "WEST LAFAYETTE",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "7654941055",
  "inst_zip_code": "479061332",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IN04",
  "org_lgl_bus_name": "PURDUE UNIVERSITY",
  "org_prnt_uei_num": "YRXVL4JYCEF5",
  "org_uei_num": "YRXVL4JYCEF5"
 },
 "perf_inst": {
  "perf_inst_name": "Purdue University",
  "perf_str_addr": "2550 NORTHWESTERN AVE # 1100",
  "perf_city_name": "WEST LAFAYETTE",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "479061332",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IN04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736400",
   "pgm_ele_name": "Info Integration & Informatics"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 496889.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Location services have become ubiquitous with the popularity of smart phones, GPS devices, and social networks. Users and applications demand sophisticated location-based querying capabilities that current service providers cannot handle. The reasons are due to the increasing complexity of these applications and location services, the ambiguity in expressing and evaluating these location-based queries, and the slow response time in evaluating these queries. Current location-servers and location-based query systems support only one location-based operation, e.g., finding objects of interest within a geographic range, or finding the k-nearest objects of interest. Combining more than one location-based operation to answer complex location-based queries has many challenges and is the target of this project. The goal of this project is to develop a database query processing system that supports any combination of location-based, relational, and textual operations that match the needs and complexity of location-aware services. In the initial phase of this project, we were able to identify location-based application scenarios and their associated queries that current state-of-the-art location-based query systems cannot handle. We were able to isolate, identify, and classify the reasons for what makes these queries hard to handle. Challenges that arise when handling these queries include:</p>\n<p>(1) Depending on the order of execution of the multiple location-based operations, the result of the query will differ, hence introducing ambiguities.</p>\n<p>(2) How to determine what the correct answer for these queries should be and on what bases?</p>\n<p>(3) How to efficiently execute these queries while preserving correctness?</p>\n<p>(4) Finally, how to adapt well-known techniques for optimizing queries in traditional database systems to still be applicable in the context of the complex multi-predicate location-based queries?</p>\n<p>Our research in this project addressed these challenges.</p>\n<p><span style=\"font-size: 12px;\"><span style=\"white-space: pre;\"> </span>In 2012/2013, we focused on expanding the capabilities of multi-predicate location-based query servers along several dimensions. We explored various combinations of relational and spatial operations. We studied the role of crowds in database indexing techniques, and semantic web location-based linked data architectures.</span></p>\n<p><span style=\"font-size: 12px;\"><span style=\"white-space: pre;\"> </span>In 2013/2014, we studied how to optimize queries that involve both spatial and relational predicates. We developed novel costing techniques for nearest-neighbor operations when executing in conjunction with relational operators. We extended this work to trajectories with limited histories that address user privacy. We studied how query execution plans can adapt under dynamically changing conditions. We extended this research to \"approximate\" nearest-neighbor computations. We studied how human actions can be part of a database transaction.</span></p>\n<p><span style=\"white-space: pre;\"> </span>In 2014/2015, we completed an important milestone in supporting&nbsp;multi-predicate location-based query processing systems. We studied the various query semantics for k-nearest-neighbor operators and their interactions with relational operators, and the various algorithmic optimizations that lead to orders of magnitude enhancement in performance. We studied how to efficiently process various similarity-search queries both in a centralized and distributed setups.</p>\n<p><span style=\"white-space: pre;\"> </span>In 2015/2016, we studied proximity-based grouping operations. We studied how to use semantics over web data to learn how to geo-tag non-spatial concepts (e.g., crime or pollution) and show potential locations of these non-spatial concepts over the map. We developed Tornado; a prototype system for scalable organization and query processing of Big Spatial Data. Tornado addresses the needs of micro-blogging applications where text data is often associated with location data, e.g., as in check-in systems. We developed further the LIMO map-centric programming language environment that helps College freshmen learn programming concepts using maps. Through the development of LIMO, we highlighted the importance of map-centric programming. In a vision paper, we identified challenges and open questions to develop further map-centric programming environments and expand its use. To address privacy challenges, we adapted&nbsp;spatial indexing and spatial query processing techniques to apply in the context of access control and preserving privacy. We investigated adaptive query processing and caching techniques for big spatial data in in-memory distributed setups. Finally, we developed a graph-indexing technique to compute shortest-paths over any portion of the graph.</p>\n<p><span style=\"font-size: 12px;\"><span style=\"white-space: pre;\"> </span>In 2016/2017, we developed two prototypes, AQWA and LocationSpark, towards scalable organization and query processing of Big Spatial Data. AQWA focuses on dynamic and online query-workload-aware spatial data organization that achieves up to two orders of magnitude enhancement in performance over other static and existing big spatial data platforms. In contrast, LocationSpark is a distributed in-memory data management system for big spatial data that uses advanced spatial filtering techniques. Also, we studied spatial trending queries over real-time microblogs. We designed a new query language, Atlas, to express all spatial-keyword queries.</span></p>\n<p><span style=\"font-size: 12px;\"><span style=\"white-space: pre;\"> </span>Two Ph.D. students graduated in the context of this project. Results of the conducted research were disseminated through publishing in prestigious and highly visible journal and conference venues, giving tutorials in highly visible and top-tier conferences, publishing overview articles. We have won several best-paper awards and our visionary article on the future of Spatial Computing was featured in the cover page of the very widely circulated and prestigious 2016 Communications of the ACM.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/07/2017<br>\n\t\t\t\t\tModified by: Walid&nbsp;G&nbsp;Aref</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nLocation services have become ubiquitous with the popularity of smart phones, GPS devices, and social networks. Users and applications demand sophisticated location-based querying capabilities that current service providers cannot handle. The reasons are due to the increasing complexity of these applications and location services, the ambiguity in expressing and evaluating these location-based queries, and the slow response time in evaluating these queries. Current location-servers and location-based query systems support only one location-based operation, e.g., finding objects of interest within a geographic range, or finding the k-nearest objects of interest. Combining more than one location-based operation to answer complex location-based queries has many challenges and is the target of this project. The goal of this project is to develop a database query processing system that supports any combination of location-based, relational, and textual operations that match the needs and complexity of location-aware services. In the initial phase of this project, we were able to identify location-based application scenarios and their associated queries that current state-of-the-art location-based query systems cannot handle. We were able to isolate, identify, and classify the reasons for what makes these queries hard to handle. Challenges that arise when handling these queries include:\n\n(1) Depending on the order of execution of the multiple location-based operations, the result of the query will differ, hence introducing ambiguities.\n\n(2) How to determine what the correct answer for these queries should be and on what bases?\n\n(3) How to efficiently execute these queries while preserving correctness?\n\n(4) Finally, how to adapt well-known techniques for optimizing queries in traditional database systems to still be applicable in the context of the complex multi-predicate location-based queries?\n\nOur research in this project addressed these challenges.\n\n In 2012/2013, we focused on expanding the capabilities of multi-predicate location-based query servers along several dimensions. We explored various combinations of relational and spatial operations. We studied the role of crowds in database indexing techniques, and semantic web location-based linked data architectures.\n\n In 2013/2014, we studied how to optimize queries that involve both spatial and relational predicates. We developed novel costing techniques for nearest-neighbor operations when executing in conjunction with relational operators. We extended this work to trajectories with limited histories that address user privacy. We studied how query execution plans can adapt under dynamically changing conditions. We extended this research to \"approximate\" nearest-neighbor computations. We studied how human actions can be part of a database transaction.\n\n In 2014/2015, we completed an important milestone in supporting multi-predicate location-based query processing systems. We studied the various query semantics for k-nearest-neighbor operators and their interactions with relational operators, and the various algorithmic optimizations that lead to orders of magnitude enhancement in performance. We studied how to efficiently process various similarity-search queries both in a centralized and distributed setups.\n\n In 2015/2016, we studied proximity-based grouping operations. We studied how to use semantics over web data to learn how to geo-tag non-spatial concepts (e.g., crime or pollution) and show potential locations of these non-spatial concepts over the map. We developed Tornado; a prototype system for scalable organization and query processing of Big Spatial Data. Tornado addresses the needs of micro-blogging applications where text data is often associated with location data, e.g., as in check-in systems. We developed further the LIMO map-centric programming language environment that helps College freshmen learn programming concepts using maps. Through the development of LIMO, we highlighted the importance of map-centric programming. In a vision paper, we identified challenges and open questions to develop further map-centric programming environments and expand its use. To address privacy challenges, we adapted spatial indexing and spatial query processing techniques to apply in the context of access control and preserving privacy. We investigated adaptive query processing and caching techniques for big spatial data in in-memory distributed setups. Finally, we developed a graph-indexing technique to compute shortest-paths over any portion of the graph.\n\n In 2016/2017, we developed two prototypes, AQWA and LocationSpark, towards scalable organization and query processing of Big Spatial Data. AQWA focuses on dynamic and online query-workload-aware spatial data organization that achieves up to two orders of magnitude enhancement in performance over other static and existing big spatial data platforms. In contrast, LocationSpark is a distributed in-memory data management system for big spatial data that uses advanced spatial filtering techniques. Also, we studied spatial trending queries over real-time microblogs. We designed a new query language, Atlas, to express all spatial-keyword queries.\n\n Two Ph.D. students graduated in the context of this project. Results of the conducted research were disseminated through publishing in prestigious and highly visible journal and conference venues, giving tutorials in highly visible and top-tier conferences, publishing overview articles. We have won several best-paper awards and our visionary article on the future of Spatial Computing was featured in the cover page of the very widely circulated and prestigious 2016 Communications of the ACM.\n\n \n\n\t\t\t\t\tLast Modified: 06/07/2017\n\n\t\t\t\t\tSubmitted by: Walid G Aref"
 }
}