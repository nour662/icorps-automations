{
 "awd_id": "1048199",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CiC: (SEA): Exploring Azure as a Platform for Interactive Protein-Protein Docking",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2011-04-01",
 "awd_exp_date": "2014-01-31",
 "tot_intn_awd_amt": 421000.0,
 "awd_amount": 421000.0,
 "awd_min_amd_letter_date": "2011-03-28",
 "awd_max_amd_letter_date": "2011-03-28",
 "awd_abstract_narration": "This project at the J. Craig Venter Institute is developing a client-cloud application for protein-protein docking on the Azure platform. The project is designing a self-scaling computational docking server deployed in the cloud and driven by a cross-platform desktop molecular viewer.\r\nThe Azure infrastructure is being explored for numerical computations with a coarse-grained parallelism. A fault-tolerant cloud component is being built to expose both programmatic and Web form interfaces.\r\nEconomically optimal scaling strategies are being studied to address the fluctuating demand within each user session, using instance pooling across sessions and predictive instance deployment.\r\nA popular 3D molecular viewer PyMol is being extended with protein-protein docking operations that can be executed by the cloud component in parallel, thus making possible the interactive user-driven simulation protocols.\r\nBy using a cloud platform, this project works to make the interactive protein-protein docking simulations available to any group of biologists irrespective of location, without forcing them to maintain substantial local computing resources required for such numerically intensive methodology. The docking simulations are used to uncover the details of protein-protein interactions that form the basis of functions in any living organism.\r\nThe project?s code and executables are being released under an open-source license.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Andrey",
   "pi_last_name": "Tovchigrechko",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Andrey Tovchigrechko",
   "pi_email_addr": "tovchigrechkoa@medimmune.com",
   "nsf_id": "000510426",
   "pi_start_date": "2011-03-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "J. Craig Venter Institute, Inc.",
  "inst_street_address": "4120 CAPRICORN LN",
  "inst_street_address_2": "",
  "inst_city_name": "LA JOLLA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8582001864",
  "inst_zip_code": "920373498",
  "inst_country_name": "United States",
  "cong_dist_code": "50",
  "st_cong_dist_code": "CA50",
  "org_lgl_bus_name": "J. CRAIG VENTER INSTITUTE, INC.",
  "org_prnt_uei_num": "",
  "org_uei_num": "FL8UNYTG72D1"
 },
 "perf_inst": {
  "perf_inst_name": "J. Craig Venter Institute, Inc.",
  "perf_str_addr": "4120 CAPRICORN LN",
  "perf_city_name": "LA JOLLA",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "920373498",
  "perf_ctry_code": "US",
  "perf_cong_dist": "50",
  "perf_st_cong_dist": "CA50",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "164000",
   "pgm_ele_name": "Information Technology Researc"
  },
  {
   "pgm_ele_code": "727500",
   "pgm_ele_name": "Cross-BIO Activities"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1640",
   "pgm_ref_txt": "INFORMATION TECHNOLOGY RESEARC"
  },
  {
   "pgm_ref_code": "8010",
   "pgm_ref_txt": "Computing in the Cloud"
  },
  {
   "pgm_ref_code": "9218",
   "pgm_ref_txt": "BASIC RESEARCH & HUMAN RESORCS"
  },
  {
   "pgm_ref_code": "HPCC",
   "pgm_ref_txt": "HIGH PERFORMANCE COMPUTING & COMM"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 421000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project has developed a protein-protein docking package PRODDL and a framework for executing it on a wide range of traditional parallel computational platforms as well as computational clouds such as Microsoft Azure.&nbsp;</p>\n<p><strong>The project addressed the following intellectual merits:</strong></p>\n<p>Proteins act as molecular machines in all living organisms, and many of their functions depend on proteins interacting with each other forming protein complexes. Predicting the shape of these complexes can provide key insights for biology. Because such simulation procedures are computationally expensive, they have to be carried out in parallel on hundreds of computing nodes. That requirement greatly complicates the setup and management of the simulations.</p>\n<p>This project has designed an open source and free implementation that:</p>\n<ul>\n<li>Can run in a wide range of different parallel computing environments, including in commercial clouds where the users are freed from the upfront investment into the hardware components</li>\n<li>Makes it easy to setup up a large parallel computation and drive it to conclusion despite possible failures of individual computational units</li>\n<li>Can be launched and controlled over the Internet through three different mechanisms: - Web form interface; - sequences of typed commands; - graphical molecular viewer</li>\n</ul>\n<p>The project has used its techniques for setting up and executing workflows in a related discipline of annotating genomes from mass spectrometry data.</p>\n<p><strong>The broader impacts of the project:</strong></p>\n<p>The docking tools developed by the project have been deployed on a public computational Web server based on a Galaxy environment widely used in the biological community. Together with flexible options for controlling the computations remotely, the protein docking tool provides biologists with an ability to iteratively refine their hypotheses about the protein interactions with minimal setup and expense. Fast protein docking procedure that can be controlled from a graphical molecular viewer is a valuable classroom tool.</p>\n<p><strong>Software products (all open-source):</strong></p>\n<ul>\n<li class=\"bottomSpacing\">\n<p>PRODDL-C - client-cloud service framework for parallel distributed execution of computational workflows in the Azure Cloud Services and on Linux compute clusters or workstations.</p>\n<p><a rel=\"nofollow\" href=\"https://bitbucket.org/andreyto/proddl-c\">https://bitbucket.org/andreyto/proddl-c</a></p>\n</li>\n<li class=\"bottomSpacing\">\n<p>Protein Protein Docking with Discriminative Learning v.2 (PRODDL2)</p>\n<p><a rel=\"nofollow\" href=\"https://bitbucket.org/andreyto/proddl2\">https://bitbucket.org/andreyto/proddl2</a></p>\n</li>\n<li class=\"bottomSpacing\">\n<p>PGP: Parallel Proteogenomics Pipeline. Automated proteogenomics pipeline designed to run in a range of different parallel computing environments.<br /><a rel=\"nofollow\" href=\"https://bitbucket.org/andreyto/proteogenomics\">https://bitbucket.org/andreyto/proteogenomics</a></p>\n</li>\n<li class=\"bottomSpacing\">\n<p>PRODDL2 tool deployed in a public computation Web server<br /><a href=\"http://mgtaxa.jcvi.org/\">http://mgtaxa.jcvi.org/</a>&nbsp;</p>\n</li>\n</ul>\n<p><strong><br /></strong></p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/02/2014<br>\n\t\t\t\t\tModified by: Andrey&nbsp;Tovchigrechko</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project has developed a protein-protein docking package PRODDL and a framework for executing it on a wide range of traditional parallel computational platforms as well as computational clouds such as Microsoft Azure. \n\nThe project addressed the following intellectual merits:\n\nProteins act as molecular machines in all living organisms, and many of their functions depend on proteins interacting with each other forming protein complexes. Predicting the shape of these complexes can provide key insights for biology. Because such simulation procedures are computationally expensive, they have to be carried out in parallel on hundreds of computing nodes. That requirement greatly complicates the setup and management of the simulations.\n\nThis project has designed an open source and free implementation that:\n\nCan run in a wide range of different parallel computing environments, including in commercial clouds where the users are freed from the upfront investment into the hardware components\nMakes it easy to setup up a large parallel computation and drive it to conclusion despite possible failures of individual computational units\nCan be launched and controlled over the Internet through three different mechanisms: - Web form interface; - sequences of typed commands; - graphical molecular viewer\n\n\nThe project has used its techniques for setting up and executing workflows in a related discipline of annotating genomes from mass spectrometry data.\n\nThe broader impacts of the project:\n\nThe docking tools developed by the project have been deployed on a public computational Web server based on a Galaxy environment widely used in the biological community. Together with flexible options for controlling the computations remotely, the protein docking tool provides biologists with an ability to iteratively refine their hypotheses about the protein interactions with minimal setup and expense. Fast protein docking procedure that can be controlled from a graphical molecular viewer is a valuable classroom tool.\n\nSoftware products (all open-source):\n\n\n\nPRODDL-C - client-cloud service framework for parallel distributed execution of computational workflows in the Azure Cloud Services and on Linux compute clusters or workstations.\n\nhttps://bitbucket.org/andreyto/proddl-c\n\n\n\nProtein Protein Docking with Discriminative Learning v.2 (PRODDL2)\n\nhttps://bitbucket.org/andreyto/proddl2\n\n\n\nPGP: Parallel Proteogenomics Pipeline. Automated proteogenomics pipeline designed to run in a range of different parallel computing environments.\nhttps://bitbucket.org/andreyto/proteogenomics\n\n\n\nPRODDL2 tool deployed in a public computation Web server\nhttp://mgtaxa.jcvi.org/ \n\n\n\n\n\n\n\t\t\t\t\tLast Modified: 05/02/2014\n\n\t\t\t\t\tSubmitted by: Andrey Tovchigrechko"
 }
}