{
 "awd_id": "1116836",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Collaborative Research: Formal Analysis of Distributed Interactions",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2011-10-01",
 "awd_exp_date": "2015-09-30",
 "tot_intn_awd_amt": 164966.0,
 "awd_amount": 164966.0,
 "awd_min_amd_letter_date": "2011-07-06",
 "awd_max_amd_letter_date": "2011-07-06",
 "awd_abstract_narration": "A crucial problem in dependability of concurrent and distributed software systems, which have become prevalent with the advances in service-oriented architecture, cloud computing, multi-core hardware, is the coordination of different components that form the whole system. In order to complete a task, components of a software system have to coordinate their executions by interacting with each other.\r\nMessage-based communication is an increasingly common interaction mechanism used in concurrent and distributed systems where components interact with each other by sending and receiving messages. The objective of the proposed research is to develop novel techniques for specification, analysis, and verification of message-based interactions.\r\n\r\nThe proposed research will develop a hierarchy of communication contract specification models and investigate analysis and verification problems for each class. Within the proposed framework the interactions among components of a software system (called peers) will be modeled as conversations describing the global sequence of messages exchanged among the peers. The proposed research will result in a toolset for analyzing communication contracts and verifying properties of conversations generated by a set of peers that follow a\r\ngiven communication contract.   The research will have broader impact\r\nin at least three areas. By developing techniques for analysis and verification of message-based interactions in concurrent and distributed systems, the research will improve the dependability of software systems in a wide variety of application domains, including e-commerce, consumer applications, and telecommunications. Secondly, the research activity will help to expose graduate and undergraduate students to analysis and verification problems in concurrent and distributed systems, and message-based communication, through a variety of educational activities including courses, seminars and individual research mentoring. Finally, the research activity will help to disseminate the knowledge, techniques and tools developed for analysis and verification of communicating systems through publishing in the open literature, and making the software tools available in public domain.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Samik",
   "pi_last_name": "Basu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Samik Basu",
   "pi_email_addr": "sbasu@cs.iastate.edu",
   "nsf_id": "000150686",
   "pi_start_date": "2011-07-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Iowa State University",
  "inst_street_address": "1350 BEARDSHEAR HALL",
  "inst_street_address_2": "515 MORRILL ROAD",
  "inst_city_name": "AMES",
  "inst_state_code": "IA",
  "inst_state_name": "Iowa",
  "inst_phone_num": "5152945225",
  "inst_zip_code": "500112103",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IA04",
  "org_lgl_bus_name": "IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY",
  "org_prnt_uei_num": "DQDBM7FGJPC5",
  "org_uei_num": "DQDBM7FGJPC5"
 },
 "perf_inst": {
  "perf_inst_name": "Iowa State University",
  "perf_str_addr": "1350 BEARDSHEAR HALL",
  "perf_city_name": "AMES",
  "perf_st_code": "IA",
  "perf_st_name": "Iowa",
  "perf_zip_code": "500112103",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IA04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 164966.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><strong>SHF: Small: Collaborative Research: Formal Analysis of Distributed Interactions </strong><br />http://fmg.cs.iastate.edu/project-pages/async/<br /><br />The advances in Internet technologies and the new trends in computing<br />such as service-oriented computing, cloud computing, multi-core<br />hardware, have resulted in the proliferation of distributed and<br />concurrent software systems. The central theme in such a distributed<br />paradigm is that multiple components (software and hardware alike)<br />communicate with each other in a cooperative fashion to realize a<br />desired functionality and/or provide a specified service to the end<br />user. One of the important problems in developing such systems is to<br />ensure that the system, when deployed, behaves in a predictable<br />fashion, i.e., behaves as specified/required.&nbsp; The challenge in<br />providing such assurance stems from the fact that identifying all<br />possible behavior in a distributed message-passing system is<br />computationally impossible, in general.&nbsp; The project makes significant<br />inroads in this context by presenting several theoretical results that<br />correspond to automatically providing correctness guarantees for<br />certain class of distributed message-passing systems. The results are<br />also utilized to develop tools and technologies that show their<br />practical applicability in the context of service-oriented computing,<br />message-passing processes in operating systems (Singularity OS) and<br />distributed systems, in general.<br /><br /><br /><strong>Key Knowledge Gaps addressed in the Project</strong><br /><br />We address two key problems in this project. First, we have identified<br />the conditions under which the communicating behavior of distributed<br />systems can be automatically analyzed for correctness and presented<br />efficient methods for verifying those conditions. We have considered<br />these conditions and their verification in the context of different<br />types of communicating paradigm such as Peer-2-Peer communication with<br />dedicated channels for each interactions or for each message<br />exchanges, and communication through shared channel.<br /><br />Second, we consider the problem of automatically checking whether or<br />not a specified interaction pattern can be implemented or realized in<br />practice. We have showed that if the specified patterns satisfy<br />certain properties, then they can be realized. We proved that these<br />properties can be verified efficiently. We have further investigated<br />automated techniques for repairing specifications that are<br />unrealizable such that the repaired version becomes realizable. We<br />characterize the repair techniques into two classes: repair by<br />relaxation and repair by restrictions, and discuss scenarios where the<br />combination of techniques from both classes may become necessary.<br /><br /><strong>Project Findings</strong><br /><br />Synchronizability and realizability of message-passing asynchronous<br />systems modeled as communicating finite state machines were open<br />problems. As part of the project, we have proved that these problems<br />are decidable and presented efficient algorithms for checking<br />synchronizability and realizability conditions.&nbsp; We have also<br />developed prototype tools and evaluated their applicability in several<br />case studies in the domains of service-oriented computing, distributed<br />software and Singularity OS.<br /><br /><br /><strong>Benefit to Science of Computing</strong><br /><br />The results obtained from our research directly impacts development of<br />distributed software systems both in terms of verifying desired<br />properties of developed software and in terms of ensuring the<br />implementability of software with desired properties.<br /><br /><br /><strong>Contributions to Learning and ...",
  "por_txt_cntn": "\nSHF: Small: Collaborative Research: Formal Analysis of Distributed Interactions \nhttp://fmg.cs.iastate.edu/project-pages/async/\n\nThe advances in Internet technologies and the new trends in computing\nsuch as service-oriented computing, cloud computing, multi-core\nhardware, have resulted in the proliferation of distributed and\nconcurrent software systems. The central theme in such a distributed\nparadigm is that multiple components (software and hardware alike)\ncommunicate with each other in a cooperative fashion to realize a\ndesired functionality and/or provide a specified service to the end\nuser. One of the important problems in developing such systems is to\nensure that the system, when deployed, behaves in a predictable\nfashion, i.e., behaves as specified/required.  The challenge in\nproviding such assurance stems from the fact that identifying all\npossible behavior in a distributed message-passing system is\ncomputationally impossible, in general.  The project makes significant\ninroads in this context by presenting several theoretical results that\ncorrespond to automatically providing correctness guarantees for\ncertain class of distributed message-passing systems. The results are\nalso utilized to develop tools and technologies that show their\npractical applicability in the context of service-oriented computing,\nmessage-passing processes in operating systems (Singularity OS) and\ndistributed systems, in general.\n\n\nKey Knowledge Gaps addressed in the Project\n\nWe address two key problems in this project. First, we have identified\nthe conditions under which the communicating behavior of distributed\nsystems can be automatically analyzed for correctness and presented\nefficient methods for verifying those conditions. We have considered\nthese conditions and their verification in the context of different\ntypes of communicating paradigm such as Peer-2-Peer communication with\ndedicated channels for each interactions or for each message\nexchanges, and communication through shared channel.\n\nSecond, we consider the problem of automatically checking whether or\nnot a specified interaction pattern can be implemented or realized in\npractice. We have showed that if the specified patterns satisfy\ncertain properties, then they can be realized. We proved that these\nproperties can be verified efficiently. We have further investigated\nautomated techniques for repairing specifications that are\nunrealizable such that the repaired version becomes realizable. We\ncharacterize the repair techniques into two classes: repair by\nrelaxation and repair by restrictions, and discuss scenarios where the\ncombination of techniques from both classes may become necessary.\n\nProject Findings\n\nSynchronizability and realizability of message-passing asynchronous\nsystems modeled as communicating finite state machines were open\nproblems. As part of the project, we have proved that these problems\nare decidable and presented efficient algorithms for checking\nsynchronizability and realizability conditions.  We have also\ndeveloped prototype tools and evaluated their applicability in several\ncase studies in the domains of service-oriented computing, distributed\nsoftware and Singularity OS.\n\n\nBenefit to Science of Computing\n\nThe results obtained from our research directly impacts development of\ndistributed software systems both in terms of verifying desired\nproperties of developed software and in terms of ensuring the\nimplementability of software with desired properties.\n\n\nContributions to Learning and Work-force Development\n\nThe funding allocated for Iowa State University has been utilized to\nsupport the work of several MS degree seeking students. Two of them\ngraduated in Summer 2014 and are currently working as software\nengineer at YP.com and Pricewaterhouse Coopers. Two others are\ncontinuing their MS degree and are expected to graduate in Fall 2016.\n\nSome of the research results are incorporated by Co-PI Basu as part of\ngraduate level course on Formal Methods in Software Enginee..."
 }
}