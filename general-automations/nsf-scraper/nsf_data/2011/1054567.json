{
 "awd_id": "1054567",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CAREER: Analyzing Distributed Systems Behavior Using Repeated Execution",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2011-07-01",
 "awd_exp_date": "2013-08-31",
 "tot_intn_awd_amt": 450000.0,
 "awd_amount": 134905.0,
 "awd_min_amd_letter_date": "2011-01-20",
 "awd_max_amd_letter_date": "2015-03-09",
 "awd_abstract_narration": "Modern distributed systems are extremely complex, due in large part to\r\nindividual node complexity, node unreliability and asynchrony, and\r\nunpredictable network message delays and orderings.  Further complicating\r\ndevelopment of these systems is both the presence of multiple potentially\r\nincompatible versions of the systems, and the need to build correct systems\r\nalso exhibiting high performance.  Prior testing and simulation frameworks are\r\ncharacterized either by extensive manual effort, or automated search for\r\nviolations of a binary decision problem---the presence or absence of a bug.  \r\n\r\nWe are developing automated and interactive techniques for helping developers\r\nunderstand the behavior of distributed systems implementations.  By leveraging\r\nthe evolved frameworks, and instrumenting implementations in structured,\r\nstraightforward ways, we are building development tools focused on\r\nunderstanding system behavior rather than merely identifying correctness\r\nerrors.  This change in focus will enable more general tools that improve\r\ndevelopment productivity in addition to testing productivity.\r\n\r\nThis research is proceeding on three fronts: 1) developing automated tools \r\nusing data mining with repeated executions to extract execution behaviors and\r\nperformance, 2) developing flexible execution descriptions suitable for both\r\nuse-case descriptions and automated processing, allowing more intuitive\r\ninteraction between users and their tools, and 3) incorporating testing tools\r\nwith revision control systems, enabling multi-version analysis and long-term\r\nprogress tracking.  When completed, this research will reduce developer effort\r\nnecessary to design, update, and debug distributed systems, and may inspire\r\ncreation of a new class of systems debuggers analysing not just correctness,\r\nbut also performance and complexity.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Sunil",
   "pi_last_name": "Prabhakar",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Sunil K Prabhakar",
   "pi_email_addr": "sunil@purdue.edu",
   "nsf_id": "000490800",
   "pi_start_date": "2013-01-28",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Charles",
   "pi_last_name": "Killian",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Charles E Killian",
   "pi_email_addr": "ckillian@cs.purdue.edu",
   "nsf_id": "000507151",
   "pi_start_date": "2011-01-20",
   "pi_end_date": "2013-01-28"
  }
 ],
 "inst": {
  "inst_name": "Purdue University",
  "inst_street_address": "2550 NORTHWESTERN AVE # 1100",
  "inst_street_address_2": "",
  "inst_city_name": "WEST LAFAYETTE",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "7654941055",
  "inst_zip_code": "479061332",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IN04",
  "org_lgl_bus_name": "PURDUE UNIVERSITY",
  "org_prnt_uei_num": "YRXVL4JYCEF5",
  "org_uei_num": "YRXVL4JYCEF5"
 },
 "perf_inst": {
  "perf_inst_name": "Purdue University",
  "perf_str_addr": "2550 NORTHWESTERN AVE # 1100",
  "perf_city_name": "WEST LAFAYETTE",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "479061332",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IN04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0113",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001314DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 82778.0
  },
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 52126.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>The major goal of the project was to utilize statistical data mining techniques to further the art of large system debugging and development.&nbsp;</span><span style=\"font-family: ArialMT; font-size: x-small;\"><span>In its first year, it focused primarily on approaches to detect the performance problems of systems when comparing a volume of performant logs to a volume of non-performant logs, by looking at the time, value and occurrence of state and event logs. In the second year, it focused primarily on using these data mining techniques to automate the process of analyzing the result code changes over time, to detect when code changes have had a significant impact on the behavior of the system. While most of the changes in a system are to improve it, it is not uncommon for changes to make the system worse along some dimension, in ways that are not immediately obvious to the developer. Additionally, we focused on the use of these techniques in the design of operating system primitives for process isolation, by first analyzing the behavior of existing software components. Thus, the project focused on the use of data mining techniques in all stages of the software development process: design, development, and debugging. &nbsp;</span></span></p>\n<p><span style=\"font-family: CMR10; font-size: x-small;\">The outcomes of the project include a publicly available distributed system log analysis&nbsp;<span>tool, Distalyzer,&nbsp;including&nbsp;several related datasets; two peer reviewed papers; the graduation of one PhD student supported by this grant; and&nbsp;the identification of several bugs in commonly used open source software (Transmission and HBase) which&nbsp;have been communicated to the&nbsp;broader community for correction.&nbsp;</span></span>Our developed techniques and tools (as embodied in our Distalyzer tool) are unique within the discipline because they allow users to find the root causes of performance problems across a broad range of ways to compare systems. In our results, we demonstrate how our approach allows users to compare (1) different implementations of the same protocol, (2) different transactions in a transaction processing system, and (3) different wholistic system executions performed at different times or with different versions of the code. The focus on performance also helps distinguish our approaches, because problems that are not quickly or easily observable are harder to diagnose, and emerge only through analysis of a large body of comparative data. &nbsp;Additionally, our research has developed a tool that can be used by researchers in related disciplines to discover problems with their developed software. We have to date discovered 3 bugs in open-source software which we have reported to the software products, and 2 deployment issues that can be used to enhance the performance of these and similar software in practice.&nbsp;<span>We also developed a system that can be integrated with nightly test scripts of revision control systems to analyze and detect significant changes in the system that warrant further inspection by developers. This tool is, to the best of our knowledge, the most advanced tool available in the literature or to the public for detecting such changes in systems.&nbsp;</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/31/2016<br>\n\t\t\t\t\tModified by: Sunil&nbsp;K&nbsp;Prabhakar</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe major goal of the project was to utilize statistical data mining techniques to further the art of large system debugging and development. In its first year, it focused primarily on approaches to detect the performance problems of systems when comparing a volume of performant logs to a volume of non-performant logs, by looking at the time, value and occurrence of state and event logs. In the second year, it focused primarily on using these data mining techniques to automate the process of analyzing the result code changes over time, to detect when code changes have had a significant impact on the behavior of the system. While most of the changes in a system are to improve it, it is not uncommon for changes to make the system worse along some dimension, in ways that are not immediately obvious to the developer. Additionally, we focused on the use of these techniques in the design of operating system primitives for process isolation, by first analyzing the behavior of existing software components. Thus, the project focused on the use of data mining techniques in all stages of the software development process: design, development, and debugging.  \n\nThe outcomes of the project include a publicly available distributed system log analysis tool, Distalyzer, including several related datasets; two peer reviewed papers; the graduation of one PhD student supported by this grant; and the identification of several bugs in commonly used open source software (Transmission and HBase) which have been communicated to the broader community for correction. Our developed techniques and tools (as embodied in our Distalyzer tool) are unique within the discipline because they allow users to find the root causes of performance problems across a broad range of ways to compare systems. In our results, we demonstrate how our approach allows users to compare (1) different implementations of the same protocol, (2) different transactions in a transaction processing system, and (3) different wholistic system executions performed at different times or with different versions of the code. The focus on performance also helps distinguish our approaches, because problems that are not quickly or easily observable are harder to diagnose, and emerge only through analysis of a large body of comparative data.  Additionally, our research has developed a tool that can be used by researchers in related disciplines to discover problems with their developed software. We have to date discovered 3 bugs in open-source software which we have reported to the software products, and 2 deployment issues that can be used to enhance the performance of these and similar software in practice. We also developed a system that can be integrated with nightly test scripts of revision control systems to analyze and detect significant changes in the system that warrant further inspection by developers. This tool is, to the best of our knowledge, the most advanced tool available in the literature or to the public for detecting such changes in systems. \n\n \n\n\t\t\t\t\tLast Modified: 05/31/2016\n\n\t\t\t\t\tSubmitted by: Sunil K Prabhakar"
 }
}