{
 "awd_id": "1127361",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SDCI Sec: New Software Platforms for Supporting Network-wide Detection of Code Injection Attacks",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Rob Beverly",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2017-01-31",
 "tot_intn_awd_amt": 800000.0,
 "awd_amount": 1148611.0,
 "awd_min_amd_letter_date": "2011-07-25",
 "awd_max_amd_letter_date": "2015-05-27",
 "awd_abstract_narration": "In recent years, code-injection attacks have become one of the most\r\ncommon forms of attack on modern computer systems.  At a high level,\r\ncode-injection attacks on network services (e.g. file sharing and\r\nwebservers) and client-based programs (e.g., browsers and document\r\nviewers) enable redirection of the flow of execution in the vulnerable\r\nprogram to arbitrary code, called shellcode, which is provided as part\r\nof the attack. The injected code often enables unauthorized control of\r\nsystem resources, applications, and data. The key to detecting these\r\nattacks lies in accurately discovering the presence of the shellcode\r\nbeing injected into the vulnerable program.\r\n\r\nThe intent of this research is to design, implement, and deploy a new\r\nframework, called ShellOS, that continuously analyzes network streams\r\nor program buffers to detect the presence of executable code that may\r\nbe harmful.  The proposed approach addresses the shortcomings of\r\ncurrent dynamic analysis techniques that use software-based CPU\r\nemulation for detecting shellcode. Unlike previous approaches, this approach takes\r\nadvantage of hardware virtualization to allow for more efficient and\r\naccurate inspection of buffers by directly executing instruction\r\nsequences on the CPU. In doing so, this project enables more scalable\r\ntechniques for protecting cyberinfrastructure against code injection\r\nattacks. Where possible, the project also plans to release anonymized forms of\r\ndetected attacks. The availability of such data can play a significant\r\nrole in fostering collaboration and ensuring U.S. technical leadership\r\nin network security research.  The tools created as part of this\r\nproject will be made available to the broader research community under\r\nan open source license.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Fabian",
   "pi_last_name": "Monrose",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "Fabian N Monrose",
   "pi_email_addr": "fabian@ece.gatech.edu",
   "nsf_id": "000482610",
   "pi_start_date": "2011-07-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Montek",
   "pi_last_name": "Singh",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Montek Singh",
   "pi_email_addr": "montek@cs.unc.edu",
   "nsf_id": "000183775",
   "pi_start_date": "2011-07-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Scott",
   "pi_last_name": "Coull",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Scott Coull",
   "pi_email_addr": "scott.coull@redjack.com",
   "nsf_id": "000587159",
   "pi_start_date": "2011-07-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of North Carolina at Chapel Hill",
  "inst_street_address": "104 AIRPORT DR STE 2200",
  "inst_street_address_2": "",
  "inst_city_name": "CHAPEL HILL",
  "inst_state_code": "NC",
  "inst_state_name": "North Carolina",
  "inst_phone_num": "9199663411",
  "inst_zip_code": "275995023",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "NC04",
  "org_lgl_bus_name": "UNIVERSITY OF NORTH CAROLINA AT CHAPEL HILL",
  "org_prnt_uei_num": "D3LHU66KBLD5",
  "org_uei_num": "D3LHU66KBLD5"
 },
 "perf_inst": {
  "perf_inst_name": "University of North Carolina at Chapel Hill",
  "perf_str_addr": "Dept of CS, CB 3175, Brooks Bld",
  "perf_city_name": "Chapel Hill",
  "perf_st_code": "NC",
  "perf_st_name": "North Carolina",
  "perf_zip_code": "275993175",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "NC04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "802700",
   "pgm_ele_name": "Cybersecurity Innovation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415RB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516RB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 800000.0
  },
  {
   "fund_oblg_fiscal_yr": 2014,
   "fund_oblg_amt": 46119.0
  },
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 302492.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The goals of this project were to design, implement, and deploy techniques for detecting code injection and code reuse attacks. &nbsp;At a high level, such attacks on network services (e.g., file sharing, webserver) and client-based programs (e.g., a browser, a document viewer) enable redirection of the flow of execution in the vulnerable program to arbitrary code that often enables unauthorized control of system resources, applications, and data. &nbsp;One prominent and contemporary example of such an attack is the use of popular, cross-platform document formats, to help compromise a wide variety of systems. &nbsp;These infected files are often spread via targeted e-mails and so-called drive-by downloads from malicious websites, where the infected files are executed without the user's knowledge. &nbsp;The key to detecting these attacks lies in accurately discovering the presence of the malicious payloads that lurks within.<br /><br />To that end, we leveraged hardware virtualization to enable efficientand accurate inspection of buffers (be that application memory contents or payloads of network packets) by directly executing instruction sequences on the CPU. Our framework and its associated components allowed security analysts to detect and analyze attacks at a scale and level of detail that was not possible with other tools and techniques. &nbsp;Our techniques were evaluated on a large campus network environment, and the outcomes were routinely used to improve the security posture of the network. In 2015, the research under this award was successfully moved out of the lab as part of the Department of Homeland Security (DHS) Science and Technology Directorate&rsquo;s (S&amp;T) Homeland Security Advanced Research Projects Agency transition to practice (TTP) program. Each year, the TTP program selects promising cybersecurity technologies developed with federal funding to incorporate into the 36-month transition-to-market program.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/10/2017<br>\n\t\t\t\t\tModified by: Fabian&nbsp;N&nbsp;Monrose</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goals of this project were to design, implement, and deploy techniques for detecting code injection and code reuse attacks.  At a high level, such attacks on network services (e.g., file sharing, webserver) and client-based programs (e.g., a browser, a document viewer) enable redirection of the flow of execution in the vulnerable program to arbitrary code that often enables unauthorized control of system resources, applications, and data.  One prominent and contemporary example of such an attack is the use of popular, cross-platform document formats, to help compromise a wide variety of systems.  These infected files are often spread via targeted e-mails and so-called drive-by downloads from malicious websites, where the infected files are executed without the user's knowledge.  The key to detecting these attacks lies in accurately discovering the presence of the malicious payloads that lurks within.\n\nTo that end, we leveraged hardware virtualization to enable efficientand accurate inspection of buffers (be that application memory contents or payloads of network packets) by directly executing instruction sequences on the CPU. Our framework and its associated components allowed security analysts to detect and analyze attacks at a scale and level of detail that was not possible with other tools and techniques.  Our techniques were evaluated on a large campus network environment, and the outcomes were routinely used to improve the security posture of the network. In 2015, the research under this award was successfully moved out of the lab as part of the Department of Homeland Security (DHS) Science and Technology Directorate?s (S&amp;T) Homeland Security Advanced Research Projects Agency transition to practice (TTP) program. Each year, the TTP program selects promising cybersecurity technologies developed with federal funding to incorporate into the 36-month transition-to-market program.\n\n\t\t\t\t\tLast Modified: 05/10/2017\n\n\t\t\t\t\tSubmitted by: Fabian N Monrose"
 }
}