{
 "awd_id": "1111698",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TC: Large: Collaborative Research: High-Level Language Support for Trustworthy Networks",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032928950",
 "po_email": "rwachter@nsf.gov",
 "po_sign_block_name": "Ralph Wachter",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2016-07-31",
 "tot_intn_awd_amt": 1599999.0,
 "awd_amount": 1615999.0,
 "awd_min_amd_letter_date": "2011-08-06",
 "awd_max_amd_letter_date": "2014-05-14",
 "awd_abstract_narration": "Computer networks are now, arguably, the United States' most critical infrastructure.  They control all communication amongst our citizenry, our businesses, our government, and our military.  Worryingly, however, today's networks are remarkably unreliable and insecure.  A significant source of vulnerability is the fact that the underlying network equipment (e.g., routers and switches) run complicated programs written in obtuse, low-level programming languages, which makes managing networks a difficult and error-prone task. Simple mistakes can have disastrous consequences including making the network vulnerable to denial-of-service attacks, hijackings, and wide-scale outages.\r\n\r\nThe goal of this research is to transform the way that networks are managed by introducing a new class of network programming languages with the following essential features: (i) network-wide, correct-by-construction abstractions; (ii) support for fault-tolerance and scalability; (iii) coordination with end-hosts and independently-administered networks, as well as mechanisms for establishing trust between them; (iv) formal verification tools based on rigorous semantic foundations; and (v) compilers capable of generating efficient and portable code that runs on heterogeneous equipment. To demonstrate how to build a language with these features, the researchers are designing a language for OpenFlow networks called Frenetic, and evaluating it on several novel security applications. This project will have broad impact by (i) discovering key techniques for increasing the reliability of our networks, (ii) opening up the interfaces used to program networks, thereby enabling grass-roots innovation where it was previously not possible, and (iii) educating a new community of researchers with advanced skills in both networking and programming languages.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Foster",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "John N Foster",
   "pi_email_addr": "jnfoster@cs.cornell.edu",
   "nsf_id": "000569694",
   "pi_start_date": "2011-08-06",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Emin",
   "pi_last_name": "Sirer",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Emin Sirer",
   "pi_email_addr": "egs@cs.cornell.edu",
   "nsf_id": "000200512",
   "pi_start_date": "2011-08-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Cornell University",
  "inst_street_address": "341 PINE TREE RD",
  "inst_street_address_2": "",
  "inst_city_name": "ITHACA",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "6072555014",
  "inst_zip_code": "148502820",
  "inst_country_name": "United States",
  "cong_dist_code": "19",
  "st_cong_dist_code": "NY19",
  "org_lgl_bus_name": "CORNELL UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "G56PUALJ3KT5"
 },
 "perf_inst": {
  "perf_inst_name": "Cornell University",
  "perf_str_addr": "341 PINE TREE RD",
  "perf_city_name": "ITHACA",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "148502820",
  "perf_ctry_code": "US",
  "perf_cong_dist": "19",
  "perf_st_cong_dist": "NY19",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "779500",
   "pgm_ele_name": "TRUSTWORTHY COMPUTING"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7795",
   "pgm_ref_txt": "TRUSTWORTHY COMPUTING"
  },
  {
   "pgm_ref_code": "7925",
   "pgm_ref_txt": "LARGE PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 1599999.0
  },
  {
   "fund_oblg_fiscal_yr": 2014,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-bcb6b749-45cf-dad0-7e59-280f1f8c992a\"> </span></p>\n<p dir=\"ltr\"><span>Today's computer networks are unreliable and insecure. Network elements such as routers and switches run complicated programs that have bugs and vulnerabilities that can lead to outages and infiltrations. Such outages and attacks can render critical systems unavailable for long periods of time, and as a result, can have disastrous consequences for our banking system, our military information systems, our energy infrastructure, our government and our everyday lives. The overall goal of this project was to invent new programming languages, interfaces and systems that make it easier to write correct and efficient network programs.</span></p>\n<p dir=\"ltr\"><span>During the course of the project, we invented a new family of programming languages for network configuration. One key design principle that these languages share is the </span><span>principle of compositionality</span><span>&mdash;the idea that one should be able to solve a complex programming problem by breaking it down into simpler subproblems that are solved independently and recombined to produce the overall solution. The languages we developed for this project (Frenetic, Pyretic, NetKAT, and others) all support this principle. The code we developed as a part of this project is open source and may be found at our project website (</span><a href=\"http://www.frenetic-lang.org\"><span>www.frenetic-lang.org</span></a><span>), along with many papers and technical reports that describe our language designs and accompanying compilers and verification tools. </span></p>\n<p dir=\"ltr\"><span>A second key intellectual contribution of the project was the development of </span><span>consistent network updates</span><span>. &nbsp;Updates to network configurations are necessary to repair device failures, to expand network capacity, to address network vulnerabilities, and to add functionality. However, the updates themselves are also a very significant source of problems, which sometimes lead to outages, network instability and downtime. A </span><span>consistent</span><span> network update, on the other hand, provides a guarantee that important network properties will persist across updates. We invented the concept of a consistent network update as well as a series of algorithms that implement them efficiently. &nbsp;&nbsp;</span></p>\n<p dir=\"ltr\">We also engaged in significant outreach activities aimed at educating both students and our industrial colleagues. In June 2013, we organized a one week summer school that taught topics at the intersection of networking and verification. The summer school had roughly 40 attendees, including a mix of PhD students, professors and industrial colleagues. In June 2016, PIs Foster and Rexford formed the Cornell-Princeton Center for Network Programming and held an invitation-only workshop for academics and industry in the New York City area. &nbsp;Roughly 50 participants at the workshop shared ideas, insights, problems, solutions and contact information.</p>\n<p dir=\"ltr\"><span>Finally, the development of the Frenetic family of programming languages has influenced ongoing efforts in the networking industry to develop the next generation of programmable switches. In particular, together with collaborators at a variety of academic and industrial institutions, the PIs helped create P4, an emerging industrial standard for programmable data planes.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/20/2016<br>\n\t\t\t\t\tModified by: John&nbsp;N&nbsp;Foster</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n \nToday's computer networks are unreliable and insecure. Network elements such as routers and switches run complicated programs that have bugs and vulnerabilities that can lead to outages and infiltrations. Such outages and attacks can render critical systems unavailable for long periods of time, and as a result, can have disastrous consequences for our banking system, our military information systems, our energy infrastructure, our government and our everyday lives. The overall goal of this project was to invent new programming languages, interfaces and systems that make it easier to write correct and efficient network programs.\nDuring the course of the project, we invented a new family of programming languages for network configuration. One key design principle that these languages share is the principle of compositionality&mdash;the idea that one should be able to solve a complex programming problem by breaking it down into simpler subproblems that are solved independently and recombined to produce the overall solution. The languages we developed for this project (Frenetic, Pyretic, NetKAT, and others) all support this principle. The code we developed as a part of this project is open source and may be found at our project website (www.frenetic-lang.org), along with many papers and technical reports that describe our language designs and accompanying compilers and verification tools. \nA second key intellectual contribution of the project was the development of consistent network updates.  Updates to network configurations are necessary to repair device failures, to expand network capacity, to address network vulnerabilities, and to add functionality. However, the updates themselves are also a very significant source of problems, which sometimes lead to outages, network instability and downtime. A consistent network update, on the other hand, provides a guarantee that important network properties will persist across updates. We invented the concept of a consistent network update as well as a series of algorithms that implement them efficiently.   \nWe also engaged in significant outreach activities aimed at educating both students and our industrial colleagues. In June 2013, we organized a one week summer school that taught topics at the intersection of networking and verification. The summer school had roughly 40 attendees, including a mix of PhD students, professors and industrial colleagues. In June 2016, PIs Foster and Rexford formed the Cornell-Princeton Center for Network Programming and held an invitation-only workshop for academics and industry in the New York City area.  Roughly 50 participants at the workshop shared ideas, insights, problems, solutions and contact information.\nFinally, the development of the Frenetic family of programming languages has influenced ongoing efforts in the networking industry to develop the next generation of programmable switches. In particular, together with collaborators at a variety of academic and industrial institutions, the PIs helped create P4, an emerging industrial standard for programmable data planes.\n\n \n\n\t\t\t\t\tLast Modified: 09/20/2016\n\n\t\t\t\t\tSubmitted by: John N Foster"
 }
}