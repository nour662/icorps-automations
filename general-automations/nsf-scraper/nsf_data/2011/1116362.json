{
 "awd_id": "1116362",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Human-Centered Software Synthesis",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2015-08-31",
 "tot_intn_awd_amt": 404779.0,
 "awd_amount": 404779.0,
 "awd_min_amd_letter_date": "2011-07-18",
 "awd_max_amd_letter_date": "2011-07-18",
 "awd_abstract_narration": "The goal of this project is to develop new forms of programming that are more intuitive and more flexible than traditional programming models. Our new programming model is targeted towards low-level system's programming for systems like databases and operating systems where performance and reliability requirements make development particularly challenging. One of the components of our new programming model is new set of graphical notations to allow programmers to pictorially describe the behavior of their programs and automatically get implementations from these high-level drawings. The new programming technologies developed and released as part of this project could have a dramatic impact in programmer productivity, particularly for low-level systems programming. \r\n\r\nThe technology we are developing relies on new algorithms for constraint based program synthesis that allow the system to combine different forms of input ranging from high-level graphical descriptions of program behavior with more formal notations such as invariants and pre/post conditions. The project will also explore new forms of interaction between the software synthesis engine and the programmer, allowing for a more interactive development model for complex algorithms. These new forms of interaction will be analyzed and evaluated in terms of their impact on programmer productivity through user studies and other forms of usability evaluation.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Armando",
   "pi_last_name": "Solar-Lezama",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Armando Solar-Lezama",
   "pi_email_addr": "asolar@csail.mit.edu",
   "nsf_id": "000541631",
   "pi_start_date": "2011-07-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Massachusetts Institute of Technology",
  "inst_street_address": "77 MASSACHUSETTS AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172531000",
  "inst_zip_code": "021394301",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "E2NYLCDML6V1",
  "org_uei_num": "E2NYLCDML6V1"
 },
 "perf_inst": {
  "perf_inst_name": "Massachusetts Institute of Technology",
  "perf_str_addr": "77 MASSACHUSETTS AVE",
  "perf_city_name": "CAMBRIDGE",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021394301",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 404779.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The goal of this project was to develop new approaches to program synthesis centered on novel forms of user interaction. Specifically, the goal was to develop new forms of interaction that would allow a programmer to leverage the capabilities of a synthesis system without having to master complex formalisms or to learn completely new programming paradigms.</p>\n<p>One outcome of this project was the development of a technique we called Storyboard Programming, which allowed the programmer to automatically generate code from the kind of box-and-arrow diagrams that one normally draws on a whiteboard when designing new algorithms. We developed a system that was able to capture such diagrams through an intelligent whiteboard and automatically generated executable code. The system also demonstrated the concept of multi-modal synthesis, where the synthesizer combines partial specifications in several different forms in order to produce the code the programmer wants.</p>\n<p>A second outcome of this project was to demonstrate that the notion of multi-modal synthesis could also be applied to automatically correct errors in student's programming assignments. This was an important instance where synthesis technology could be leveraged behind the scenes to address an problem in programming education: providing detailed feedback on how to correct a student solution, even when the student's solution looked very different from the solution the instructor originally had in mind. This technology could prove transformative in helping support massive online education, and could well become one of the most impactful applications of program synthesis.</p>\n<p>Finally, the project also explored the use of synthesis to help programmers work with complex libraries and frameworks. The goal was to leverage synthesis technology to help construct code that has to interact with complex libraries whose source code may be unavailable, but for which we have significant amounts of data about how they interact with other applications.</p>\n<p>In all of these instances, the overarching goal has been to move synthesis technology from a specialist tool requiring significant expertise to use, and turn it into a more usable technology that can be leveraged even in contexts like programmer education, which are outside the range where synthesis technology has traditionally been applied. The results of this work was published in major conferences such as PLDI, and was the subject of multiple PhD thesis, including the PhD thesis of Rishabh Singh which was awarded the George M. Sprowls Award, given to the top thesis in Computer Science at MIT.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/14/2015<br>\n\t\t\t\t\tModified by: Armando&nbsp;Solar-Lezama</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe goal of this project was to develop new approaches to program synthesis centered on novel forms of user interaction. Specifically, the goal was to develop new forms of interaction that would allow a programmer to leverage the capabilities of a synthesis system without having to master complex formalisms or to learn completely new programming paradigms.\n\nOne outcome of this project was the development of a technique we called Storyboard Programming, which allowed the programmer to automatically generate code from the kind of box-and-arrow diagrams that one normally draws on a whiteboard when designing new algorithms. We developed a system that was able to capture such diagrams through an intelligent whiteboard and automatically generated executable code. The system also demonstrated the concept of multi-modal synthesis, where the synthesizer combines partial specifications in several different forms in order to produce the code the programmer wants.\n\nA second outcome of this project was to demonstrate that the notion of multi-modal synthesis could also be applied to automatically correct errors in student's programming assignments. This was an important instance where synthesis technology could be leveraged behind the scenes to address an problem in programming education: providing detailed feedback on how to correct a student solution, even when the student's solution looked very different from the solution the instructor originally had in mind. This technology could prove transformative in helping support massive online education, and could well become one of the most impactful applications of program synthesis.\n\nFinally, the project also explored the use of synthesis to help programmers work with complex libraries and frameworks. The goal was to leverage synthesis technology to help construct code that has to interact with complex libraries whose source code may be unavailable, but for which we have significant amounts of data about how they interact with other applications.\n\nIn all of these instances, the overarching goal has been to move synthesis technology from a specialist tool requiring significant expertise to use, and turn it into a more usable technology that can be leveraged even in contexts like programmer education, which are outside the range where synthesis technology has traditionally been applied. The results of this work was published in major conferences such as PLDI, and was the subject of multiple PhD thesis, including the PhD thesis of Rishabh Singh which was awarded the George M. Sprowls Award, given to the top thesis in Computer Science at MIT.\n\n\t\t\t\t\tLast Modified: 12/14/2015\n\n\t\t\t\t\tSubmitted by: Armando Solar-Lezama"
 }
}