{
 "awd_id": "1117604",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Software Cache Memory Managements with Reconfigurable Hardware Emulators",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2016-07-31",
 "tot_intn_awd_amt": 360345.0,
 "awd_amount": 360345.0,
 "awd_min_amd_letter_date": "2011-07-06",
 "awd_max_amd_letter_date": "2011-07-06",
 "awd_abstract_narration": "As multi-core systems become the major computing platform, efficient cache management is even more crucial to system performance and power efficiency than before.  An effective approach is to use software cache management (SCM) with hardware supports to manage shared last-level cache, because sophisticated SCM may adapt to the complex scenarios of cache usage on multi-core processors.\r\n\r\nA critical and unsolved issue in SCM is the lack of rich and relevant information for software to reason about cache performance under different configurations. The project investigates the use of lightweight and Reconfigurable hardware Cache Emulators (RCEs) to extend the capability of SCM. With this new hardware support, sophisticated SCM algorithms that constantly monitor cache usage through RCEs are developed. Those SCM algorithms aim to improve cache power efficiency by turning off unused cache portion, optimize cache partitioning for multi-core processors, and improve software-controlled cache mapping to improve cache utilization.\r\n\r\nThe research will improve system performance, power efficiency, and performance predictability for laptop, desktop and server computers using multi-core processors of large shared caches. It may make an impact on industry processor design to include lightweight RCEs as well as enrich SCM algorithms. It will also introduce new educational materials for students to study multicore cache management through hand-on experiments.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhao",
   "pi_last_name": "Zhang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhao Zhang",
   "pi_email_addr": "zhangz@uic.edu",
   "nsf_id": "000243180",
   "pi_start_date": "2011-07-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Iowa State University",
  "inst_street_address": "1350 BEARDSHEAR HALL",
  "inst_street_address_2": "515 MORRILL ROAD",
  "inst_city_name": "AMES",
  "inst_state_code": "IA",
  "inst_state_name": "Iowa",
  "inst_phone_num": "5152945225",
  "inst_zip_code": "500112103",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IA04",
  "org_lgl_bus_name": "IOWA STATE UNIVERSITY OF SCIENCE AND TECHNOLOGY",
  "org_prnt_uei_num": "DQDBM7FGJPC5",
  "org_uei_num": "DQDBM7FGJPC5"
 },
 "perf_inst": {
  "perf_inst_name": "Iowa State University",
  "perf_str_addr": "1350 BEARDSHEAR HALL",
  "perf_city_name": "AMES",
  "perf_st_code": "IA",
  "perf_st_name": "Iowa",
  "perf_zip_code": "500112103",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IA04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 360345.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>In this project, we have explored a combination of lightweight hardware support and new software management methods to improve the performance and energy efficiency of computer cache and memory. This approach only requires simple hardware extension in processors and memory controllers but enables efficient software management of cache and memory. We have demonstrated that this approach is as effective as hardware-only approach, which usually leads to complex hardware implementation and lacks the flexibility that software management can provide.</p>\n<p>A core idea of this research is to use a hardware profiling unit to estimate the cache miss rates of multiple cache configurations for the current phase of computing, but without immediate changes to cache configuration. Then, a prediction model is used to predict the system performance and/or power efficiency under each configuration. If the best configuration of those is measurably better than the current and actual cache configuration, this cache configuration will become the actual cache configuration for the next phase of computing. The prediction model is implemented in a system software module, and we have also proposed lightweight hardware design for dynamic cache re-configuration.</p>\n<p>In a preliminary study, we have used this approach to improve the cache performance of multi-core processor. We have shown that, on a simulated multi-core computer, it may improve performance significantly over conventional cache design in commercially available processors. We further use this approach to improve the energy efficiency of cache by turning off part of the cache to save energy. Using sophisticated models, we have shown that we can achieve the best balance between performance and energy efficiency for different optimization targets and various workloads. As extensions of this project, we have also studied new cache and memory reliability schemes and compressed memory design, which may also improve performance and/or energy efficiency.</p>\n<p>With the support of this project, we have published over ten research papers in renowned forums, including International Conference on Computer Design, International Conference on VLSI Design, International Symposium on Computer Architecture, ACM Transactions on Architecture and Code, and Journal of Circuits, Systems, and Computers.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 02/01/2017<br>\n\t\t\t\t\tModified by: Zhao&nbsp;Zhang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nIn this project, we have explored a combination of lightweight hardware support and new software management methods to improve the performance and energy efficiency of computer cache and memory. This approach only requires simple hardware extension in processors and memory controllers but enables efficient software management of cache and memory. We have demonstrated that this approach is as effective as hardware-only approach, which usually leads to complex hardware implementation and lacks the flexibility that software management can provide.\n\nA core idea of this research is to use a hardware profiling unit to estimate the cache miss rates of multiple cache configurations for the current phase of computing, but without immediate changes to cache configuration. Then, a prediction model is used to predict the system performance and/or power efficiency under each configuration. If the best configuration of those is measurably better than the current and actual cache configuration, this cache configuration will become the actual cache configuration for the next phase of computing. The prediction model is implemented in a system software module, and we have also proposed lightweight hardware design for dynamic cache re-configuration.\n\nIn a preliminary study, we have used this approach to improve the cache performance of multi-core processor. We have shown that, on a simulated multi-core computer, it may improve performance significantly over conventional cache design in commercially available processors. We further use this approach to improve the energy efficiency of cache by turning off part of the cache to save energy. Using sophisticated models, we have shown that we can achieve the best balance between performance and energy efficiency for different optimization targets and various workloads. As extensions of this project, we have also studied new cache and memory reliability schemes and compressed memory design, which may also improve performance and/or energy efficiency.\n\nWith the support of this project, we have published over ten research papers in renowned forums, including International Conference on Computer Design, International Conference on VLSI Design, International Symposium on Computer Architecture, ACM Transactions on Architecture and Code, and Journal of Circuits, Systems, and Computers.\n\n \n\n\t\t\t\t\tLast Modified: 02/01/2017\n\n\t\t\t\t\tSubmitted by: Zhao Zhang"
 }
}