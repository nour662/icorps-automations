{
 "awd_id": "1117603",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Reusing Debugging Knowledge",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927885",
 "po_email": "abanerje@nsf.gov",
 "po_sign_block_name": "Anindya Banerjee",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2016-07-31",
 "tot_intn_awd_amt": 499988.0,
 "awd_amount": 515988.0,
 "awd_min_amd_letter_date": "2011-07-26",
 "awd_max_amd_letter_date": "2012-04-16",
 "awd_abstract_narration": "Developers spend most of their time debugging software. This effort\r\nresults in perfective changes to their applications, but is otherwise\r\nlost. No central repository exists that stores all bug descriptions\r\nand fixes. The reason for this state of affairs is the belief that\r\ndebugging is an idiosyncratic, context-specific task that does not\r\ngeneralize. In contrast, this project hypothesizes that applications\r\ndecompose into smaller, similar problems and that limitations of the\r\nhuman mind imply that we are likely to make similar errors when\r\nconfronted by similar problems. In practice, most developers\r\nagree. When fixing a bug, a developer often begins by searching for\r\nsimilar bugs that have been reported and resolved in the past, because\r\na fix for a similar bug can help him understand his bug, or even\r\ndirectly fix his bug. In short, the problem is that the knowledge\r\ngained during debugging is wasted---either not stored or not\r\nsearchable.\r\n\r\nThis project seeks to revolutionize debugging by capturing and reusing\r\ndebugging knowledge.  Developers can leverage the knowledge of the\r\ncommunity to speed up debugging. To this end, it proposes to create a\r\nuniversal bug repository capable of storing all bug information,\r\nindexed on bug traces. To speed debugging, this repository will\r\nsupport efficiently finding similar bugs and their fixes. It will be\r\nthe basis of automatic debugging tools that match closed bugs to an\r\nopen bug, then test the applicability of their fixes to that open\r\nbug. Programmers will consult the proposed bug repository as a matter\r\nof course during debugging. Monitors that compare the current\r\nexecution against traces in the repository can also prevent bugs and\r\nimprove software reliability. This project promises to significantly\r\nspeed up debugging and reduce software production cost. The proposed\r\neducational innovations and outreach efforts can also help train more\r\ncapable IT professionals for the workforce.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Zhendong",
   "pi_last_name": "Su",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zhendong Su",
   "pi_email_addr": "su@cs.ucdavis.edu",
   "nsf_id": "000336300",
   "pi_start_date": "2011-07-26",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Earl",
   "pi_last_name": "Barr",
   "pi_mid_init": "T",
   "pi_sufx_name": "",
   "pi_full_name": "Earl T Barr",
   "pi_email_addr": "e.barr@ucl.ac.uk",
   "nsf_id": "000541910",
   "pi_start_date": "2011-07-26",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Davis",
  "inst_street_address": "1850 RESEARCH PARK DR STE 300",
  "inst_street_address_2": "",
  "inst_city_name": "DAVIS",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5307547700",
  "inst_zip_code": "956186153",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "CA04",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, DAVIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "TX2DAGQPENZ5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Davis",
  "perf_str_addr": "1850 RESEARCH PARK DR STE 300",
  "perf_city_name": "DAVIS",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "956186153",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "CA04",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 499988.0
  },
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>For the duration of this NSF project, we, the principal investigators and graduate students, have introduced and developed the vision of capturing and reusing debugging knowledge to aid debugging. &nbsp;Our work allows developers to leverage the community knowledge to speed up debugging. We have also developed effective techniques for automatically recovering from program crashes. &nbsp;The conducted research and educational activities have advanced the state-of-the-art in improving developer productivity and helped train next generation researchers and engineers. More specifically,</p>\n<p>- We have developed an open infrastructure that consists of a trace collection engine, the Eclipse plugin, a Hadoop-based query engine,&nbsp; a trace-indexed bug database, as well as a web-based front-end, for capturing and reusing debugging knowledge.&nbsp;</p>\n<p>- We have developed the IDE++ framework to capture and exploit fine-grained IDE interactions to help understand user intent,&nbsp; automatically construct bug queries, and build effective tools to speed up software development.</p>\n<p>- We have introduced the prorogued programming paradigm to allow programmers defer programming concerns and finish their current task, thus making program construction more closely conform to how humans actually think when programming.</p>\n<p>- We have conducted an extensive study to understand the characteristics of real-world bugs and how they were fixed to help understand the potential, challenges and limitations of automatic program repair techniques.</p>\n<p>- We have developed an effective, low-overhead technique to automatically repair program crashes by extracting and modeling similar crashes, and using how similar failures are handled to repair and recover from crashes.</p>\n<p>- We have disseminated our research results through publications in top outlets such as highly-competitive conferences, tool distributions and research exchanges.</p>\n<p>- We have successfully trained the next generation computer scientists through postdoctoral scholar and graduate student advising, and engineers through undergraduate and graduate level education.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/21/2016<br>\n\t\t\t\t\tModified by: Zhendong&nbsp;Su</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nFor the duration of this NSF project, we, the principal investigators and graduate students, have introduced and developed the vision of capturing and reusing debugging knowledge to aid debugging.  Our work allows developers to leverage the community knowledge to speed up debugging. We have also developed effective techniques for automatically recovering from program crashes.  The conducted research and educational activities have advanced the state-of-the-art in improving developer productivity and helped train next generation researchers and engineers. More specifically,\n\n- We have developed an open infrastructure that consists of a trace collection engine, the Eclipse plugin, a Hadoop-based query engine,  a trace-indexed bug database, as well as a web-based front-end, for capturing and reusing debugging knowledge. \n\n- We have developed the IDE++ framework to capture and exploit fine-grained IDE interactions to help understand user intent,  automatically construct bug queries, and build effective tools to speed up software development.\n\n- We have introduced the prorogued programming paradigm to allow programmers defer programming concerns and finish their current task, thus making program construction more closely conform to how humans actually think when programming.\n\n- We have conducted an extensive study to understand the characteristics of real-world bugs and how they were fixed to help understand the potential, challenges and limitations of automatic program repair techniques.\n\n- We have developed an effective, low-overhead technique to automatically repair program crashes by extracting and modeling similar crashes, and using how similar failures are handled to repair and recover from crashes.\n\n- We have disseminated our research results through publications in top outlets such as highly-competitive conferences, tool distributions and research exchanges.\n\n- We have successfully trained the next generation computer scientists through postdoctoral scholar and graduate student advising, and engineers through undergraduate and graduate level education.\n\n\t\t\t\t\tLast Modified: 12/21/2016\n\n\t\t\t\t\tSubmitted by: Zhendong Su"
 }
}