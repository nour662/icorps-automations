{
 "awd_id": "1036137",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research:  System Software for Scalable Applications",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Irene Qualters",
 "awd_eff_date": "2011-06-01",
 "awd_exp_date": "2014-05-31",
 "tot_intn_awd_amt": 1.0,
 "awd_amount": 1.0,
 "awd_min_amd_letter_date": "2011-05-31",
 "awd_max_amd_letter_date": "2011-05-31",
 "awd_abstract_narration": "This award facilitates scientific research using the large new computational resource named Blue Waters being developed by IBM and scheduled to be deployed at the University of Illinois. \r\n\r\nAs hardware complexity increases in HPC systems, it is difficult for applications to take full advantage of the available system resources and avoid potential bottlenecks. The purpose of this project is to improve the performance and productivity of key system software components on petascale platforms such as Blue Waters. The researchers from University of Chicago, University of Illinois and Argonne National Laboratores propose to study four different classes of system software: message passing libraries, parallel I/O, data visualization, and operating system.  They will use a computational chemistry application (NWChem) and a climate modeling application (CCSM) on Blue Waters to study and validate the performance and scalability of their system software components. Through rigorous experimentation, analysis, and design cycles, the researchers will dramatically improve the capabilities of not only systems being deployed in the near term, but of all systems pushing scalability limits in the near future.\r\n\r\nThe benefits of this research will be available to all applications on a variety of large petascale systems in the form of revised system software.  The results will be disseminated to system vendors as well as to other researchers and students in the form of tutorials, workshop and conference presentations, and seminars.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "William",
   "pi_last_name": "Gropp",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "William D Gropp",
   "pi_email_addr": "wgropp@illinois.edu",
   "nsf_id": "000266820",
   "pi_start_date": "2011-05-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Urbana-Champaign",
  "inst_street_address": "506 S WRIGHT ST",
  "inst_street_address_2": "",
  "inst_city_name": "URBANA",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "2173332187",
  "inst_zip_code": "618013620",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "IL13",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "V2PHZ2CSCH63",
  "org_uei_num": "Y8CWNJRCNN91"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Urbana-Champaign",
  "perf_str_addr": "506 S WRIGHT ST",
  "perf_city_name": "URBANA",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "618013620",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "IL13",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "778100",
   "pgm_ele_name": "Leadership-Class Computing"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7781",
   "pgm_ref_txt": "PETASCALE - TRACK 1"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 1.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>To solve some of the most difficult problems, scientists make use of massively parallel computers, containing hundreds of thousands to millions of processing cores.&nbsp; The most widely used programming approach for using these systems is the Message-Passing Interface (MPI), which provides a way for programs to share data and to coordinate their activities.&nbsp; This project investigated the performance and scalability (the ability to use all of the processing cores at the same time in an application) of the most widely used implementation of MPI, making use of Blue Waters, one of the most powerful computers in the world.&nbsp; The project identified improvements in a number of areas, and has resulted in improvements to the implementation of MPI used on many parallel computers.&nbsp; For example, an increasingly popular and effective way to program these large-scale systems combines two different programming models &ndash; message passing with MPI, and threads, typically with OpenMP.&nbsp; We found that contention for thread locks, used to ensure correct updates to shared data, interfered with the performance of the application.&nbsp; We developed two approaches that addressed this problem, significantly improving performance and benefitting applications.&nbsp; We also investigated the impact on the performance of the application of how the processes in the parallel program are assigned to the physical resources in the parallel computer and make recommendations that can improve application performance on large system such as Blue Waters.&nbsp; These improvements directly benefit the application programs running on these systems, accelerating the progress of science and engineering.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 08/28/2014<br>\n\t\t\t\t\tModified by: William&nbsp;D&nbsp;Gropp</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nTo solve some of the most difficult problems, scientists make use of massively parallel computers, containing hundreds of thousands to millions of processing cores.  The most widely used programming approach for using these systems is the Message-Passing Interface (MPI), which provides a way for programs to share data and to coordinate their activities.  This project investigated the performance and scalability (the ability to use all of the processing cores at the same time in an application) of the most widely used implementation of MPI, making use of Blue Waters, one of the most powerful computers in the world.  The project identified improvements in a number of areas, and has resulted in improvements to the implementation of MPI used on many parallel computers.  For example, an increasingly popular and effective way to program these large-scale systems combines two different programming models &ndash; message passing with MPI, and threads, typically with OpenMP.  We found that contention for thread locks, used to ensure correct updates to shared data, interfered with the performance of the application.  We developed two approaches that addressed this problem, significantly improving performance and benefitting applications.  We also investigated the impact on the performance of the application of how the processes in the parallel program are assigned to the physical resources in the parallel computer and make recommendations that can improve application performance on large system such as Blue Waters.  These improvements directly benefit the application programs running on these systems, accelerating the progress of science and engineering.\n\n\t\t\t\t\tLast Modified: 08/28/2014\n\n\t\t\t\t\tSubmitted by: William D Gropp"
 }
}