{
 "awd_id": "1065130",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TC: Medium: Collaborative Research: Tracking Adversarial Behavior in  Distributed Systems with Secure Networked Provenance",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2017-08-31",
 "tot_intn_awd_amt": 845847.0,
 "awd_amount": 845847.0,
 "awd_min_amd_letter_date": "2011-03-16",
 "awd_max_amd_letter_date": "2011-03-16",
 "awd_abstract_narration": "Operators of networks and distributed systems often find themselves needing to answer a diagnostic or forensic question -- some part of the system is found to be in an unexpected state, and the operators must decide whether the state is legitimate or a symptom of a clandestine attack. In such cases, it would be useful to ask the system for an 'explanation' of the observed state. In the absence of attacks, emerging network provenance techniques can construct such explanations by constructing a chain of events that links the observed state to its root causes. However, an attacker can cause the nodes under his control to forge or suppress information and thus produce a plausible (but incorrect) explanation. As a result, the operators may fail to notice the attack.\r\n\r\nThis research develops secure network provenance techniques that can provide useful explanations even when the system is under attack by a powerful adversary. The project (i) substantially extends and generalizes the concept of network provenance by adding capabilities needed in a forensic setting; (ii) develops techniques for securely storing provenance without any trusted components; (iii) designs methods for efficiently querying secure provenance; (iv) introduces methods for protecting the confidentiality of provenance; and (v) evaluates these techniques in the context of concrete applications.\r\n\r\nThe project's theme of provenance and forensics is integrated with Penn's new undergraduate program in Market and Social Systems Engineering. It will provide forensics support for a wide variety of distributed applications, including emerging cloud applications upon which critical infrastructure may soon be based.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Andreas",
   "pi_last_name": "Haeberlen",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Andreas Haeberlen",
   "pi_email_addr": "ahae@cis.upenn.edu",
   "nsf_id": "000562850",
   "pi_start_date": "2011-03-16",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Zachary",
   "pi_last_name": "Ives",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Zachary Ives",
   "pi_email_addr": "zives@cis.upenn.edu",
   "nsf_id": "000468327",
   "pi_start_date": "2011-03-16",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Boon Thau",
   "pi_last_name": "Loo",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Boon Thau Loo",
   "pi_email_addr": "boonloo@cis.upenn.edu",
   "nsf_id": "000488968",
   "pi_start_date": "2011-03-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Pennsylvania",
  "inst_street_address": "3451 WALNUT ST STE 440A",
  "inst_street_address_2": "",
  "inst_city_name": "PHILADELPHIA",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "2158987293",
  "inst_zip_code": "191046205",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "PA03",
  "org_lgl_bus_name": "TRUSTEES OF THE UNIVERSITY OF PENNSYLVANIA, THE",
  "org_prnt_uei_num": "GM1XX56LEP58",
  "org_uei_num": "GM1XX56LEP58"
 },
 "perf_inst": {
  "perf_inst_name": "University of Pennsylvania",
  "perf_str_addr": "3451 WALNUT ST STE 440A",
  "perf_city_name": "PHILADELPHIA",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "191046205",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "PA03",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779500",
   "pgm_ele_name": "TRUSTWORTHY COMPUTING"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7795",
   "pgm_ref_txt": "TRUSTWORTHY COMPUTING"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 845847.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Operators of networks and distributed systems often find themselves needing to answer a diagnostic or forensic question. Some part of the system is found to be in an unexpected state - say, a suspicious routing table entry is discovered, or a proxy cache is found to contain an unusually large number of advertisements - and the operators must decide whether this state is legitimate, or whether it is caused by an attack or an intrusion. Thus, a key capability they need is the ability to ask the system to 'explain' its own state.<br /><br />This project has explored an approach to this problem that is based on network provenance. In essence, provenance is a recursive explanation of an event that links each event to its direct causes. For instance, the provenance of a cup of coffee would consist of the cup and some coffee beans; the beans would have come from a bag of beans, which would have come from a store, etc. The result is a tree, whose root is the event that is being explained, and whose leaves are the 'root causes' of that event. Such an explanation can be generated for distributed systems as well, and it is is very useful both for diagnosing problems and for investigating attacks.<br /><br />Provenance had originally been invented for databases, and previous techniques for maintaining and analyzing it were limited in several ways that made it difficult to apply the concept to distributed systems, especially in a security context. For instance, when some machines are compromised by an attacker, the attacker can tamper with the provenance to hide her presence, or to make it appear as if the problem was elsewhere, and thus send the operator on a wild-goose chase. To prevent this, we developed a number of generalizations of network provenance, including the following:<br /><br />* SECURE NETWORK PROVENANCE: A way to authenticate the provenance, so that the attacker can no longer tamper with it without giving away her presence;<br /><br />* TIME-AWARE PROVENANCE: A technique for capturing the provenance of both current and past states, and for storing this information compactly and efficiently;<br /><br />* PRIVATE PROVENANCE: A technique that can enable forensic investigations even if some of the information is private and cannot be disclosed to the investigator;<br /><br />* NEGATIVE PROVENANCE: A way to investigate problems that do not manifest in the presence of a bad event, but rather in the absence of a good event; and<br /><br />* META PROVENANCE: A method that can not only diagnose problems but also fix them automatically, by looking for repairs that are effective and do not have undesirable side-effects.<br /><br />We have shown how to apply our generalizations to a wide range of systems, including software-defined networks, big-data analytics, distributed hashtables, the Internet's control and data planes, and a content delivery network operated by Akamai. For each technique, we have also developed formal proofs of the key properties; this is important to ensure, for instance, that an attacker cannot find a `loophole' in our system that would allow him to circumvent it.<br /><br />The project was truly interdisciplinary; it brought together researchers with expertise in networking, distributed systems, databases, and security, and the results had impact in each of these four areas. In security, our work established provenance as a forensic tool, and we also developed a surprising new way to detect covert timing channels - a hard problem that the community has struggled with for decades. In distributed systems and networking, we contributed provenance as a new approach to data-center diagnostics (and other problems), and in databases, we introduced an unusual approach to provenance with interesting challenges and many practical applications. Our results were published at top venues in each of these four areas, and we also transferred some of our technologies to industry, e.g., by working with researchers from Akamai and from Microsoft Research.<br /><br />On the education side, we integrated provenance with two undergraduate and two graduate courses at Penn and Georgetown, including a freshly developed course for Penn's new undergraduate program in Networked and Social Systems Engineering (NETS). Many undergraduate and graduate students worked with us on the project, including three Master's students, seven PhD students, and one postdoc. Several of the students won awards, including a Yahoo KSC award, a honorable mention for the ACM SIGMOD Doctoral Dissertation award, and a MSR fellowship. After graduation, two of the students became tenure-track faculty members (at Rice and Georgetown), and the others accepted positions in the tech industry (e.g., at Facebook and Intel).</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/23/2017<br>\n\t\t\t\t\tModified by: Andreas&nbsp;Haeberlen</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nOperators of networks and distributed systems often find themselves needing to answer a diagnostic or forensic question. Some part of the system is found to be in an unexpected state - say, a suspicious routing table entry is discovered, or a proxy cache is found to contain an unusually large number of advertisements - and the operators must decide whether this state is legitimate, or whether it is caused by an attack or an intrusion. Thus, a key capability they need is the ability to ask the system to 'explain' its own state.\n\nThis project has explored an approach to this problem that is based on network provenance. In essence, provenance is a recursive explanation of an event that links each event to its direct causes. For instance, the provenance of a cup of coffee would consist of the cup and some coffee beans; the beans would have come from a bag of beans, which would have come from a store, etc. The result is a tree, whose root is the event that is being explained, and whose leaves are the 'root causes' of that event. Such an explanation can be generated for distributed systems as well, and it is is very useful both for diagnosing problems and for investigating attacks.\n\nProvenance had originally been invented for databases, and previous techniques for maintaining and analyzing it were limited in several ways that made it difficult to apply the concept to distributed systems, especially in a security context. For instance, when some machines are compromised by an attacker, the attacker can tamper with the provenance to hide her presence, or to make it appear as if the problem was elsewhere, and thus send the operator on a wild-goose chase. To prevent this, we developed a number of generalizations of network provenance, including the following:\n\n* SECURE NETWORK PROVENANCE: A way to authenticate the provenance, so that the attacker can no longer tamper with it without giving away her presence;\n\n* TIME-AWARE PROVENANCE: A technique for capturing the provenance of both current and past states, and for storing this information compactly and efficiently;\n\n* PRIVATE PROVENANCE: A technique that can enable forensic investigations even if some of the information is private and cannot be disclosed to the investigator;\n\n* NEGATIVE PROVENANCE: A way to investigate problems that do not manifest in the presence of a bad event, but rather in the absence of a good event; and\n\n* META PROVENANCE: A method that can not only diagnose problems but also fix them automatically, by looking for repairs that are effective and do not have undesirable side-effects.\n\nWe have shown how to apply our generalizations to a wide range of systems, including software-defined networks, big-data analytics, distributed hashtables, the Internet's control and data planes, and a content delivery network operated by Akamai. For each technique, we have also developed formal proofs of the key properties; this is important to ensure, for instance, that an attacker cannot find a `loophole' in our system that would allow him to circumvent it.\n\nThe project was truly interdisciplinary; it brought together researchers with expertise in networking, distributed systems, databases, and security, and the results had impact in each of these four areas. In security, our work established provenance as a forensic tool, and we also developed a surprising new way to detect covert timing channels - a hard problem that the community has struggled with for decades. In distributed systems and networking, we contributed provenance as a new approach to data-center diagnostics (and other problems), and in databases, we introduced an unusual approach to provenance with interesting challenges and many practical applications. Our results were published at top venues in each of these four areas, and we also transferred some of our technologies to industry, e.g., by working with researchers from Akamai and from Microsoft Research.\n\nOn the education side, we integrated provenance with two undergraduate and two graduate courses at Penn and Georgetown, including a freshly developed course for Penn's new undergraduate program in Networked and Social Systems Engineering (NETS). Many undergraduate and graduate students worked with us on the project, including three Master's students, seven PhD students, and one postdoc. Several of the students won awards, including a Yahoo KSC award, a honorable mention for the ACM SIGMOD Doctoral Dissertation award, and a MSR fellowship. After graduation, two of the students became tenure-track faculty members (at Rice and Georgetown), and the others accepted positions in the tech industry (e.g., at Facebook and Intel).\n\n\t\t\t\t\tLast Modified: 12/23/2017\n\n\t\t\t\t\tSubmitted by: Andreas Haeberlen"
 }
}