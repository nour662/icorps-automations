{
 "awd_id": "1117954",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Nearly Linear-Time Algorithms for Mixed Packing and Covering Linear Programs",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Balasubramanian Kalyanasundaram",
 "awd_eff_date": "2011-08-01",
 "awd_exp_date": "2014-07-31",
 "tot_intn_awd_amt": 102044.0,
 "awd_amount": 102044.0,
 "awd_min_amd_letter_date": "2011-06-06",
 "awd_max_amd_letter_date": "2011-06-06",
 "awd_abstract_narration": "On both practical and theoretical levels, linear programming is one of the most important optimization problems studied in Computer Science and Operations Research.  But, on both levels, our current understanding of linear programming has substantial room for improvement.  \r\n\r\nTheoretically, the worst-case time bounds that are known for current algorithms are far higher than what is observed in practice.  Although the recent development of smoothed analysis gives polynomial-bounded running time on certain kinds of instances, the bounds are still very high-degree polynomials, much larger than what we see in practice.  Our current theoretical models do not accurately model how linear-programming algorithms behave in practice. Practically, current algorithms often take time quadratic in the size of the input (even to find approximate, as opposed to optimal, solutions).  An ideal algorithm should take linear, or nearly linear, time.  State-of-the-art implementations (such as CPLEX) are generally commercially developed, taking research on them out of the public/academic domain.  Effective implementation of Simplex and Interior-Point algorithms is difficult, as evidenced by the performance gap between free and commercial solvers and the cost of the best commercial solvers. To solve very large problems, even the most effective implementations sometimes require manual testing and tuning, and even then can be unpredictably slow.  \r\n\r\nExisting algorithms leave room for improvement on several fronts, including ease of implementation, ease of use, numerical stability, public accessibility, running time, and good theoretical analyses.  Given the widespread practical and commercial importance of linear programming, the development and publication of algorithms with provably good worst-case running times, provable numerical stability, and relatively simple, open-source implementations, have the potential for broad practical and commercial impact. The goal of the project is to make progress in this direction by designing provably fast (nearly linear time) and numerically robust approximation algorithms for very large linear-programming problems.  The project focuses on algorithms for so-called mixed packing and covering linear programs --- an important special case in which all coefficients in the constraint matrix are non-negative.  In practice, for problem instances having more than thousands of rows and columns, the goal of the project is algorithms that find solutions within 1% of optimal, and do so orders of magnitude more quickly than algorithms now used in practice (Simplex, Interior Point, and Ellipsoid).   The algorithms should be numerically stable --- requiring no special treatment of instances with ill-conditioned constraint matrices.  The algorithms will be made publically available via implementations and open-source publications.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Neal",
   "pi_last_name": "Young",
   "pi_mid_init": "E",
   "pi_sufx_name": "",
   "pi_full_name": "Neal E Young",
   "pi_email_addr": "neal.young@ucr.edu",
   "nsf_id": "000288790",
   "pi_start_date": "2011-06-06",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Riverside",
  "inst_street_address": "200 UNIVERSTY OFC BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "RIVERSIDE",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "9518275535",
  "inst_zip_code": "925210001",
  "inst_country_name": "United States",
  "cong_dist_code": "39",
  "st_cong_dist_code": "CA39",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF CALIFORNIA AT RIVERSIDE",
  "org_prnt_uei_num": "",
  "org_uei_num": "MR5QC5FCAVH5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Riverside",
  "perf_str_addr": "200 UNIVERSTY OFC BUILDING",
  "perf_city_name": "RIVERSIDE",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "925210001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "39",
  "perf_st_cong_dist": "CA39",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7796",
   "pgm_ref_txt": "ALGORITHMIC FOUNDATIONS"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  },
  {
   "pgm_ref_code": "9218",
   "pgm_ref_txt": "BASIC RESEARCH & HUMAN RESORCS"
  },
  {
   "pgm_ref_code": "HPCC",
   "pgm_ref_txt": "HIGH PERFORMANCE COMPUTING & COMM"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 102044.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>On both theoretical and practical levels, linear programming is one of the most important optimization problems studied in Computer Science and Operations Research. But there is substantial room for improvement on both levels. Theoretically, our analyses of standard linear-programming algorithms give unrealistically high bounds. Practically, state-of-the-art codes such as CPLEX and Gurobi take a long time (super-linear) on large inputs and rely on proprietary methods, while public-domain algorithms abound but are often even slower and can be numerically unstable. &nbsp;</p>\n<p>The goal of this project was to design, analyse, and implement approximation algorithms for a special case of linear-programming problems called <em>mixed packing and covering problems</em>. &nbsp;As described in the proposal, the algorithms were to be numerically stable, and were to produce approximate solutions in nearly linear-time. &nbsp;The project accomplised these goals. &nbsp;In addition, it produced several parallel algorithms that can be implemented to run in poly-logarithmic time, requiring only nearly linear total work.</p>\n<p>The grant resulted in eight publications in peer-reviewed conferences and journals, as well as working implementations (of the sequential algorithms) published in open-source code repositories. &nbsp;For more details on the main results, see ``Nearly Linear-Time Approximation Schemes for Mixed Packing/Covering and Facility-Location Linear Programs'' (&nbsp;http://arxiv.org/abs/1407.3015 ).</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/18/2014<br>\n\t\t\t\t\tModified by: Neal&nbsp;E&nbsp;Young</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nOn both theoretical and practical levels, linear programming is one of the most important optimization problems studied in Computer Science and Operations Research. But there is substantial room for improvement on both levels. Theoretically, our analyses of standard linear-programming algorithms give unrealistically high bounds. Practically, state-of-the-art codes such as CPLEX and Gurobi take a long time (super-linear) on large inputs and rely on proprietary methods, while public-domain algorithms abound but are often even slower and can be numerically unstable.  \n\nThe goal of this project was to design, analyse, and implement approximation algorithms for a special case of linear-programming problems called mixed packing and covering problems.  As described in the proposal, the algorithms were to be numerically stable, and were to produce approximate solutions in nearly linear-time.  The project accomplised these goals.  In addition, it produced several parallel algorithms that can be implemented to run in poly-logarithmic time, requiring only nearly linear total work.\n\nThe grant resulted in eight publications in peer-reviewed conferences and journals, as well as working implementations (of the sequential algorithms) published in open-source code repositories.  For more details on the main results, see ``Nearly Linear-Time Approximation Schemes for Mixed Packing/Covering and Facility-Location Linear Programs'' ( http://arxiv.org/abs/1407.3015 ).\n\n\t\t\t\t\tLast Modified: 09/18/2014\n\n\t\t\t\t\tSubmitted by: Neal E Young"
 }
}