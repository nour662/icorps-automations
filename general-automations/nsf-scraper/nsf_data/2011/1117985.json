{
 "awd_id": "1117985",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Computing without a Leader: Building Blocks for Internet-Scale, Robust Computing",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Rahul Shah",
 "awd_eff_date": "2011-09-01",
 "awd_exp_date": "2016-08-31",
 "tot_intn_awd_amt": 365710.0,
 "awd_amount": 381499.0,
 "awd_min_amd_letter_date": "2011-08-11",
 "awd_max_amd_letter_date": "2012-03-09",
 "awd_abstract_narration": "How do ant colonies, bee hives, and markets function even when there is no leader?   A starting point for answering this question is the fundamental problem of agreement in distributed computing: Byzantine agreement.  The Byzantine agreement problem is to devise a protocol so that a group of agents, each with a private input can agree on a single common output that is equal to some agent's input.  The problem is complicated by the fact that an unknown subset of the agents suffer Byzantine faults: they can engage in arbitrary deviations from the protocol, including false messages and collusion.  Byzantine agreement has found applications in many areas, including peer-to-peer systems, database systems, control systems, grid computing, cloud computing and game theory.  Unfortunately, continued application is hampered by a stark barrier: there is no practical, scalable algorithm for Byzantine agreement.  In particular, all current Byzantine agreement algorithms require all-to-all communication: each agent must talk with every other agent.\r\n\r\nThis research will directly address this barrier by designing scalable algorithms for Byzantine agreement and other related problems.  Our goal is to design algorithms that are scalable in the sense that each agent sends a number of bits that is O(sqrt(n) log n), and total latency is O(log n), where n is the number of processors; and robust in the sense that they can tolerate up to a constant fraction of Byzantine faults.  In addition to Byzantine agreement, we will design scalable and robust algorithms for the following three related problems.  First, Subcommittee Election: All processors agree on one or more subcommittees of size O(log n), where the fraction of bad processors in each subcommittee is within epsilon of the fraction of bad processors in the network, for any positive epsilon.  Second, MapReduce: Enable the MapReduce software framework, even when there is no master.  Finally, Robust Multiparty Computation: Each processor starts with a private input and there is a publicly known function F on n variables; the goal is for all users to learn the output of F at the point given by the private inputs.  The long-term vision is to develop a technique, based on Byzantine agreement, that is on par with techniques like cryptography and error-correcting codes by 1) being frequently used in practice and applicable across a wide range of applications; and 2) having a clean interface between theory and practice.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Jared",
   "pi_last_name": "Saia",
   "pi_mid_init": "C",
   "pi_sufx_name": "",
   "pi_full_name": "Jared C Saia",
   "pi_email_addr": "saia@cs.unm.edu",
   "nsf_id": "000260597",
   "pi_start_date": "2011-08-11",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of New Mexico",
  "inst_street_address": "1 UNIVERSITY OF NEW MEXICO",
  "inst_street_address_2": "",
  "inst_city_name": "ALBUQUERQUE",
  "inst_state_code": "NM",
  "inst_state_name": "New Mexico",
  "inst_phone_num": "5052774186",
  "inst_zip_code": "871310001",
  "inst_country_name": "United States",
  "cong_dist_code": "01",
  "st_cong_dist_code": "NM01",
  "org_lgl_bus_name": "UNIVERSITY OF NEW MEXICO",
  "org_prnt_uei_num": "",
  "org_uei_num": "F6XLTRUQJEN4"
 },
 "perf_inst": {
  "perf_inst_name": "University of New Mexico",
  "perf_str_addr": "1 UNIVERSITY OF NEW MEXICO",
  "perf_city_name": "ALBUQUERQUE",
  "perf_st_code": "NM",
  "perf_st_name": "New Mexico",
  "perf_zip_code": "871310001",
  "perf_ctry_code": "US",
  "perf_cong_dist": "01",
  "perf_st_cong_dist": "NM01",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7329",
   "pgm_ref_txt": "COMPILERS"
  },
  {
   "pgm_ref_code": "7927",
   "pgm_ref_txt": "COMPLEXITY & CRYPTOGRAPHY"
  },
  {
   "pgm_ref_code": "7934",
   "pgm_ref_txt": "PARAL/DISTRIBUTED ALGORITHMS"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 365710.0
  },
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 15789.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This grant has had several significant outcomes.</p>\n<p>First, we designed efficient algorithms for the multiparty computation problem (MPC). &nbsp;In the MPC problem, n parties each have a private input. &nbsp;They want to jointly compute a function f of n variables over their inputs, without revealing any information about the private inputs (beyond what can be learned from the output of f). &nbsp;An algorithm for MPC enables decentralized simulation of a mediator, since the function f can be the advice offered by the mediator, based on private information obtained from all the players.</p>\n<p>Our main result was an algorithm that solves the MPC problem while requiring each player to send and receive a number of bits that is about square root of n, and requires latency that is polylogarithmic in n. &nbsp;This contrasts with previous results for this problem where the number of messages sent is linear in n. &nbsp;We obtained this result by making significant use of a new tool: quorums, which are small groups of mostly good processors that work together as a single functional unit. &nbsp;Our paper describing this result won a best paper award at the International Conference on Distributed Computing and Networking (ICDCN), 2014. &nbsp; Our result in this area used mathematical and algorithmic tools that we previously developed in solving the Byzantine agreement problem.&nbsp;</p>\n<p>A final result is in Interactive Computation, which asks: how can two parties compute over a noisy channel? We describe the first algorithm that enables two party interactive computation, where the resource costs of both parties scale well with the number of bits that are (adversarially) corrupted on the channel. This work has results in a conference and journal publication. &nbsp;In recent work, we are extending the result to multiple parties.</p>\n<p>Invited talks and presentations on this research include an invited keynote talk at the International Conference on Current Trends in Theory and Practice of Computer Science (SOFSEM), 2014, and invited talks at Osaka University, Yale, and the Workshop on Localized Algorithms (WOLA) at Microsoft Research.</p>\n<p>Finally, this grant has supported several PhD students. &nbsp;Two of these students have graduated, and are now post docs at Yale. Mahnush Movahedi is a female student who is working with Mariana Raykova at Yale, and Mahdi Zamani is her husband who is working with Joan Feigenbaum at Yale. &nbsp;Two other PhD students are both on track to complete their first papers this year: Diksha Gupta and Abhinav Aggarwal.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/10/2016<br>\n\t\t\t\t\tModified by: Jared&nbsp;C&nbsp;Saia</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis grant has had several significant outcomes.\n\nFirst, we designed efficient algorithms for the multiparty computation problem (MPC).  In the MPC problem, n parties each have a private input.  They want to jointly compute a function f of n variables over their inputs, without revealing any information about the private inputs (beyond what can be learned from the output of f).  An algorithm for MPC enables decentralized simulation of a mediator, since the function f can be the advice offered by the mediator, based on private information obtained from all the players.\n\nOur main result was an algorithm that solves the MPC problem while requiring each player to send and receive a number of bits that is about square root of n, and requires latency that is polylogarithmic in n.  This contrasts with previous results for this problem where the number of messages sent is linear in n.  We obtained this result by making significant use of a new tool: quorums, which are small groups of mostly good processors that work together as a single functional unit.  Our paper describing this result won a best paper award at the International Conference on Distributed Computing and Networking (ICDCN), 2014.   Our result in this area used mathematical and algorithmic tools that we previously developed in solving the Byzantine agreement problem. \n\nA final result is in Interactive Computation, which asks: how can two parties compute over a noisy channel? We describe the first algorithm that enables two party interactive computation, where the resource costs of both parties scale well with the number of bits that are (adversarially) corrupted on the channel. This work has results in a conference and journal publication.  In recent work, we are extending the result to multiple parties.\n\nInvited talks and presentations on this research include an invited keynote talk at the International Conference on Current Trends in Theory and Practice of Computer Science (SOFSEM), 2014, and invited talks at Osaka University, Yale, and the Workshop on Localized Algorithms (WOLA) at Microsoft Research.\n\nFinally, this grant has supported several PhD students.  Two of these students have graduated, and are now post docs at Yale. Mahnush Movahedi is a female student who is working with Mariana Raykova at Yale, and Mahdi Zamani is her husband who is working with Joan Feigenbaum at Yale.  Two other PhD students are both on track to complete their first papers this year: Diksha Gupta and Abhinav Aggarwal.\n\n\t\t\t\t\tLast Modified: 10/10/2016\n\n\t\t\t\t\tSubmitted by: Jared C Saia"
 }
}