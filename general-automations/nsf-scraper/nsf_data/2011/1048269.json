{
 "awd_id": "1048269",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CiC: FRCC: Cloud Storage with Minimal Trust",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927498",
 "po_email": "achtchel@nsf.gov",
 "po_sign_block_name": "Almadena Chtchelkanova",
 "awd_eff_date": "2011-04-01",
 "awd_exp_date": "2014-03-31",
 "tot_intn_awd_amt": 370000.0,
 "awd_amount": 370000.0,
 "awd_min_amd_letter_date": "2011-03-25",
 "awd_max_amd_letter_date": "2011-03-25",
 "awd_abstract_narration": "This project asks: how can one build a cloud storage service under minimal trust assumptions? The project aims to design, implement, and evaluate a practical, concrete system that allows clients to use cloud storage providers like Azure and S3 -- but without the clients having to trust, that is assume, that the providers always operate correctly. \r\n\r\nOf course, reducing assumptions is generically good, but doing so is particularly relevant to cloud storage: for economic and operational reasons, data is increasingly migrating to storage service providers (SSPs), yet SSPs are complex black boxes that can experience software bugs, correlated manufacturing defects, misconfigured servers, operator error, malicious insiders, bankruptcy, fires, and more. \r\n\r\nFor these reasons, the project is building a system, called Padova, that tolerates scenarios in which all servers in the SSP fail, and the failures include malicious, buggy, or improbably unlucky behaviors.  The approach is enforce a sensible ordering of updates at the client; this provides the foundation for safety and allows a client to gather updates from any node in the system, client or server, which in turn contributes to liveness and availability. Padova eliminates trust for safety and minimizes trust for liveness and availability.\r\n\r\nThis project makes cloud storage safer for existing customers and spur further adoption of cloud storage. This  means more people paying less for computing, producing beneficial effects throughout the computational ecosystem. The educational benefits include graduate and undergraduate mentoring, the latter through UT's Turing Scholars program, which cultivates particularly talented undergraduates.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Walfish",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Michael H Walfish",
   "pi_email_addr": "mwalfish@gmail.com",
   "nsf_id": "000653725",
   "pi_start_date": "2011-03-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Michael",
   "pi_last_name": "Dahlin",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Michael D Dahlin",
   "pi_email_addr": "dahlin@cs.utexas.edu",
   "nsf_id": "000403062",
   "pi_start_date": "2011-03-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Lorenzo",
   "pi_last_name": "Alvisi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Lorenzo Alvisi",
   "pi_email_addr": "la13@cornell.edu",
   "nsf_id": "000217257",
   "pi_start_date": "2011-03-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Texas at Austin",
  "inst_street_address": "110 INNER CAMPUS DR",
  "inst_street_address_2": "",
  "inst_city_name": "AUSTIN",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "5124716424",
  "inst_zip_code": "787121139",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "TX25",
  "org_lgl_bus_name": "UNIVERSITY OF TEXAS AT AUSTIN",
  "org_prnt_uei_num": "",
  "org_uei_num": "V6AFQPN18437"
 },
 "perf_inst": {
  "perf_inst_name": "University of Texas at Austin",
  "perf_str_addr": "110 INNER CAMPUS DR",
  "perf_city_name": "AUSTIN",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "787121139",
  "perf_ctry_code": "US",
  "perf_cong_dist": "25",
  "perf_st_cong_dist": "TX25",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "801000",
   "pgm_ele_name": "Computing in the Cloud"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "8010",
   "pgm_ref_txt": "Computing in the Cloud"
  },
  {
   "pgm_ref_code": "9218",
   "pgm_ref_txt": "BASIC RESEARCH & HUMAN RESORCS"
  },
  {
   "pgm_ref_code": "HPCC",
   "pgm_ref_txt": "HIGH PERFORMANCE COMPUTING & COMM"
  }
 ],
 "app_fund": [
  {
   "app_code": "0111",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001112DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 370000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>MOTIVATION AND INTELLECTUAL PROGRESS</p>\n<p><br />This project is motivated by the rise of outsourced, or cloud, computing: companies and individuals now store their data on banks of machines controlled by someone else. Even as this arrangement brings economic benefits, it brings issues. The providers of the outsourced service are complex, making it unlikely that they always operate correctly; moreover, they are black boxes, making it difficult to detect if a problem has occurred. (The problems include corruption of data, misconfiguration, operator error, malice, hardware errors, etc.)</p>\n<p><br />Given this context, the goal of the project is remove trust from cloud systems, with a primary focus on storage systems. The ideal (which is not always achievable) is to provide guarantees to cloud customers, and allow them to get useful work out of the cloud service, _even if the service malfunctions in arbitrary ways_.</p>\n<p><br />Specific outcomes of the project include the following:</p>\n<p><br />* The Depot system. Depot is an implemented software package that allows developers, and implicitly their customers (that is, all of us) to use cloud storage services without having to worry that their data (photos, calendars, etc.) might be lost, stale, corrupted, or compromised. Of course, many things can go wrong with cloud storage, and Depot's approach is not to enumerate all of them but to rely on verifications at the _client_ of the service, which heads off a range of malfunctions. Depot provides its guarantees at minor computational costs.</p>\n<p><br />* The Salus system. Despite the encouraging results of Depot, it is limited to modestly-sized data volumes (megabytes or gigabytes per customer). &nbsp;The Salus thrust refines Depot's techniques to reduce their costs. This allows the system to scale to much larger data volumes: in principle, petabytes or exabytes. As part of Salus, the project has developed an emulator that allows researchers to experiment with large-scale storage systems, while using 100x fewer machines than would be required to actually run the system.</p>\n<p><br />* The Pantry system. Depot and Salus give clients assurances about the correctness of the storage layer (for example, clients gain assurance that what they read corresponds to what the other clients wrote). But what if, in addition, the cloud itself is processing or computing on the stored data? Can we give assurances to the client_both_ that storage is operating correctly _and_ that the computation is executing correctly? The Pantry thrust shows that such assurances are possible. Specifically, it was known in theory how to provide such guarantees, but the costs were far too expensive for practice. Pantryhas dramatically reduced such costs in the context of an implemented system. While the system is not yet practical, it suggests that these techniques could be practical in the future.</p>\n<p>&nbsp;</p>\n<p>IMPACT, DISSEMINATION, AND EDUCATION</p>\n<p><br />The project's results, if \"productized\", could allow customers to use cloud services for storage without having to trust (that is, assume) that the cloud works correctly.</p>\n<p><br />The results of the project have been disseminated in competitive, peer-reviewed venues.</p>\n<p><br />The project has produced education benefits at a number of levels: graduate, undergraduate, and secondary school. First, the project has provided crucial research training to eight graduate students at UT Austin; these students have gained experience in all aspects of research, and four of them have filed, or are on the cusp of filing,t heir PhD dissertations. Second, one of the PIs routinely involves undergraduates in research projects; indeed, some of the publications that have come out of this project have undergraduate co-authors. Last, one of the PIs has taught a short lecture series on the principles of distributed computing at the magnet high school in...",
  "por_txt_cntn": "\nMOTIVATION AND INTELLECTUAL PROGRESS\n\n\nThis project is motivated by the rise of outsourced, or cloud, computing: companies and individuals now store their data on banks of machines controlled by someone else. Even as this arrangement brings economic benefits, it brings issues. The providers of the outsourced service are complex, making it unlikely that they always operate correctly; moreover, they are black boxes, making it difficult to detect if a problem has occurred. (The problems include corruption of data, misconfiguration, operator error, malice, hardware errors, etc.)\n\n\nGiven this context, the goal of the project is remove trust from cloud systems, with a primary focus on storage systems. The ideal (which is not always achievable) is to provide guarantees to cloud customers, and allow them to get useful work out of the cloud service, _even if the service malfunctions in arbitrary ways_.\n\n\nSpecific outcomes of the project include the following:\n\n\n* The Depot system. Depot is an implemented software package that allows developers, and implicitly their customers (that is, all of us) to use cloud storage services without having to worry that their data (photos, calendars, etc.) might be lost, stale, corrupted, or compromised. Of course, many things can go wrong with cloud storage, and Depot's approach is not to enumerate all of them but to rely on verifications at the _client_ of the service, which heads off a range of malfunctions. Depot provides its guarantees at minor computational costs.\n\n\n* The Salus system. Despite the encouraging results of Depot, it is limited to modestly-sized data volumes (megabytes or gigabytes per customer).  The Salus thrust refines Depot's techniques to reduce their costs. This allows the system to scale to much larger data volumes: in principle, petabytes or exabytes. As part of Salus, the project has developed an emulator that allows researchers to experiment with large-scale storage systems, while using 100x fewer machines than would be required to actually run the system.\n\n\n* The Pantry system. Depot and Salus give clients assurances about the correctness of the storage layer (for example, clients gain assurance that what they read corresponds to what the other clients wrote). But what if, in addition, the cloud itself is processing or computing on the stored data? Can we give assurances to the client_both_ that storage is operating correctly _and_ that the computation is executing correctly? The Pantry thrust shows that such assurances are possible. Specifically, it was known in theory how to provide such guarantees, but the costs were far too expensive for practice. Pantryhas dramatically reduced such costs in the context of an implemented system. While the system is not yet practical, it suggests that these techniques could be practical in the future.\n\n \n\nIMPACT, DISSEMINATION, AND EDUCATION\n\n\nThe project's results, if \"productized\", could allow customers to use cloud services for storage without having to trust (that is, assume) that the cloud works correctly.\n\n\nThe results of the project have been disseminated in competitive, peer-reviewed venues.\n\n\nThe project has produced education benefits at a number of levels: graduate, undergraduate, and secondary school. First, the project has provided crucial research training to eight graduate students at UT Austin; these students have gained experience in all aspects of research, and four of them have filed, or are on the cusp of filing,t heir PhD dissertations. Second, one of the PIs routinely involves undergraduates in research projects; indeed, some of the publications that have come out of this project have undergraduate co-authors. Last, one of the PIs has taught a short lecture series on the principles of distributed computing at the magnet high school in Austin.\n\n\t\t\t\t\tLast Modified: 06/26/2014\n\n\t\t\t\t\tSubmitted by: Michael Walfish"
 }
}