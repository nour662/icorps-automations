{
 "awd_id": "1044061",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Integrating Open Source Software Projects into the Software Engineering Curriculum",
 "cfda_num": "47.076",
 "org_code": "11040200",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Stephanie August",
 "awd_eff_date": "2011-05-01",
 "awd_exp_date": "2017-08-31",
 "tot_intn_awd_amt": 200000.0,
 "awd_amount": 200000.0,
 "awd_min_amd_letter_date": "2011-05-25",
 "awd_max_amd_letter_date": "2017-04-12",
 "awd_abstract_narration": "The University of Connecticut is developing a methodological approach to the integration of open source software systems into the undergraduate software engineering curriculum. A key goal of the project is to cultivate the students' attitudes and skills to handle a variety of industrial challenges. The project provides students with a realistic view of what software engineers do in industry by focusing on code comprehension and reverse engineering skills.  Maintenance-centric software engineering assignments are made based on the diverse set of readily available open source software projects.  Open source software code is also used to teach requirements, design, and testing skills to the students. The students will apply their skills to evolve existing, legacy software systems. \r\n\r\nThe methodology includes a systematic approach to the selection of suitable open source software projects based on metrics-based predictive analysis. The predictive model for project selection will facilitate the adoption of the integration methodology at other institutions. \r\n\r\nThis open source software integration project offers a systematic, tested approach to designing software engineering assignments that mimic industrial experiences and challenges. The integration transforms the present 'build-from-scratch' type software engineering assignments into 'maintenance-centric' assignments in line with those found in the software industry. \r\n\r\nThe results, experiences, and challenges of the integration project will be shared with the computing education community through workshops and publications. University of Connecticut K-12 outreach programs will increase the awareness of software engineering as a profession among high-school juniors and seniors, underrepresented groups, and K-12 teachers.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DUE",
 "org_div_long_name": "Division Of Undergraduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Swapna",
   "pi_last_name": "Gokhale",
   "pi_mid_init": "S",
   "pi_sufx_name": "",
   "pi_full_name": "Swapna S Gokhale",
   "pi_email_addr": "ssg@engr.uconn.edu",
   "nsf_id": "000250669",
   "pi_start_date": "2011-05-25",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Robert",
   "pi_last_name": "McCartney",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Robert D McCartney",
   "pi_email_addr": "robert@engr.uconn.edu",
   "nsf_id": "000322477",
   "pi_start_date": "2011-05-25",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Connecticut",
  "inst_street_address": "438 WHITNEY RD EXTENSION UNIT 1133",
  "inst_street_address_2": "",
  "inst_city_name": "STORRS",
  "inst_state_code": "CT",
  "inst_state_name": "Connecticut",
  "inst_phone_num": "8604863622",
  "inst_zip_code": "062699018",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "CT02",
  "org_lgl_bus_name": "UNIVERSITY OF CONNECTICUT",
  "org_prnt_uei_num": "",
  "org_uei_num": "WNTPS995QBM7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Connecticut",
  "perf_str_addr": "438 WHITNEY RD EXTENSION UNIT 1133",
  "perf_city_name": "STORRS",
  "perf_st_code": "CT",
  "perf_st_name": "Connecticut",
  "perf_zip_code": "062699018",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "CT02",
  "perf_ctry_name": "",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "153600",
   "pgm_ele_name": "S-STEM-Schlr Sci Tech Eng&Math"
  },
  {
   "pgm_ele_code": "751300",
   "pgm_ele_name": "TUES-Type 1 Project"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0411",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001112DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  },
  {
   "app_code": "13XX",
   "app_name": "H-1B FUND, EHR, NSF",
   "app_symb_id": "045176",
   "fund_code": "1300XXXXDB",
   "fund_name": "H-1B FUND, EDU, NSF",
   "fund_symb_id": "045176"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2011,
   "fund_oblg_amt": 200000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The outcomes of the project were as follows:</p>\n<p>Intellectual Merit: The project investigated how easily open source software could be integrated into the introductory software engineering class. This integration of open source software was meant provide a body to code to mimic/emulate the challenges of maintaining and evolving software systems which have little to no documentation. The two key outcomes of the project were as follows:</p>\n<p>1. Most open source software projects, especially of smaller size requires substantial trial and error and rework to get it up and running. As such, these systems are far from the \"download and run\" promise offered by open source software.</p>\n<p>2. To the extent that we used open source software as base for software maintenace projects, we were successful in emphasizing to the students that software maintenace and evolution is the most time consuming, resource intensive phase of the software lifecycle.</p>\n<p>&nbsp;</p>\n<p>Broad impact: Open source software can definitely, in theory, provide a volume of code to teach important software engineering concepts and principles. However, with the current state of code in open source repositories, it takes an inordinate amount of time and effort to prepare OSS projects for use in the curriculum. Many papers, outling these challenges, and the positive feedback received from the students were published at various conferences. The open source software projects that we prepared for integration were also made available to other instructors should they decide to use them. Finally, we investigated some open source data sources such as the stack overflow network to detect communities within them.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/16/2018<br>\n\t\t\t\t\tModified by: Swapna&nbsp;S&nbsp;Gokhale</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe outcomes of the project were as follows:\n\nIntellectual Merit: The project investigated how easily open source software could be integrated into the introductory software engineering class. This integration of open source software was meant provide a body to code to mimic/emulate the challenges of maintaining and evolving software systems which have little to no documentation. The two key outcomes of the project were as follows:\n\n1. Most open source software projects, especially of smaller size requires substantial trial and error and rework to get it up and running. As such, these systems are far from the \"download and run\" promise offered by open source software.\n\n2. To the extent that we used open source software as base for software maintenace projects, we were successful in emphasizing to the students that software maintenace and evolution is the most time consuming, resource intensive phase of the software lifecycle.\n\n \n\nBroad impact: Open source software can definitely, in theory, provide a volume of code to teach important software engineering concepts and principles. However, with the current state of code in open source repositories, it takes an inordinate amount of time and effort to prepare OSS projects for use in the curriculum. Many papers, outling these challenges, and the positive feedback received from the students were published at various conferences. The open source software projects that we prepared for integration were also made available to other instructors should they decide to use them. Finally, we investigated some open source data sources such as the stack overflow network to detect communities within them.\n\n\t\t\t\t\tLast Modified: 01/16/2018\n\n\t\t\t\t\tSubmitted by: Swapna S Gokhale"
 }
}