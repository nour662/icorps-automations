{
 "awd_id": "1234062",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "The Power Of Limited Flexibility And Resource Pooling",
 "cfda_num": "47.041",
 "org_code": "07030000",
 "po_phone": "7032922443",
 "po_email": "gaklutke@nsf.gov",
 "po_sign_block_name": "Georgia-Ann Klutke",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2016-08-31",
 "tot_intn_awd_amt": 320000.0,
 "awd_amount": 320000.0,
 "awd_min_amd_letter_date": "2012-08-08",
 "awd_max_amd_letter_date": "2012-08-08",
 "awd_abstract_narration": "This award provides funding for the development of a mathematical theory of large-scale service systems that employ flexible resources in order to process a sequence of diverse incoming tasks. Centralized systems with fully flexible resources (so-called complete resource pooling) generally offer significant performance improvements when compared to decentralized and inflexible systems in which each resource is dedicated to a specific type of tasks. However, full flexibility typically entails a heavy infrastructural cost. The project will focus on identifying and analyzing situations where a limited amount of flexibility (i.e., when only a small fraction of the available resources are flexible) achieves almost all of the performance benefits of full flexibility. In particular, the project will study various mathematical models involving partial flexibility and/or partial information sharing, and carry out a performance analysis, with a focus on systems that involve nontrivial dynamics, and in the limit of large systems, in order to derive scaling laws.\r\n\r\nPartial flexibility has the potential for major performance improvements, at moderate capital and operating cost, in a vast array of important application domains, such as data centers, server farms, sensor networks, supply chains, and medical staffing. If successful, the results of this research (to be disseminated through scholarly publications, seminars, and the training of students) will provide valuable insights and guidance on how to architect, design, and operate efficiently partially flexible systems.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "CMMI",
 "org_div_long_name": "Division of Civil, Mechanical, and Manufacturing Innovation",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "John",
   "pi_last_name": "Tsitsiklis",
   "pi_mid_init": "N",
   "pi_sufx_name": "",
   "pi_full_name": "John N Tsitsiklis",
   "pi_email_addr": "jnt@mit.edu",
   "nsf_id": "000108597",
   "pi_start_date": "2012-08-08",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Massachusetts Institute of Technology",
  "inst_street_address": "77 MASSACHUSETTS AVE",
  "inst_street_address_2": "",
  "inst_city_name": "CAMBRIDGE",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172531000",
  "inst_zip_code": "021394301",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "MA07",
  "org_lgl_bus_name": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY",
  "org_prnt_uei_num": "E2NYLCDML6V1",
  "org_uei_num": "E2NYLCDML6V1"
 },
 "perf_inst": {
  "perf_inst_name": "Massachusetts Institute of Technology",
  "perf_str_addr": "77 Massachusetts Avenue",
  "perf_city_name": "Cambridge",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021394307",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "MA07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "551400",
   "pgm_ele_name": "OPERATIONS RESEARCH"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "072E",
   "pgm_ref_txt": "NETWORKS & QUEUING SYSTEMS"
  },
  {
   "pgm_ref_code": "073E",
   "pgm_ref_txt": "OPTIMIZATION & DECISION MAKING"
  },
  {
   "pgm_ref_code": "077E",
   "pgm_ref_txt": "SIMULATION MODELS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 320000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Consider any service system where a number of servers (or agents) are to respond to incoming requests of many different types. At one extreme, each agent is inflexible, and can only take care of one particular type of requests. At the other extreme, every agent is fully flexible, able to respond to all types of requests. This last possibility results in better delay performance, but requires more sophisticated (hence, typically, more expensive) agents. This project has established that most of the performance advantages of the fully flexible architecture can be reaped by having either (i) only a small subset of the agents being fully flexible, or (ii) by employing agents with only limited flexibility, i.e., having each agent be able to process a relatvely small subset of the request types. These results have natural ramifications for the design of large scale service systems, from server farms to call centers.<br /><br />A second direction undertaken under this project addresses the amount of resources required to efficiently operate (i.e., with small delay) a multi-server system that serves a stream of incoming jobs with random processing times. In particular, it focuses on the amount of memory available at the job dispatcher, as well as the rate at which the dispatcher exchanges messages with the servers. By identifying the memory and message rate combinations that lead to favorable performance, the results of this project provide useful insights on architectural choices related to large scale service systems.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/19/2017<br>\n\t\t\t\t\tModified by: John&nbsp;N&nbsp;Tsitsiklis</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nConsider any service system where a number of servers (or agents) are to respond to incoming requests of many different types. At one extreme, each agent is inflexible, and can only take care of one particular type of requests. At the other extreme, every agent is fully flexible, able to respond to all types of requests. This last possibility results in better delay performance, but requires more sophisticated (hence, typically, more expensive) agents. This project has established that most of the performance advantages of the fully flexible architecture can be reaped by having either (i) only a small subset of the agents being fully flexible, or (ii) by employing agents with only limited flexibility, i.e., having each agent be able to process a relatvely small subset of the request types. These results have natural ramifications for the design of large scale service systems, from server farms to call centers.\n\nA second direction undertaken under this project addresses the amount of resources required to efficiently operate (i.e., with small delay) a multi-server system that serves a stream of incoming jobs with random processing times. In particular, it focuses on the amount of memory available at the job dispatcher, as well as the rate at which the dispatcher exchanges messages with the servers. By identifying the memory and message rate combinations that lead to favorable performance, the results of this project provide useful insights on architectural choices related to large scale service systems.\n\n\t\t\t\t\tLast Modified: 06/19/2017\n\n\t\t\t\t\tSubmitted by: John N Tsitsiklis"
 }
}