{
 "awd_id": "1217058",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CIF: Small: Decoding Error-Correcting Codes using Large-Scale Decomposition Methods",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032922981",
 "po_email": "pregalia@nsf.gov",
 "po_sign_block_name": "Phillip Regalia",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2018-08-31",
 "tot_intn_awd_amt": 424062.0,
 "awd_amount": 424062.0,
 "awd_min_amd_letter_date": "2012-08-31",
 "awd_max_amd_letter_date": "2017-08-24",
 "awd_abstract_narration": "This research draws upon techniques from large-scale optimization to develop new decoding algorithms for error-correcting codes.  Initial results yield a scalable decoding algorithm for linear programming decoding that runs as fast as state-of-the-art decoders, has a simple schedule, robust convergence guarantees, and achieves better empirical performance than standard decoding algorithms when the signal-to-noise ratio is high.   The decoding algorithm will have a transformative effect on the types of codes used in high-reliability applications including storage, optical networks, and microprocessor architectures. \r\n\r\nThis project will develop further results, analyzing in detail algorithmic behavior in the \"error floor regime\" where the signal-to-noise ratio is high.  It will examine the algorithmic robustness to the specifics of hardware implementation, and investigate other applications in coding such as high-density, non-binary, and rank-metric codes. The PIs will extend the algorithmic methods to applications beyond decoding error-correcting codes, investigating large-scale data processing applications in graphical models and statistical estimation.  The research thrusts of the project are well suited for incorporation into the PIs' courses in digital communication, optimization, and information processing for \"big data\" problems more broadly.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Robert",
   "pi_last_name": "Nowak",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Robert D Nowak",
   "pi_email_addr": "rdnowak@wisc.edu",
   "nsf_id": "000338270",
   "pi_start_date": "2014-05-09",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Stark",
   "pi_last_name": "Draper",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Stark Draper",
   "pi_email_addr": "sdraper@ece.wisc.edu",
   "nsf_id": "000508966",
   "pi_start_date": "2012-08-31",
   "pi_end_date": "2014-05-09"
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Benjamin",
   "pi_last_name": "Recht",
   "pi_mid_init": "H",
   "pi_sufx_name": "",
   "pi_full_name": "Benjamin H Recht",
   "pi_email_addr": "brecht@berkeley.edu",
   "nsf_id": "000569581",
   "pi_start_date": "2012-08-31",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Wisconsin-Madison",
  "inst_street_address": "21 N PARK ST STE 6301",
  "inst_street_address_2": "",
  "inst_city_name": "MADISON",
  "inst_state_code": "WI",
  "inst_state_name": "Wisconsin",
  "inst_phone_num": "6082623822",
  "inst_zip_code": "537151218",
  "inst_country_name": "United States",
  "cong_dist_code": "02",
  "st_cong_dist_code": "WI02",
  "org_lgl_bus_name": "UNIVERSITY OF WISCONSIN SYSTEM",
  "org_prnt_uei_num": "",
  "org_uei_num": "LCLSJAGTNZQ7"
 },
 "perf_inst": {
  "perf_inst_name": "University of Wisconsin-Madison",
  "perf_str_addr": "1415 Engineering Drive",
  "perf_city_name": "Madison",
  "perf_st_code": "WI",
  "perf_st_name": "Wisconsin",
  "perf_zip_code": "537061607",
  "perf_ctry_code": "US",
  "perf_cong_dist": "02",
  "perf_st_cong_dist": "WI02",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "164000",
   "pgm_ele_name": "Information Technology Researc"
  },
  {
   "pgm_ele_code": "779700",
   "pgm_ele_name": "Comm & Information Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7935",
   "pgm_ref_txt": "COMM & INFORMATION THEORY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 424062.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span>The aim of this project was to bring techniques of large-scale distributed convex optimization to bear in developing novel implementations of error-correction decoding. &nbsp;Our aim was to solve the long-standing \"error-floor\" problem of low-density parity-check (LDPC) codes. &nbsp;Error-floors present problems for digital communication systems that require exceptionally high transmission speed and ultra-high reliability. &nbsp;Optical transport networks are one such important application. &nbsp;Over the life of this project a number of major findings have resulted. &nbsp;</span></p>\n<p><span>First, we showed how to solve the linear programming (LP) relaxation of the maximum likelihood (ML) error-correction decoding problem in a computationally efficient manner using the alternating direction method of multipliers (ADMM). &nbsp;Our approach is computationally competitive with state-of-the-art belief propagation (BP) decoders and has much improved error floor performance. &nbsp;We made a public release of our software, which has been used and built upon by numerous other research groups.</span></p>\n<p><span>Second, we observed that at lower signal-to-noise ratios (SNRs), in the \"waterfall\" regime, our ADMM-LP decoder displayed an SNR-gap versus BP decoding. &nbsp;This was the case even through our ADMM-LP decoder solves the LP relaxation exactly; the gap is a property of the relaxation.&nbsp; To close this gap we introduced a \"penalized\" objective into the standard LP relaxation. &nbsp;Although the objective function becomes slightly non-convex, a slight modification of ADMM can be applied to this problem, with no increase in computational cost. &nbsp;Studying the performance of the modified decoder experimentally and analytically, we showed that the modification closes the SNR gap to BP while maintaining the much-improved error-floor performance of LP decoding.</span></p>\n<p><span>Third, we explored the use of ADMM-LP in other error-correction problems. &nbsp;We showed how to apply ADMM-LP decoding to non-binary LDPC codes, useful in higher-order modulation. &nbsp;We showed how to apply ADMM-LP decoding to multi-permutation codes, useful in flash memory. &nbsp;We also explored the implementation in hardware of the ADMM-LP decoder. &nbsp;We demonstrated the first fixed-point implementation of ADMM-LP, in a field-programmable gate array (FPGA). &nbsp;Implementation in FPGA is the first step in developing an application-specific integrated circuit (ASIC), which would be required in any commercial deployment of the technology.</span></p>\n<p><span>Fourth, in the latter half of the project we \"flipped the arrow\". &nbsp;Instead of applying optimization to error-correction we asked how ideas of error-correction coding can be used to accelerate large-scale optimization. &nbsp;We explored a \"coding-for-computing\" paradigm. &nbsp;In this paradigm techniques of error correction are applied in distributed computing systems to build redundant copies of computations. &nbsp;In cloud computing systems, wherein some subset of \"straggler\" nodes are unpredictably delayed, widely parallelized workloads can experience unacceptable stalling due to waiting for the last straggler(s) to report in. &nbsp;One solution is to generate redundant computations. &nbsp;By drawing on techniques of error-correction we show that for certain important linear algebraic primitives (matrix-vector multiplication, matrix-matrix multiplication, data shuffling), redundant copies of computations that are not pure replications of the other computations can be generated. &nbsp;The use of such coded computing ideas significantly accelerates convergence, important in big data and large-scale machine learning applications. &nbsp;</span></p>\n<p><span>Finally, paralleling and complementing our efforts on coded-computing, we developed techniques of \"anytime\" computing to deal with stragglers. &nbsp;Instead of assigning a fixed-sized data batch to each worker, we allocate workers a fixed amount of time to work in each computing epoch. &nbsp;In settings that require data synchronization between computing epochs, this approach greatly ameliorates the issue of stragglers. &nbsp;Effectively, our approach transforms a the problem setting from one wherein a variable number of workers finish their work to one in which a variable amount of work is completed per worker.&nbsp; Our approach shows significant gains, which we have verified both in commercial cloud computing systems such as the Amazon Elastic Compute Cloud (EC2), and in academic high-performance computing clusters.</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/26/2018<br>\n\t\t\t\t\tModified by: Robert&nbsp;D&nbsp;Nowak</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe aim of this project was to bring techniques of large-scale distributed convex optimization to bear in developing novel implementations of error-correction decoding.  Our aim was to solve the long-standing \"error-floor\" problem of low-density parity-check (LDPC) codes.  Error-floors present problems for digital communication systems that require exceptionally high transmission speed and ultra-high reliability.  Optical transport networks are one such important application.  Over the life of this project a number of major findings have resulted.  \n\nFirst, we showed how to solve the linear programming (LP) relaxation of the maximum likelihood (ML) error-correction decoding problem in a computationally efficient manner using the alternating direction method of multipliers (ADMM).  Our approach is computationally competitive with state-of-the-art belief propagation (BP) decoders and has much improved error floor performance.  We made a public release of our software, which has been used and built upon by numerous other research groups.\n\nSecond, we observed that at lower signal-to-noise ratios (SNRs), in the \"waterfall\" regime, our ADMM-LP decoder displayed an SNR-gap versus BP decoding.  This was the case even through our ADMM-LP decoder solves the LP relaxation exactly; the gap is a property of the relaxation.  To close this gap we introduced a \"penalized\" objective into the standard LP relaxation.  Although the objective function becomes slightly non-convex, a slight modification of ADMM can be applied to this problem, with no increase in computational cost.  Studying the performance of the modified decoder experimentally and analytically, we showed that the modification closes the SNR gap to BP while maintaining the much-improved error-floor performance of LP decoding.\n\nThird, we explored the use of ADMM-LP in other error-correction problems.  We showed how to apply ADMM-LP decoding to non-binary LDPC codes, useful in higher-order modulation.  We showed how to apply ADMM-LP decoding to multi-permutation codes, useful in flash memory.  We also explored the implementation in hardware of the ADMM-LP decoder.  We demonstrated the first fixed-point implementation of ADMM-LP, in a field-programmable gate array (FPGA).  Implementation in FPGA is the first step in developing an application-specific integrated circuit (ASIC), which would be required in any commercial deployment of the technology.\n\nFourth, in the latter half of the project we \"flipped the arrow\".  Instead of applying optimization to error-correction we asked how ideas of error-correction coding can be used to accelerate large-scale optimization.  We explored a \"coding-for-computing\" paradigm.  In this paradigm techniques of error correction are applied in distributed computing systems to build redundant copies of computations.  In cloud computing systems, wherein some subset of \"straggler\" nodes are unpredictably delayed, widely parallelized workloads can experience unacceptable stalling due to waiting for the last straggler(s) to report in.  One solution is to generate redundant computations.  By drawing on techniques of error-correction we show that for certain important linear algebraic primitives (matrix-vector multiplication, matrix-matrix multiplication, data shuffling), redundant copies of computations that are not pure replications of the other computations can be generated.  The use of such coded computing ideas significantly accelerates convergence, important in big data and large-scale machine learning applications.  \n\nFinally, paralleling and complementing our efforts on coded-computing, we developed techniques of \"anytime\" computing to deal with stragglers.  Instead of assigning a fixed-sized data batch to each worker, we allocate workers a fixed amount of time to work in each computing epoch.  In settings that require data synchronization between computing epochs, this approach greatly ameliorates the issue of stragglers.  Effectively, our approach transforms a the problem setting from one wherein a variable number of workers finish their work to one in which a variable amount of work is completed per worker.  Our approach shows significant gains, which we have verified both in commercial cloud computing systems such as the Amazon Elastic Compute Cloud (EC2), and in academic high-performance computing clusters.\n\n \n\n\t\t\t\t\tLast Modified: 11/26/2018\n\n\t\t\t\t\tSubmitted by: Robert D Nowak"
 }
}