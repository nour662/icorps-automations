{
 "awd_id": "1217928",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "III: Small: Collaborative Research: Linking Evolving Software Requirements and Acceptance Tests",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": "7032927841",
 "po_email": "sgreensp@nsf.gov",
 "po_sign_block_name": "Sol Greenspan",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2016-08-31",
 "tot_intn_awd_amt": 249999.0,
 "awd_amount": 249999.0,
 "awd_min_amd_letter_date": "2012-06-20",
 "awd_max_amd_letter_date": "2012-06-20",
 "awd_abstract_narration": "Two distinct milestones of any software development lifecycle are requirements gathering and acceptance testing, where a software product is verified against its requirements. Yet this verification is one of the most difficult tasks, since it involves bridging an abstraction gap between high-level descriptions of requirements and their low-level implementations in the source code.  Determining how different requirements are covered by acceptance tests is very hard, since it means tracing each acceptance test to specific requirements. Many companies and organizations do not have or cannot invest significant resources into recovering links among requirements, acceptance tests and other artifacts. As a result, software development is not as efficient as it could be, lacking controls to steer the overall testing and bug-fixing effort, and involving extra work peripheral to the core tasks. The end result is a situation in which it is unclear how well software is tested and how much confidence stakeholders can have in it.\r\n\r\nWe are addressing this fundamental problem by defining and developing a new, integrated model for recovering traceability links using execution artifacts, diverse models, and requirements. We develop techniques for automatically generating additional test cases that execute untested code to recover additional traceability links and verify existing ones. To ensure that our approach is effective, we will perform rigorous case studies in real industrial scenarios to evaluate the model, techniques, and methodologies. As a result, the state-of-the-practice in software development will be improved that faces difficulties in ensuing that software products are tested fully with respect to their requirements.  Among the broader impacts the project includes developing educational course content, involving underrepresented categories of students, producing software tools under open source licenses, and collaborating with industry to transfer technology.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Mark",
   "pi_last_name": "Grechanik",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Mark Grechanik",
   "pi_email_addr": "drmark@uic.edu",
   "nsf_id": "000516683",
   "pi_start_date": "2012-06-20",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Illinois at Chicago",
  "inst_street_address": "809 S MARSHFIELD AVE M/C 551",
  "inst_street_address_2": "",
  "inst_city_name": "CHICAGO",
  "inst_state_code": "IL",
  "inst_state_name": "Illinois",
  "inst_phone_num": "3129962862",
  "inst_zip_code": "606124305",
  "inst_country_name": "United States",
  "cong_dist_code": "07",
  "st_cong_dist_code": "IL07",
  "org_lgl_bus_name": "UNIVERSITY OF ILLINOIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "W8XEAJDKMXH3"
 },
 "perf_inst": {
  "perf_inst_name": "University of Illinois at Chicago",
  "perf_str_addr": "809 S MARSHFIELD RM 608",
  "perf_city_name": "Chicago",
  "perf_st_code": "IL",
  "perf_st_name": "Illinois",
  "perf_zip_code": "606124305",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "IL07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7944",
   "pgm_ref_txt": "SOFTWARE ENG & FORMAL METHODS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 249999.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>A core of this research project is to address a fundamental problem of determining how different requirements are covered by acceptance tests. This is a very important and difficult to solve problem, since it means tracing each acceptance test to specific requirements when requirements and the software applications evolve. As part of the work on this proposal, we defined and developed new, integrated models for recovering traceability links using execution artifacts, diverse models, and requirements. We created techniques and algorithms to recover additional traceability links and verify existing ones, to investigate the notion of similarity between software applications, and to create novel software testing approaches that facilitate linking requirements to acceptance tests. We performed rigorous case studies in real industrial scenarios to evaluate our models, techniques, and methodologies. We believe that our results improved the state-of-the-practice in software development ensuring that software products are tested fully with respect to their requirements. One Ph.D. student, B.M. Mainul Hussain whose research was sponsored by this grant graduated with the Ph.D. in Computer Science in 2014 and he is an Assistant Professor at the University of Dhaka in Bangladesh. Among the broader impacts the project included developing educational course content (CS 594 at the University of Illinois at Chicago), involving underrepresented categories of students, producing software tools under open source licenses, and collaborating with industry to transfer technology.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/09/2016<br>\n\t\t\t\t\tModified by: Mark&nbsp;Grechanik</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nA core of this research project is to address a fundamental problem of determining how different requirements are covered by acceptance tests. This is a very important and difficult to solve problem, since it means tracing each acceptance test to specific requirements when requirements and the software applications evolve. As part of the work on this proposal, we defined and developed new, integrated models for recovering traceability links using execution artifacts, diverse models, and requirements. We created techniques and algorithms to recover additional traceability links and verify existing ones, to investigate the notion of similarity between software applications, and to create novel software testing approaches that facilitate linking requirements to acceptance tests. We performed rigorous case studies in real industrial scenarios to evaluate our models, techniques, and methodologies. We believe that our results improved the state-of-the-practice in software development ensuring that software products are tested fully with respect to their requirements. One Ph.D. student, B.M. Mainul Hussain whose research was sponsored by this grant graduated with the Ph.D. in Computer Science in 2014 and he is an Assistant Professor at the University of Dhaka in Bangladesh. Among the broader impacts the project included developing educational course content (CS 594 at the University of Illinois at Chicago), involving underrepresented categories of students, producing software tools under open source licenses, and collaborating with industry to transfer technology.\n\n\t\t\t\t\tLast Modified: 09/09/2016\n\n\t\t\t\t\tSubmitted by: Mark Grechanik"
 }
}