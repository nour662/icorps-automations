{
 "awd_id": "1150230",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CAREER: Computational Reconstruction of K12 Science (CoRe-Science): Integrating Computational Thinking and Modeling with School Science",
 "cfda_num": "47.070",
 "org_code": "05090000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Daniel Katz",
 "awd_eff_date": "2012-06-01",
 "awd_exp_date": "2015-09-30",
 "tot_intn_awd_amt": 754000.0,
 "awd_amount": 727790.0,
 "awd_min_amd_letter_date": "2012-06-04",
 "awd_max_amd_letter_date": "2015-10-16",
 "awd_abstract_narration": "This five year CAREER project (CoRe-Science: Computational Reconstruction of K12 Science) seeks to address the following research question: How does the design of agent-based programming languages and modeling platforms need to change in order to support deep curricular integration of computational thinking, programming and modeling with middle-school curricular science in the domains of physics and biology, without necessitating a radical restructuring of student and teacher preparation? This project has following objectives: a) To develop ViMAP, a new, multi-agent-based, visual programming language and modeling platform specifically for integrating computational programming and modeling with middle school curricular science in kinematics and ecology; b) To seamlessly integrate ViMAP and accompanying learning activities with existing project-based middle-school curricula in kinematics and ecology; and c) conduct empirical studies to identify how students develop computational thinking in the context of learning to model and use models for investigation (and vice versa), and to identify trajectories towards competency in computational thinking and modeling. The team will conduct classroom implementations of the CoRe-Science units in several urban public middle schools. The topic areas of kinematics and ecology were selected because they are important in light of national science education standards; they are experienced as extremely difficult by learners; they are amenable to agent-based modeling approaches; and prior work has prepared the PI to develop high-quality curricular materials on these topics. Besides the technological innovation, the products of this project are research findings, such as: a) empirically tested design principles for programming languages for K12 curricular integration, and b) the process, nature and role of computational thinking in the development of students' conceptual understanding in the two domains. In addition, classroom ready curricular units in kinematics and ecology, including the ViMAP programming and modeling platform, accompanying learning activities, and teacher support materials will be deployed and disseminated through a broad network of educational communities.\r\n\r\nOver the past few decades, computational thinking and modeling has emerged to be a key element of scientific and engineering expertise. Infusing computational thinking and the use of computational tools into the middle school curriculum in appropriate ways can promote this cross-cutting expertise. However, integrating general purpose computational programming with K12 curricular science has been shown to be challenging, and CoRe-Science seeks to address this issue by developing a new visual programming language and modeling environment specifically for scientific modeling for middle school students, and seamlessly integrate it with an existing science curriculum for middle school physics and biology. The products include new learning technologies that can be widely disseminated, and research findings based on empirical studies, that should be the basis of a framework to inform the future development of similar systems.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "OAC",
 "org_div_long_name": "Office of Advanced Cyberinfrastructure (OAC)",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Pratim",
   "pi_last_name": "Sengupta",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Pratim Sengupta",
   "pi_email_addr": "pratim.sengupta@Vanderbilt.Edu",
   "nsf_id": "000548930",
   "pi_start_date": "2012-06-04",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Vanderbilt University",
  "inst_street_address": "110 21ST AVE S",
  "inst_street_address_2": "",
  "inst_city_name": "NASHVILLE",
  "inst_state_code": "TN",
  "inst_state_name": "Tennessee",
  "inst_phone_num": "6153222631",
  "inst_zip_code": "372032416",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "TN05",
  "org_lgl_bus_name": "VANDERBILT UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "GTNBNWXJ12D5"
 },
 "perf_inst": {
  "perf_inst_name": "Vanderbilt University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "TN",
  "perf_st_name": "Tennessee",
  "perf_zip_code": "372401111",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "TN07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "104500",
   "pgm_ele_name": "CAREER: FACULTY EARLY CAR DEV"
  },
  {
   "pgm_ele_code": "762500",
   "pgm_ele_name": "REAL"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "1045",
   "pgm_ref_txt": "CAREER-Faculty Erly Career Dev"
  },
  {
   "pgm_ref_code": "1187",
   "pgm_ref_txt": "PECASE- eligible"
  },
  {
   "pgm_ref_code": "7625",
   "pgm_ref_txt": "REESE"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0412",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001213DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 727789.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Introducing computational modeling as the way of &ldquo;doing science&rdquo; in K12 classes can greatly increase students&rsquo; participation in computing. But how can K12 science teachers, who may have little or no programming experience, teach such classes? And further, how can teachers and students adopt computational modeling in a manner that not only deepens science learning, but also supports the development of authentic programming experiences? To goal of this project is to answer these questions, by inventing and develop ViMAP (<a href=\"http://www.vimapk12.net\">www.vimapk12.net</a>) an open-source programming language specifically for K12 science (and math) classrooms, and by conducting research on how teachers and students can appropriate ViMAP throughout the academic year as part of their curricula in elementary and middle grades.</p>\n<p>We designed ViMAP specifically for the following goals: a) to enable year-long curricular integration of programming as a means for modeling relevant scientific phenomena in K12 classrooms, and b) to create pathway to authentic programming experiences, by providing learners opportunities for both visual programming and text-based programming. Since 2012, we have conducted several studies where 3rd, 4th, 5th, and 8th grade Nashville area public school teachers and students, with no prior experience in programming, used programming as part of their regular science curricula <em>throughout the academic year</em>. &nbsp;Our main findings illustrate the following: a) how teachers (and students) appropriate programming as part of their regular math and science curriculum using ViMAP, and b) how students in higher grades can further deepen their computational thinking by migrating from visual to text-based programming.</p>\n<p>We developed three &ldquo;modalities&rdquo; of ViMAP: ViMAP Turtles, ViMAP Image Computation, and ViMAP Tangible. ViMAP Turtles is the standard agent-based visual programming platform that enables children as young as 3rd graders to use visual programming to build computational models of both single-agent systems (e.g., motion of an object) and multi-agent systems (e.g., ecology). ViMAP Image Computation is a modified version of ViMAP Turtles that enables children to import images within ViMAP, generate computational agents and classes by selecting portions of the imported image, and create animations by asking these different classes of agents to interact with one another. ViMAP Tangible was created to integrate sensor-based, physical computations with ViMAP Turtles through the Arduino microcontroller. In each version of ViMAP, graphing plays a big role, because we have found that K12 teachers often use graphing and measurement as a way to integrate programming within their science and math curricula.</p>\n<p>We have also developed a version of ViMAP called ViMAP-Transitions that is focused on enabling a smooth transition from visual to text-based programming. This version of ViMAP allows the learner to open up the underlying NetLogo model file in which ViMAP visual programming commands and the NetLogo simulation which is controlled by these commands are defined. Our studies show that 8<sup>th</sup> graders can successfully develop their own ViMAP commands for modeling ecology using text-based programming, and in the process, learn both computational thinking and scientific modeling. &nbsp;</p>\n<p>This project contributes to the following fields:</p>\n<ol>\n<li>Computer Science: The development of domain specific modeling languages (DSML) is an important area in software engineering. This project adopts the DSML perspective in order to support the development of agent-based programming languages that can be used for teaching K12 science. The main contribution of this project is that it shows how user requirements (in this case, the teacher&rsquo;s pedagogical dispositions, children&rsquo;s emergent understan...",
  "por_txt_cntn": "\nIntroducing computational modeling as the way of \"doing science\" in K12 classes can greatly increase students\u00c6 participation in computing. But how can K12 science teachers, who may have little or no programming experience, teach such classes? And further, how can teachers and students adopt computational modeling in a manner that not only deepens science learning, but also supports the development of authentic programming experiences? To goal of this project is to answer these questions, by inventing and develop ViMAP (www.vimapk12.net) an open-source programming language specifically for K12 science (and math) classrooms, and by conducting research on how teachers and students can appropriate ViMAP throughout the academic year as part of their curricula in elementary and middle grades.\n\nWe designed ViMAP specifically for the following goals: a) to enable year-long curricular integration of programming as a means for modeling relevant scientific phenomena in K12 classrooms, and b) to create pathway to authentic programming experiences, by providing learners opportunities for both visual programming and text-based programming. Since 2012, we have conducted several studies where 3rd, 4th, 5th, and 8th grade Nashville area public school teachers and students, with no prior experience in programming, used programming as part of their regular science curricula throughout the academic year.  Our main findings illustrate the following: a) how teachers (and students) appropriate programming as part of their regular math and science curriculum using ViMAP, and b) how students in higher grades can further deepen their computational thinking by migrating from visual to text-based programming.\n\nWe developed three \"modalities\" of ViMAP: ViMAP Turtles, ViMAP Image Computation, and ViMAP Tangible. ViMAP Turtles is the standard agent-based visual programming platform that enables children as young as 3rd graders to use visual programming to build computational models of both single-agent systems (e.g., motion of an object) and multi-agent systems (e.g., ecology). ViMAP Image Computation is a modified version of ViMAP Turtles that enables children to import images within ViMAP, generate computational agents and classes by selecting portions of the imported image, and create animations by asking these different classes of agents to interact with one another. ViMAP Tangible was created to integrate sensor-based, physical computations with ViMAP Turtles through the Arduino microcontroller. In each version of ViMAP, graphing plays a big role, because we have found that K12 teachers often use graphing and measurement as a way to integrate programming within their science and math curricula.\n\nWe have also developed a version of ViMAP called ViMAP-Transitions that is focused on enabling a smooth transition from visual to text-based programming. This version of ViMAP allows the learner to open up the underlying NetLogo model file in which ViMAP visual programming commands and the NetLogo simulation which is controlled by these commands are defined. Our studies show that 8th graders can successfully develop their own ViMAP commands for modeling ecology using text-based programming, and in the process, learn both computational thinking and scientific modeling.  \n\nThis project contributes to the following fields:\n\nComputer Science: The development of domain specific modeling languages (DSML) is an important area in software engineering. This project adopts the DSML perspective in order to support the development of agent-based programming languages that can be used for teaching K12 science. The main contribution of this project is that it shows how user requirements (in this case, the teacher\u00c6s pedagogical dispositions, children\u00c6s emergent understandings and state mandated science standards) affect the development of agent-based DSMLs for K12 science classrooms.  In the field of HCI, this project also contributes by investigating what kind of UI are nee..."
 }
}