{
 "awd_id": "1162187",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Medium: Collaborative Research: Building Critical Systems with Verifiable Properties Using Gate Level Analysis",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2017-08-31",
 "tot_intn_awd_amt": 799915.0,
 "awd_amount": 823315.0,
 "awd_min_amd_letter_date": "2012-08-28",
 "awd_max_amd_letter_date": "2013-05-31",
 "awd_abstract_narration": "Computer performance has doubled many times over during the past 40 years, but the very techniques used to achieve these performance gains have made it increasingly difficult to build systems that are provably safe, secure, or reliable. This fact significantly impedes progress in the development of our most safety-critical embedded systems such as those found in medical, avionic, automotive, and military systems.  A transformation in the way that these systems are created is needed, one that uses new hardware design techniques, computer architectures, and programming languages to create classes of hardware/software systems with formal and provable safety properties that are verifiable all the way down to the implementation level of bits and logic gates.\r\n\r\nThis research will change the way that hardware and embedded systems designers approach the problem of provable properties, enabling them to directly control and analyze the system at the lowest level and to statically determine if their designs are in compliance with a given policy.  For example, if a system must be real-time this property can be verifiable for a full system, from gates to software, by ensuring that the architecture design carefully manages interference through a set of new hardware primitives, software designed to exploit these new primitives, specialized hardware analysis tools, and new design languages.  To ensure this technology will have impact beyond academia the PIs are making these new technologies available and accessible through easy to use tools, continuing to include undergraduates at all levels of research to help train a new generation of engineers capable of designing safety-critical systems, and integrating concepts from information assurance into their extensive outreach activities.  Over the long term this research will help create the skills and tools that embedded system engineers need to evaluate the trustworthiness of their systems, and it will ease the development of those critical systems on which we all depend on for our safety and livelihood.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Timothy",
   "pi_last_name": "Sherwood",
   "pi_mid_init": "P",
   "pi_sufx_name": "",
   "pi_full_name": "Timothy P Sherwood",
   "pi_email_addr": "sherwood@cs.ucsb.edu",
   "nsf_id": "000488790",
   "pi_start_date": "2012-08-28",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Ben",
   "pi_last_name": "Hardekopf",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Ben Hardekopf",
   "pi_email_addr": "benh@cs.ucsb.edu",
   "nsf_id": "000549385",
   "pi_start_date": "2012-08-28",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Santa Barbara",
  "inst_street_address": "3227 CHEADLE HALL",
  "inst_street_address_2": "",
  "inst_city_name": "SANTA BARBARA",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "8058934188",
  "inst_zip_code": "931060001",
  "inst_country_name": "United States",
  "cong_dist_code": "24",
  "st_cong_dist_code": "CA24",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, SANTA BARBARA",
  "org_prnt_uei_num": "",
  "org_uei_num": "G9QBQDH39DF4"
 },
 "perf_inst": {
  "perf_inst_name": "University of California-Santa Barbara",
  "perf_str_addr": "Harold Frank Hall",
  "perf_city_name": "Santa Barbara",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "931065110",
  "perf_ctry_code": "US",
  "perf_cong_dist": "24",
  "perf_st_cong_dist": "CA24",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0113",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001314DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 799915.0
  },
  {
   "fund_oblg_fiscal_yr": 2013,
   "fund_oblg_amt": 23400.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p><span id=\"docs-internal-guid-167c15f1-82b5-3d61-79a6-ca0cb7434c88\">\n<p dir=\"ltr\"><span>Computer performance has doubled many times over during the past 40 years, but the very techniques used to achieve these performance gains have made it increasingly difficult to build systems that provably have important properties. The lack of the ability to develop secure system has a tremendous impact. &nbsp;For example, systems responsible for controlling aircraft, protecting a bank's master secret keys, or regulating access to extremely sensitive commercial or military information, all demand a level of assurance far beyond the norm. Creating these systems today is an incredibly expensive operation both in terms of time and money; and even assessing the assurance of the resulting system can cost thousands of dollars per line of code (and systems might need hundreds of thousands to millions of lines of code). The techniques developed in this project have lead directly to methods for building embedded systems that allow one to verify the integrity or secrecy of all information executing in that system. &nbsp;As our society become even more dependent on computing for everything from finance, to voting, to defense, a sound foundation on which to build these trusted systems is more important now than ever before. </span></p>\n<p dir=\"ltr\"><span>Of course security is not a single &ldquo;thing&rdquo;. &nbsp;Security is, in part, a set of properties one would like a system to have. &nbsp;While these have technical names, such as determinism, fault tolerance, real-time guarantees, and secure information flow, at the end of the day they call come down to the computer system doing only what is need to get the job done. &nbsp;Security is a pervasive topic that spans across all aspects of computer system design. This ranges from topics related to protecting individual privacy (e.g., ensuring that sensitive data is properly encrypted) to making computing systems resilient and available. The latter is particularly important in our nation&rsquo;s critical infrastructure including transportation (automobiles, planes), power delivery (SCADA systems, electrical grid), medical (pace makers, hospital record systems), and Internet (server farms, laptops). </span></p>\n<p dir=\"ltr\"><span>The research carried out demonstrates, for the first time, that it is possible to build systems with complex security properties in a way that it can be proven mathematically that they hold. &nbsp;Specifically the research funded under this award created a set of &nbsp;computer system design techniques (including the computer architecture and the programming language abstractions) necessary to create new types of secure-by-design computer systems. The security of these system can then be analyzed from the high level behavior all the way down to the individual logic gates of the system. &nbsp;Before this work was carried there did not exist an computer hardware/software system designed from the ground up to be mathematically analyzed for security.</span></p>\n<p dir=\"ltr\"><span>Accomplishing this required the sustained effort of some of the most talented graduate and undergraduate researchers. &nbsp;Achieving the security properties desired in complex systems is difficult. Even the possibility of a slight discrepancy in timing, a moment of unplanned resource contention, or a single loose memory access is enough to cause a change in event ordering which can break those properties. &nbsp;To address this the investigators developed new general ways to expand the our analysis method for multilevel security. Specifically, it formalizes tracking logic for an arbitrary Boolean gate under finite security lattices, provides a precise tracking logic generation method for eliminating false positives in GLIFT logic created in a constructive manner, and illustrates application scenarios of GLIFT for enforcing multilevel information flow security. Building on this result the PIs have completed an award winning prototype that allows for constructive reasoning about a variety of properties and have manuscripts published in prominent peer reviewed venues.</span></p>\n<div><span><br /></span></div>\n</span></p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/23/2017<br>\n\t\t\t\t\tModified by: Timothy&nbsp;P&nbsp;Sherwood</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\n\nComputer performance has doubled many times over during the past 40 years, but the very techniques used to achieve these performance gains have made it increasingly difficult to build systems that provably have important properties. The lack of the ability to develop secure system has a tremendous impact.  For example, systems responsible for controlling aircraft, protecting a bank's master secret keys, or regulating access to extremely sensitive commercial or military information, all demand a level of assurance far beyond the norm. Creating these systems today is an incredibly expensive operation both in terms of time and money; and even assessing the assurance of the resulting system can cost thousands of dollars per line of code (and systems might need hundreds of thousands to millions of lines of code). The techniques developed in this project have lead directly to methods for building embedded systems that allow one to verify the integrity or secrecy of all information executing in that system.  As our society become even more dependent on computing for everything from finance, to voting, to defense, a sound foundation on which to build these trusted systems is more important now than ever before. \nOf course security is not a single \"thing\".  Security is, in part, a set of properties one would like a system to have.  While these have technical names, such as determinism, fault tolerance, real-time guarantees, and secure information flow, at the end of the day they call come down to the computer system doing only what is need to get the job done.  Security is a pervasive topic that spans across all aspects of computer system design. This ranges from topics related to protecting individual privacy (e.g., ensuring that sensitive data is properly encrypted) to making computing systems resilient and available. The latter is particularly important in our nation?s critical infrastructure including transportation (automobiles, planes), power delivery (SCADA systems, electrical grid), medical (pace makers, hospital record systems), and Internet (server farms, laptops). \nThe research carried out demonstrates, for the first time, that it is possible to build systems with complex security properties in a way that it can be proven mathematically that they hold.  Specifically the research funded under this award created a set of  computer system design techniques (including the computer architecture and the programming language abstractions) necessary to create new types of secure-by-design computer systems. The security of these system can then be analyzed from the high level behavior all the way down to the individual logic gates of the system.  Before this work was carried there did not exist an computer hardware/software system designed from the ground up to be mathematically analyzed for security.\nAccomplishing this required the sustained effort of some of the most talented graduate and undergraduate researchers.  Achieving the security properties desired in complex systems is difficult. Even the possibility of a slight discrepancy in timing, a moment of unplanned resource contention, or a single loose memory access is enough to cause a change in event ordering which can break those properties.  To address this the investigators developed new general ways to expand the our analysis method for multilevel security. Specifically, it formalizes tracking logic for an arbitrary Boolean gate under finite security lattices, provides a precise tracking logic generation method for eliminating false positives in GLIFT logic created in a constructive manner, and illustrates application scenarios of GLIFT for enforcing multilevel information flow security. Building on this result the PIs have completed an award winning prototype that allows for constructive reasoning about a variety of properties and have manuscripts published in prominent peer reviewed venues.\n\n\n\n\n \n\n\t\t\t\t\tLast Modified: 12/23/2017\n\n\t\t\t\t\tSubmitted by: Timothy P Sherwood"
 }
}