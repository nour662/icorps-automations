{
 "awd_id": "1161857",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Continuing Grant",
 "awd_titl_txt": "CSR: Medium: Easy PRAM-Based High-Performance Parallel Programming with Immediate Concurrent Execution (ICE)",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2012-06-01",
 "awd_exp_date": "2018-05-31",
 "tot_intn_awd_amt": 656001.0,
 "awd_amount": 656001.0,
 "awd_min_amd_letter_date": "2012-06-15",
 "awd_max_amd_letter_date": "2015-07-08",
 "awd_abstract_narration": "Parallel programming is in crisis: its difficulty dissuades all but the most determined (and deep-pocketed)\r\nsoftware vendors, and speedups are often disappointing for all but regular programs. Merely augmenting\r\nthe substantial knowledge-base of parallel computing with incremental ideas in algorithms, programming\r\nlanguages, compilers, hardware, power or applications, interesting as they may be, is unlikely to change\r\nthis reality.\r\nThis project advances a powerful idea for drastically improving ease-of-programming within the context of\r\na holistic many-core research architecture called XMT. Our contention is that without the co-design of\r\nlanguage and architecture, one cannot conquer the twin challenges of easy programming and efficient\r\nparallelization of irregular programs. Therefore we are developing a new easy-to-program language\r\ncalled ICE as part of ecosystem consisting of XMT, the PRAM algorithmic model, and ICE, that together\r\ndeliver on this twin goal. The XMT architecture, developed at UMD over the last decade, is capable of\r\nexploiting fine-grained parallelism in irregular programs. ICE is based on the successful PRAM algorithm\r\nmodel, which provides a rich theory for parallel programming, and has led to published parallel algorithms\r\nfor hundreds of problems.\r\nThe broader impact of this project includes (i) much easier parallel programming model leading to more\r\nsuccinct and intuitive code; (ii) freeing the programmer of many complex issues in parallel programming,\r\nleading to greater productivity and acceptance of parallel programming; (iii) the nearness of ICE and\r\nPRAM means that programmers would instantly have a rich ?library? of parallel algorithms without having\r\nto write their own; (iv) a language especially suitable to an architecture that has demonstrated\r\nunprecedented speedups on hard-to-parallelize irregular applications; and (v) a very active outreach\r\nprogram that has already seen XMT being used at many research and educational institutions.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Rajeev",
   "pi_last_name": "Barua",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Rajeev Barua",
   "pi_email_addr": "barua@eng.umd.edu",
   "nsf_id": "000096111",
   "pi_start_date": "2012-06-15",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Uzi",
   "pi_last_name": "Vishkin",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Uzi Vishkin",
   "pi_email_addr": "vishkin@umiacs.umd.edu",
   "nsf_id": "000420383",
   "pi_start_date": "2012-06-15",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Maryland, College Park",
  "inst_street_address": "3112 LEE BUILDING",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE PARK",
  "inst_state_code": "MD",
  "inst_state_name": "Maryland",
  "inst_phone_num": "3014056269",
  "inst_zip_code": "207425100",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "MD04",
  "org_lgl_bus_name": "UNIVERSITY OF MARYLAND, COLLEGE PARK",
  "org_prnt_uei_num": "NPU8ULVAAS23",
  "org_uei_num": "NPU8ULVAAS23"
 },
 "perf_inst": {
  "perf_inst_name": "University of Maryland College Park",
  "perf_str_addr": "A.V.Williams Building",
  "perf_city_name": "College Park",
  "perf_st_code": "MD",
  "perf_st_name": "Maryland",
  "perf_zip_code": "207423285",
  "perf_ctry_code": "US",
  "perf_cong_dist": null,
  "perf_st_cong_dist": "MD",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0113",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001314DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 165359.0
  },
  {
   "fund_oblg_fiscal_yr": 2013,
   "fund_oblg_amt": 156222.0
  },
  {
   "fund_oblg_fiscal_yr": 2014,
   "fund_oblg_amt": 163428.0
  },
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 170992.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The unique overriding quest&nbsp;motivating the project has been to reproduce one of the biggest technical success stories of the&nbsp;20th century, given&nbsp;recent and&nbsp;near-future Moore's Law type opportunities.</p>\n<p>The past success story is the mathematical-induction-based von-Neumann approach to serial computing. Induction was the foremost tool developed by centuries of Mathematicians for facilitating rigorous reasoning.</p>\n<p>By&nbsp;properly harnessing&nbsp;induction into a computer design and its programming,&nbsp;von-Neumann put computers on a \"general-purpose\" track&nbsp;that enabled&nbsp;many later contributors to&nbsp;invent numerous applications; the breadth and scope of these later applications have exceeded by many orders of magnitude&nbsp;the applications&nbsp;that&nbsp;von Neumann envisioned. &nbsp;Our overriding quest has been to redo this, but for parallelism.</p>\n<p>What co-PI-Vishkin envisioned is harnessing&nbsp;induction for general-purpose parallel systems and their programming that can be also easily&nbsp;targeted for current and future applications.</p>\n<p>His prior work as one of the founders of the field of parallel&nbsp;algorithms already supported this vision; parallelism in such algorithms is often expressed using a single pseudo-code command in a synchronous parallel computation model known as PRAM, in addition to serial pseudo-code; that pseudo-code command is the same PARDO (&ldquo;parallel DO&rdquo;) command of Immediate Concurrent Execution (ICE) programming, the focus of our project.</p>\n<p>Our prior architecture and joint compiler work produced the XMT framework along with its extensively prototyping and demonstration of feasibility. However, prior to our current work XMT still fell short on using a strict mathematical-induction-based programming, as it was still based on multi-threading which is inherently not synchronous, using a language called XMTC.</p>\n<p>The lead outcome of our project finally nailed down ICE programming, which is fully mathematical-induction-based for XMT.</p>\n<p>Furthermore, our ICE-to-XMTC compiler established that performance of ICE programs can be on par with the fastest hand optimized XMTC code. &nbsp;This last result even exceeded the respective outcomes anticipated in our original proposal.</p>\n<p>The result enhanced confidence in the overall direction. A startup has licensed in May 2017 active XMT patents, and a magnet high school has already taught the approach to over 600 students, including 75 in 2017.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/26/2018<br>\n\t\t\t\t\tModified by: Rajeev&nbsp;Barua</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe unique overriding quest motivating the project has been to reproduce one of the biggest technical success stories of the 20th century, given recent and near-future Moore's Law type opportunities.\n\nThe past success story is the mathematical-induction-based von-Neumann approach to serial computing. Induction was the foremost tool developed by centuries of Mathematicians for facilitating rigorous reasoning.\n\nBy properly harnessing induction into a computer design and its programming, von-Neumann put computers on a \"general-purpose\" track that enabled many later contributors to invent numerous applications; the breadth and scope of these later applications have exceeded by many orders of magnitude the applications that von Neumann envisioned.  Our overriding quest has been to redo this, but for parallelism.\n\nWhat co-PI-Vishkin envisioned is harnessing induction for general-purpose parallel systems and their programming that can be also easily targeted for current and future applications.\n\nHis prior work as one of the founders of the field of parallel algorithms already supported this vision; parallelism in such algorithms is often expressed using a single pseudo-code command in a synchronous parallel computation model known as PRAM, in addition to serial pseudo-code; that pseudo-code command is the same PARDO (\"parallel DO\") command of Immediate Concurrent Execution (ICE) programming, the focus of our project.\n\nOur prior architecture and joint compiler work produced the XMT framework along with its extensively prototyping and demonstration of feasibility. However, prior to our current work XMT still fell short on using a strict mathematical-induction-based programming, as it was still based on multi-threading which is inherently not synchronous, using a language called XMTC.\n\nThe lead outcome of our project finally nailed down ICE programming, which is fully mathematical-induction-based for XMT.\n\nFurthermore, our ICE-to-XMTC compiler established that performance of ICE programs can be on par with the fastest hand optimized XMTC code.  This last result even exceeded the respective outcomes anticipated in our original proposal.\n\nThe result enhanced confidence in the overall direction. A startup has licensed in May 2017 active XMT patents, and a magnet high school has already taught the approach to over 600 students, including 75 in 2017.\n\n\t\t\t\t\tLast Modified: 09/26/2018\n\n\t\t\t\t\tSubmitted by: Rajeev Barua"
 }
}