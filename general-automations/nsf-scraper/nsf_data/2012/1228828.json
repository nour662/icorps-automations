{
 "awd_id": "1228828",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "TWC: Medium: Collaborative: Deconstructing Encryption",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032927991",
 "po_email": "namla@nsf.gov",
 "po_sign_block_name": "Nina Amla",
 "awd_eff_date": "2012-10-01",
 "awd_exp_date": "2017-09-30",
 "tot_intn_awd_amt": 475001.0,
 "awd_amount": 475001.0,
 "awd_min_amd_letter_date": "2012-09-05",
 "awd_max_amd_letter_date": "2012-09-05",
 "awd_abstract_narration": "Cryptographers have invented many different types of encryption. The PIs' research brings many of these under one umbrella, thereby reconceptualizing the landscape of modern cryptography. In the process, the research puts forward some entirely new kinds of encryption. The work is motivated by the needs of existing security practice. Sample questions include how to save space when storing encrypted copies of the same material in the cloud, and how to encrypt a credit-card number by reimagining the process as the shuffling of a deck of cards. The research demonstrates the practical benefits to cryptography and security from inclusive reinterpretations what encryption does.\r\n\r\nIn more detail, leaky encryption formalizes what it means to divulge some particular function of the message, unifying notions like blockciphers, online ciphers, and order-preserving encryption. Shuffle-based encryption creates blockciphers in a way fundamentally different from the way Feistel and SP networks do. Message-locked encryption can encrypt with a key derived from the message itself, to enable secure  de-duplication. Password-based encryption incorporates a \"salt\" to provide what the PIs call multi-instance security. Circuit encryption can encrypt a circuit and its input to ciphertexts that permit the evaluation of the one on the other, but in a way that reveals only correctly computed result. These are just some of the aims the research encompasses.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Phillip",
   "pi_last_name": "Rogaway",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Phillip Rogaway",
   "pi_email_addr": "rogaway@cs.ucdavis.edu",
   "nsf_id": "000470189",
   "pi_start_date": "2012-09-05",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Benjamin",
   "pi_last_name": "Morris",
   "pi_mid_init": "J",
   "pi_sufx_name": "",
   "pi_full_name": "Benjamin J Morris",
   "pi_email_addr": "morris@math.ucdavis.edu",
   "nsf_id": "000231906",
   "pi_start_date": "2012-09-05",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of California-Davis",
  "inst_street_address": "1850 RESEARCH PARK DR STE 300",
  "inst_street_address_2": "",
  "inst_city_name": "DAVIS",
  "inst_state_code": "CA",
  "inst_state_name": "California",
  "inst_phone_num": "5307547700",
  "inst_zip_code": "956186153",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "CA04",
  "org_lgl_bus_name": "UNIVERSITY OF CALIFORNIA, DAVIS",
  "org_prnt_uei_num": "",
  "org_uei_num": "TX2DAGQPENZ5"
 },
 "perf_inst": {
  "perf_inst_name": "University of California, Davis",
  "perf_str_addr": "",
  "perf_city_name": "Davis",
  "perf_st_code": "CA",
  "perf_st_name": "California",
  "perf_zip_code": "956165270",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "CA04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "806000",
   "pgm_ele_name": "Secure &Trustworthy Cyberspace"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7434",
   "pgm_ref_txt": "CNCI"
  },
  {
   "pgm_ref_code": "7924",
   "pgm_ref_txt": "MEDIUM PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 475001.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><h3>The foundation of encryption laid by Goldwasser and Micali (1982) was a revolution that gave birth to a new science. But, like many revolutions, it engendered some rigidity. The very fact that encryption&rsquo;s goal was made precise lead to encryption being narrowly construed. While encryption in previous practice had a broad and flexible meaning, by the mid-1980s it had largely came to <em>mean</em>, to the modern cryptographer, that which achieves a very particular security notion. In recent years, however, we have come to see a great many new forms of encryption, many of them quite complex and sophisticated.</h3>\n<h3>Our research has aimed to recast encryption not as a set of isolated variants devised by theoreticians, but as a mechanism with different &ldquo;knobs&rdquo; and &ldquo;switches&rdquo; whose settings result in diverse incarnations. We have aimed to unify and explain existing work on encryption, and to produce entirely new forms of it. The latter are not esoteric creations with only inefficient embodiments, but simple objects of to direct use to cryptographic practice. Our work has led to academic papers published in top-tier venues, and to software freely distributed on the web and used within commercial and non-commercial offerings. Let us give a couple of examples.</h3>\n<h3>Our notion of <em>robust authenticated-encryption</em> (RAE) unifies previous cryptographic notions of block ciphers, tweakable block ciphers, wide-block and narrow-block block ciphers, format-preserving encryption, nonce-based authenticated encryption, and misuse-resistant authenticated-encryption.&nbsp; They all become special cases of a single definition. To encrypt with an RAE scheme, you feed in an arbitrary encryption key, a plaintext of any length, some associated data (a non-secret <em>tweak</em> used to enable uncorrelated encryption operations with a single key), and an expansion parameter &lambda; &nbsp;&ge; 0. &nbsp;What you get out is a ciphertext that is exactly &lambda; bits longer than the plaintext. The security notion for RAE captures that the encryption operation is reversible but, apart from that, behaves as though it were uniformly random among &lambda;-expanding functions.&nbsp; While realizing RAE is tricky, we have been able to do so in a way that&rsquo;s about as efficient as one could possibly hope for: the scheme we propose, AEZ (easy authenticated-encryption), runs at about the same speed as the usual, much weaker, off-the-shelf ways to encrypt.&nbsp; At the same time, we prove, under formalized assumption, that AEZ does what we want it to do.&nbsp; See the associated figure.</h3>\n<h3>As a second example, we develop a general framework for <em>garbling schemes</em>, a way of encrypting a function that allows someone to execute an encrypted program even though they have no clue as to what they&rsquo;re doing. We elevate <em>garbled circuits</em> from a cryptographic <em>technique</em> to a cryptographic <em>goal</em>. While circuit garbling, which dates to the 1980s, has traditionally been viewed as a method for achieving some <em>other</em> cryptographic goal, we view it as an end goal in its own right. We defining garbling schemes and formalize several notions of security for them, these encompassing <em>privacy</em>, <em>authenticity</em>, and <em>obliviousness</em>. This enables more modular use of garbled circuits in higher-level protocol and grounds follow-on work, including the development of the most efficient garbling scheme known. See the associated figure. Roughly said, a garbling algorithm Gb is a randomized algorithm that transforms a function<em> f</em> into a triple of functions (<em>F</em>, <em>e</em>, <em>d</em>) where<em> f</em> = <em>d</em> &deg; <em>F</em> &deg; <em>e</em>. The encoding function <em>e</em> turns an initial input <em>x </em>into a garbled input<em> X</em> = <em>e</em>(<em>x</em>). Evaluating the garbled function <em>F</em> on the garbled input <em>X</em> gives a garbled output <em>Y</em> = <em>F</em>(<em>X</em>). The decoding function <em>d</em> turns the garbled output <em>Y</em> into the final output <em>y </em>= <em>d</em>(<em>Y</em> ), which must coincide with <em>f</em>(<em>x</em>). Informally, one has probabilistically factored <em>f</em> into <em>d</em>&nbsp; &ordm;&nbsp;<em style=\"font-weight: normal;\">F&nbsp;</em><span style=\"font-weight: normal;\">&ordm;&nbsp;</span><em style=\"font-weight: normal;\">e</em><span style=\"font-weight: normal;\">.</span></h3>\n<h3><br /> Throughout our work, we have sought &ldquo;out-of-the-box&rdquo; ways to re-conceptualize encryption, grounded in an understanding that much of what we understand about it springs from inessential aspects of our disciplinary culture. The word <em>deconstructing</em> in the project title is meant to echo Jacques Derrida&rsquo;s philosophical use of the term, going back to the mid-1960s. Deconstruction is not meant to suggest some violent or unsympathetic upheaval, nor some incomprehensible, post-modern critique. For us, it is an attempt to understand and question the implicit underpinnings for some of the cryptographic work we&rsquo;ve long been engaged in&mdash;that which was most contrarian, definitional, or grounded in the use of language.</h3>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/15/2018<br>\n\t\t\t\t\tModified by: Phillip&nbsp;Rogaway</p>\n</div>\n<div class=\"porSideCol\">\n<div class=\"each-gallery\">\n<div class=\"galContent\" id=\"gallery0\">\n<div class=\"photoCount\" id=\"photoCount0\">\n\t\t\t\t\t\t\t\t\tImages (<span id=\"selectedPhoto0\">1</span> of <span class=\"totalNumber\"></span>)\t\t\n\t\t\t\t\t\t\t\t</div>\n<div class=\"galControls\" id=\"controls0\"></div>\n<div class=\"galSlideshow\" id=\"slideshow0\"></div>\n<div class=\"galEmbox\" id=\"embox\">\n<div class=\"image-title\"></div>\n</div>\n</div>\n<div class=\"galNavigation\" id=\"navigation0\">\n<ul class=\"thumbs\" id=\"thumbs0\">\n<li>\n<a href=\"/por/images/Reports/POR/2018/1228828/1228828_10211267_1539633970969_aez-core--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2018/1228828/1228828_10211267_1539633970969_aez-core--rgov-800width.jpg\" title=\"AEZ encryption\"><img src=\"/por/images/Reports/POR/2018/1228828/1228828_10211267_1539633970969_aez-core--rgov-66x44.jpg\" alt=\"AEZ encryption\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">At the core of AEZ is a provably-secure method to encipher an arbitrary-length plaintext (top row) into a ciphertext of the same length (bottom row). The colored rectangles represent fast-to-compute permutations -- ways to reversible scramble the incoming bits.</div>\n<div class=\"imageCredit\">Phillip Rogaway</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Phillip&nbsp;Rogaway</div>\n<div class=\"imageTitle\">AEZ encryption</div>\n</div>\n</li>\n<li>\n<a href=\"/por/images/Reports/POR/2018/1228828/1228828_10211267_1539649006453_components--rgov-214x142.jpg\" original=\"/por/images/Reports/POR/2018/1228828/1228828_10211267_1539649006453_components--rgov-800width.jpg\" title=\"Garbling a function\"><img src=\"/por/images/Reports/POR/2018/1228828/1228828_10211267_1539649006453_components--rgov-66x44.jpg\" alt=\"Garbling a function\"></a>\n<div class=\"imageCaptionContainer\">\n<div class=\"imageCaption\">The components of a garbling scheme randomly partition a function f and its input x into a garbled function F and its input X. The garbled input hides the real input, yet f can still be evaluated by evaluating F.</div>\n<div class=\"imageCredit\">Phillip Rogaway</div>\n<div class=\"imagePermisssions\">Copyrighted</div>\n<div class=\"imageSubmitted\">Phillip&nbsp;Rogaway</div>\n<div class=\"imageTitle\">Garbling a function</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>",
  "por_txt_cntn": "The foundation of encryption laid by Goldwasser and Micali (1982) was a revolution that gave birth to a new science. But, like many revolutions, it engendered some rigidity. The very fact that encryption?s goal was made precise lead to encryption being narrowly construed. While encryption in previous practice had a broad and flexible meaning, by the mid-1980s it had largely came to mean, to the modern cryptographer, that which achieves a very particular security notion. In recent years, however, we have come to see a great many new forms of encryption, many of them quite complex and sophisticated.\nOur research has aimed to recast encryption not as a set of isolated variants devised by theoreticians, but as a mechanism with different \"knobs\" and \"switches\" whose settings result in diverse incarnations. We have aimed to unify and explain existing work on encryption, and to produce entirely new forms of it. The latter are not esoteric creations with only inefficient embodiments, but simple objects of to direct use to cryptographic practice. Our work has led to academic papers published in top-tier venues, and to software freely distributed on the web and used within commercial and non-commercial offerings. Let us give a couple of examples.\nOur notion of robust authenticated-encryption (RAE) unifies previous cryptographic notions of block ciphers, tweakable block ciphers, wide-block and narrow-block block ciphers, format-preserving encryption, nonce-based authenticated encryption, and misuse-resistant authenticated-encryption.  They all become special cases of a single definition. To encrypt with an RAE scheme, you feed in an arbitrary encryption key, a plaintext of any length, some associated data (a non-secret tweak used to enable uncorrelated encryption operations with a single key), and an expansion parameter &lambda;  &ge; 0.  What you get out is a ciphertext that is exactly &lambda; bits longer than the plaintext. The security notion for RAE captures that the encryption operation is reversible but, apart from that, behaves as though it were uniformly random among &lambda;-expanding functions.  While realizing RAE is tricky, we have been able to do so in a way that?s about as efficient as one could possibly hope for: the scheme we propose, AEZ (easy authenticated-encryption), runs at about the same speed as the usual, much weaker, off-the-shelf ways to encrypt.  At the same time, we prove, under formalized assumption, that AEZ does what we want it to do.  See the associated figure.\nAs a second example, we develop a general framework for garbling schemes, a way of encrypting a function that allows someone to execute an encrypted program even though they have no clue as to what they?re doing. We elevate garbled circuits from a cryptographic technique to a cryptographic goal. While circuit garbling, which dates to the 1980s, has traditionally been viewed as a method for achieving some other cryptographic goal, we view it as an end goal in its own right. We defining garbling schemes and formalize several notions of security for them, these encompassing privacy, authenticity, and obliviousness. This enables more modular use of garbled circuits in higher-level protocol and grounds follow-on work, including the development of the most efficient garbling scheme known. See the associated figure. Roughly said, a garbling algorithm Gb is a randomized algorithm that transforms a function f into a triple of functions (F, e, d) where f = d &deg; F &deg; e. The encoding function e turns an initial input x into a garbled input X = e(x). Evaluating the garbled function F on the garbled input X gives a garbled output Y = F(X). The decoding function d turns the garbled output Y into the final output y = d(Y ), which must coincide with f(x). Informally, one has probabilistically factored f into d  &ordm; F &ordm; e.\n\n Throughout our work, we have sought \"out-of-the-box\" ways to re-conceptualize encryption, grounded in an understanding that much of what we understand about it springs from inessential aspects of our disciplinary culture. The word deconstructing in the project title is meant to echo Jacques Derrida?s philosophical use of the term, going back to the mid-1960s. Deconstruction is not meant to suggest some violent or unsympathetic upheaval, nor some incomprehensible, post-modern critique. For us, it is an attempt to understand and question the implicit underpinnings for some of the cryptographic work we?ve long been engaged in&mdash;that which was most contrarian, definitional, or grounded in the use of language.\n\n \n\n \n\n \n\n\t\t\t\t\tLast Modified: 10/15/2018\n\n\t\t\t\t\tSubmitted by: Phillip Rogaway"
 }
}