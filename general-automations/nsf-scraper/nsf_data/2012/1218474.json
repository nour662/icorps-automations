{
 "awd_id": "1218474",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "SHF: Small: Cross-Layer Solutions for Sustainable and Reliable Computing Systems",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tao Li",
 "awd_eff_date": "2012-08-01",
 "awd_exp_date": "2015-07-31",
 "tot_intn_awd_amt": 300000.0,
 "awd_amount": 300000.0,
 "awd_min_amd_letter_date": "2012-07-10",
 "awd_max_amd_letter_date": "2012-07-10",
 "awd_abstract_narration": "Over the past decade, energy efficiency emerged as a first-order design challenge to developers across all layers of the computing stack, from microprocessor architects to large-scale datacenter operators. Unfortunately, in the future, operating a system close to its efficient design point for power will make the system susceptible to unreliability, whereas allowing margins will make the system inefficient. Therefore, understanding the interplay between power, performance and reliability is the next essential step for building sustainable computing systems in the future.\r\n\r\nTo this end, research under this proposal investigates new techniques to build computing systems that achieve both high energy efficiency and high reliability, but at a low cost to enable broader adoption of the techniques by our society. The investigators propose a resilient hardware/software co-designed machine organization that eliminates inefficiencies that arise from circuit- and architectural-level techniques that focus only on energy efficiency. The investigators' system optimizes reliability, energy, and performance in a coordinated manner. In this system, software continuously monitors execution and it dynamically adapts hardware resources based on feedback. The system automatically makes calculated efforts to characterize operational inefficiencies, and attempts to eliminate the inefficiencies by carefully relaxing the robustness of the system without compromising correctness. To characterize these inefficiencies and train the system, the investigators study and develop various algorithms, tools, and methodologies across the hardware and software boundaries.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Vijay",
   "pi_last_name": "Janapa Reddi",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Vijay Janapa Reddi",
   "pi_email_addr": "vj@eecs.harvard.edu",
   "nsf_id": "000607949",
   "pi_start_date": "2012-07-10",
   "pi_end_date": null
  },
  {
   "pi_role": "Co-Principal Investigator",
   "pi_first_name": "Lizy",
   "pi_last_name": "John",
   "pi_mid_init": "K",
   "pi_sufx_name": "",
   "pi_full_name": "Lizy K John",
   "pi_email_addr": "ljohn@ece.utexas.edu",
   "nsf_id": "000378662",
   "pi_start_date": "2012-07-10",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Texas at Austin",
  "inst_street_address": "110 INNER CAMPUS DR",
  "inst_street_address_2": "",
  "inst_city_name": "AUSTIN",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "5124716424",
  "inst_zip_code": "787121139",
  "inst_country_name": "United States",
  "cong_dist_code": "25",
  "st_cong_dist_code": "TX25",
  "org_lgl_bus_name": "UNIVERSITY OF TEXAS AT AUSTIN",
  "org_prnt_uei_num": "",
  "org_uei_num": "V6AFQPN18437"
 },
 "perf_inst": {
  "perf_inst_name": "University of Texas at Austin",
  "perf_str_addr": "PO Box 7726",
  "perf_city_name": "Austin",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "787137726",
  "perf_ctry_code": "US",
  "perf_cong_dist": "37",
  "perf_st_cong_dist": "TX37",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779800",
   "pgm_ele_name": "Software & Hardware Foundation"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7941",
   "pgm_ref_txt": "COMPUTER ARCHITECTURE"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 300000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Technological shifts in computing have resulted in energy-efficiency and reliability becoming more important design principles than peak machine performance in computing systems, spanning from handheld devices to large datacenter-scale computer systems. Designers can no longer sacrifice energy and reliability in computer systems to obtain high levels of performance. Instead, one must identify and develop new machine organizations whose resulting costs and efficiencies track future increases in sustained performance, rather than continually working toward growing (and yet almost never achieved) peak performance.</p>\n<p>The \"Cross-Layer Solutions for Sustainable and Reliable Computing Systems\" research project investigated several new techniques to build future computing systems that achieve both high energy-efficiency and reliability at low cost. The PIs explored a resilient software-assisted, hardware-guaranteed machine organization in high-performance processors that eliminates inefficiencies that arise from circuit- and microarchitectural-level techniques that attempt to optimize execution for any criterion other than performance. The PIs designed a hybrid hardware and software approach, maximizing reliability, energy, and performance, in a coordinated manner. In their system, software is continuously monitoring system execution and adapting the hardware's configuration based on feedback. The system relies on hardware for an immediate reaction (albeit suboptimally) to reliability emergencies, such as those caused by severe voltage fluctuations or excessive heating, and utilizes software's global knowledge of activities across the entire system to eliminate repeated occurrences of such hardware emergencies. Such a machine organization is efficient and cost-effective in the long-term.</p>\n<p>The PIs made the following specific contributions. First, they designed and developed the foundational modeling frameworks that are necessary to uncover the fundamental knowledge required to enable reliable, energy-efficient, cost-effective computing based on emerging commodity hardware. More specifically, they delivered the GPUWattch power modeling framework for GPU architectures and the GPUVolt reliability modeling framework that is also meant for GPU architectures. Both of these frameworks are publically available for download. The two frameworks were coupled together tightly to enable power and reliability studies, which when additionally coupled with a previously developed performance simulator---GPGPUSim---allow for performance, power, and reliability trade-offs. Second, they enabled new levels of energy efficiency by combining reliability trade-offs via cross-layer research that spanned the boundary between computer architecture and system software. The firmware-level software continuously monitors execution and adapts the hardware's configuration based on runtime feedback. The co-designed approach outperforms only hardware based optimization. Third, they designed generic principles that can respond to hardware power and reliability emergencies both at the (micro)architecture layer and the software layer. These generic principles can be used independent of the target architecture. We have shown that the principles we developed work across different generations of the GPU architecture, from Quadro to Kepler.</p>\n<p>Numerous efforts were needed to achieve the contributions. The PIs conducted several hundreds of workload characterization studies, using a mix of simulators and hardware measurements. They also performed in-depth root-cause analysis to identify the interactions between application execution and hardware behavior that lead to different emergencies. The measurements have been presented to industry and are being used to guide future hardware designs by the industry. Also, based on the PIs findings, the PIs determined the minimum guarantees that the hardware must ...",
  "por_txt_cntn": "\nTechnological shifts in computing have resulted in energy-efficiency and reliability becoming more important design principles than peak machine performance in computing systems, spanning from handheld devices to large datacenter-scale computer systems. Designers can no longer sacrifice energy and reliability in computer systems to obtain high levels of performance. Instead, one must identify and develop new machine organizations whose resulting costs and efficiencies track future increases in sustained performance, rather than continually working toward growing (and yet almost never achieved) peak performance.\n\nThe \"Cross-Layer Solutions for Sustainable and Reliable Computing Systems\" research project investigated several new techniques to build future computing systems that achieve both high energy-efficiency and reliability at low cost. The PIs explored a resilient software-assisted, hardware-guaranteed machine organization in high-performance processors that eliminates inefficiencies that arise from circuit- and microarchitectural-level techniques that attempt to optimize execution for any criterion other than performance. The PIs designed a hybrid hardware and software approach, maximizing reliability, energy, and performance, in a coordinated manner. In their system, software is continuously monitoring system execution and adapting the hardware's configuration based on feedback. The system relies on hardware for an immediate reaction (albeit suboptimally) to reliability emergencies, such as those caused by severe voltage fluctuations or excessive heating, and utilizes software's global knowledge of activities across the entire system to eliminate repeated occurrences of such hardware emergencies. Such a machine organization is efficient and cost-effective in the long-term.\n\nThe PIs made the following specific contributions. First, they designed and developed the foundational modeling frameworks that are necessary to uncover the fundamental knowledge required to enable reliable, energy-efficient, cost-effective computing based on emerging commodity hardware. More specifically, they delivered the GPUWattch power modeling framework for GPU architectures and the GPUVolt reliability modeling framework that is also meant for GPU architectures. Both of these frameworks are publically available for download. The two frameworks were coupled together tightly to enable power and reliability studies, which when additionally coupled with a previously developed performance simulator---GPGPUSim---allow for performance, power, and reliability trade-offs. Second, they enabled new levels of energy efficiency by combining reliability trade-offs via cross-layer research that spanned the boundary between computer architecture and system software. The firmware-level software continuously monitors execution and adapts the hardware's configuration based on runtime feedback. The co-designed approach outperforms only hardware based optimization. Third, they designed generic principles that can respond to hardware power and reliability emergencies both at the (micro)architecture layer and the software layer. These generic principles can be used independent of the target architecture. We have shown that the principles we developed work across different generations of the GPU architecture, from Quadro to Kepler.\n\nNumerous efforts were needed to achieve the contributions. The PIs conducted several hundreds of workload characterization studies, using a mix of simulators and hardware measurements. They also performed in-depth root-cause analysis to identify the interactions between application execution and hardware behavior that lead to different emergencies. The measurements have been presented to industry and are being used to guide future hardware designs by the industry. Also, based on the PIs findings, the PIs determined the minimum guarantees that the hardware must provide and the techniques that software must support to ensure emergency-free s..."
 }
}