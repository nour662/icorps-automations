{
 "awd_id": "1217470",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Collaborative Research: Real-Time and Unobtrusive Tracing in Multicore Embedded Systems",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2016-12-31",
 "tot_intn_awd_amt": 321388.0,
 "awd_amount": 321388.0,
 "awd_min_amd_letter_date": "2012-08-16",
 "awd_max_amd_letter_date": "2012-08-16",
 "awd_abstract_narration": "Embedded computer systems have become essential to many aspects of our lives. Cheaper, smaller, faster, more sophisticated, and more energy-efficient embedded devices spur ever new applications. However, the growing complexity and shift to multicores make programming and debugging these systems difficult. Traditional debugging is time consuming and may interfere with program execution, causing some bugs to become irreproducible and making it unusable in real-time environments. Moreover, tracing a processor?s internal state during execution is only feasible for short program segments and requires large on-chip buffers or wide trace ports, either of which increases system cost and limits scalability.  This project is developing the next generation of trace compression methods and infrastructure to make continuous, real-time, unobtrusive, and cost-effective program, data, and bus tracing possible in embedded systems. The approach relies on on-chip hardware to record the processor state and corresponding software modules in the debugger. The novel insight is that a sequence of trace records can be translated, without loss of information, into a much shorter sequence of miss events using small hardware structures. The few remaining miss events are then further compressed using highly-effective yet simple-to-implement encoding schemes, yielding heretofore unseen compression ratios.\r\n\r\nThe new tracing and debugging infrastructure can help programmers find difficult and intermittent software bugs faster, thus improving productivity. For example, reducing debugging time by just one percent amounts to hundreds of millions of dollars annually in saved salaries, with a concomitant reduction in software cost and time to market. Moreover, higher quality software may eliminate errors in medical, automotive, or mission-critical devices and thus save lives.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Aleksandar",
   "pi_last_name": "Milenkovic",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Aleksandar Milenkovic",
   "pi_email_addr": "milenka@ece.uah.edu",
   "nsf_id": "000351300",
   "pi_start_date": "2012-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Alabama in Huntsville",
  "inst_street_address": "301 SPARKMAN DR NW",
  "inst_street_address_2": "",
  "inst_city_name": "HUNTSVILLE",
  "inst_state_code": "AL",
  "inst_state_name": "Alabama",
  "inst_phone_num": "2568242657",
  "inst_zip_code": "358051911",
  "inst_country_name": "United States",
  "cong_dist_code": "05",
  "st_cong_dist_code": "AL05",
  "org_lgl_bus_name": "THE UNIVERSITY OF ALABAMA IN HUNTSVILLE",
  "org_prnt_uei_num": "",
  "org_uei_num": "HB6KNGVNJRU1"
 },
 "perf_inst": {
  "perf_inst_name": "The University of Alabama in Huntsville",
  "perf_str_addr": "301 Sparkman Drive",
  "perf_city_name": "Huntsville",
  "perf_st_code": "AL",
  "perf_st_name": "Alabama",
  "perf_zip_code": "358991191",
  "perf_ctry_code": "US",
  "perf_cong_dist": "05",
  "perf_st_cong_dist": "AL05",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 321388.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Our society increasingly relies upon embedded computer systems that have become essential to all aspects of our lives. Faster, cheaper, smaller, more sophisticated, and more power-efficient embedded computer systems spur new applications (e.g., Internet-of-Things, self-driving cars, smart homes) that require very complex software stacks. The growing software and hardware complexity and tightening time-to-market deadlines make software development and debugging the most critical aspect of embedded system development. A recent study found that software developers spend between 50%-75% of their time debugging programs, yet the nation still loses approximately $20-$60 billion a year due to software bugs and glitches. The recent shift toward multicore architectures makes software development and debugging even more challenging. Traditional debugging is time consuming and may interfere with program execution, causing some bugs to become irreproducible and making it unusable in real-time environments. Moreover, tracing a processor&rsquo;s internal state during execution is only feasible for short program segments and requires large on-chip buffers or wide trace ports, either of which increases system cost and limits scalability. The growing volumes of trace data require new on-chip infrastructure that allow unobtrusive real-time capturing and compressing traces in modern single-core and multicore embedded systems.</p>\n<p>This project resulted in the development of a series of new hardware/software techniques that enable continuous, real-time, unobtrusive, and cost-effective program and data tracing and debugging in modern and future embedded systems utilizing multicore processors. The proposed techniques rely on on-chip hardware structures to record the processor state and corresponding software modules in the debugger that mirror hardware structures. The novel insight is that a sequence of trace events can be translated, without loss of information, into a much shorter sequence of miss events using small hardware structures. The few remaining miss events are then further reduced in size using highly-effective yet simple-to-implement encoding schemes, yielding heretofore unseen compression ratios. The experimental evaluation demonstrated that the proposed techniques provide significant improvements over the current state-of-the-art in program tracing that range from 10 to 50 times, depending on the system parameters and type of trace information.</p>\n<p>The new tracing and debugging techniques enable programmers to find difficult and intermittent software bugs faster, thus resulting in higher quality software and increased overall productivity. For example, reducing debugging time by just one percent amounts to hundreds of millions of dollars annually in saved salaries, with a concomitant reduction in software cost and time to market. Moreover, higher quality software may eliminate errors in medical, automotive, or mission-critical devices and thus save lives.</p>\n<p>The project directly supported research of four graduate students: one student completed his doctoral dissertation and three students completed their master theses. The project resulted in three journal publications and three conference papers closely related to the tracing and debugging and over a dozen of papers related to the design and optimization of embedded computer systems. The project enabled further developing of collaborative research with the co-investigator from the Texas State University &ndash; San Marcos. The research infrastructure developed during the course of the project including simulators and trace repositories has been disseminated through the research group web site (lacasa.uah.edu) and it has been used by a number of researchers.&nbsp;</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 01/07/2017<br>\n\t\t\t\t\tModified by: Aleksandar&nbsp;Milenkovic</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nOur society increasingly relies upon embedded computer systems that have become essential to all aspects of our lives. Faster, cheaper, smaller, more sophisticated, and more power-efficient embedded computer systems spur new applications (e.g., Internet-of-Things, self-driving cars, smart homes) that require very complex software stacks. The growing software and hardware complexity and tightening time-to-market deadlines make software development and debugging the most critical aspect of embedded system development. A recent study found that software developers spend between 50%-75% of their time debugging programs, yet the nation still loses approximately $20-$60 billion a year due to software bugs and glitches. The recent shift toward multicore architectures makes software development and debugging even more challenging. Traditional debugging is time consuming and may interfere with program execution, causing some bugs to become irreproducible and making it unusable in real-time environments. Moreover, tracing a processor?s internal state during execution is only feasible for short program segments and requires large on-chip buffers or wide trace ports, either of which increases system cost and limits scalability. The growing volumes of trace data require new on-chip infrastructure that allow unobtrusive real-time capturing and compressing traces in modern single-core and multicore embedded systems.\n\nThis project resulted in the development of a series of new hardware/software techniques that enable continuous, real-time, unobtrusive, and cost-effective program and data tracing and debugging in modern and future embedded systems utilizing multicore processors. The proposed techniques rely on on-chip hardware structures to record the processor state and corresponding software modules in the debugger that mirror hardware structures. The novel insight is that a sequence of trace events can be translated, without loss of information, into a much shorter sequence of miss events using small hardware structures. The few remaining miss events are then further reduced in size using highly-effective yet simple-to-implement encoding schemes, yielding heretofore unseen compression ratios. The experimental evaluation demonstrated that the proposed techniques provide significant improvements over the current state-of-the-art in program tracing that range from 10 to 50 times, depending on the system parameters and type of trace information.\n\nThe new tracing and debugging techniques enable programmers to find difficult and intermittent software bugs faster, thus resulting in higher quality software and increased overall productivity. For example, reducing debugging time by just one percent amounts to hundreds of millions of dollars annually in saved salaries, with a concomitant reduction in software cost and time to market. Moreover, higher quality software may eliminate errors in medical, automotive, or mission-critical devices and thus save lives.\n\nThe project directly supported research of four graduate students: one student completed his doctoral dissertation and three students completed their master theses. The project resulted in three journal publications and three conference papers closely related to the tracing and debugging and over a dozen of papers related to the design and optimization of embedded computer systems. The project enabled further developing of collaborative research with the co-investigator from the Texas State University &ndash; San Marcos. The research infrastructure developed during the course of the project including simulators and trace repositories has been disseminated through the research group web site (lacasa.uah.edu) and it has been used by a number of researchers. \n\n \n\n\t\t\t\t\tLast Modified: 01/07/2017\n\n\t\t\t\t\tSubmitted by: Aleksandar Milenkovic"
 }
}