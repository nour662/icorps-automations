{
 "awd_id": "1217948",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Adaptively Applying Data-Driven Execution Mode to Remove I/O Bottleneck for Data-Intensive Computing",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2016-08-31",
 "tot_intn_awd_amt": 321782.0,
 "awd_amount": 349782.0,
 "awd_min_amd_letter_date": "2012-08-16",
 "awd_max_amd_letter_date": "2016-07-26",
 "awd_abstract_narration": "The increasingly common multi-core/many-core CPU architectures\r\nare effective for accelerating programs\u00e2?? execution only when\r\nsufficient parallelism is maintained. For data-intensive\r\nprograms the increased parallelism can severely compromise I/O\r\nefficiency: when a sequential program is parallelized, not only\r\ncomputations, but also the I/O operations associated with them, can\r\nbe distributed among multiple processes. Because the execution\r\norder of the processes is usually determined by the scheduler at\r\nruntime, the relative progress of processes is nondeterministic\r\nand the order in which the processes issue their I/O requests is\r\naccordingly nondeterministic. It is this I/O nondeterminism that\r\ncan substantially compromise I/O efficiency, and thus program\r\nperformance, by negating the advantages of parallel execution.\r\n\r\nTo address this problem the PI proposes a facility built either\r\nin the operating system kernel or in the runtime to streamline\r\nthe service of I/O requests from different processes of a\r\nparallel program. The major distinction from conventional\r\ntechniques for improving I/O performance is in the coordination\r\nof I/O request issuance, via I/O-aware process scheduling, to\r\nimprove the locality of these requests for I/O-intensive\r\nmultithreaded and MPI programs.\r\n\r\nIf successful, the proposed research would introduce a disruptive\r\ntechnique for data-centric computing to effectively relieve the\r\nI/O bottleneck. This project also provides abundant research\r\ntraining opportunities for students, especially under-represented\r\nminority students in the southeast Michigan area, to help relieve\r\nthe shortage of IT professionals with expertise in parallel\r\ncomputing and storage systems.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Song",
   "pi_last_name": "Jiang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Song Jiang",
   "pi_email_addr": "song.jiang@uta.edu",
   "nsf_id": "000240353",
   "pi_start_date": "2012-08-16",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Wayne State University",
  "inst_street_address": "5700 CASS AVE STE 4900",
  "inst_street_address_2": "",
  "inst_city_name": "DETROIT",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "3135772424",
  "inst_zip_code": "482023692",
  "inst_country_name": "United States",
  "cong_dist_code": "13",
  "st_cong_dist_code": "MI13",
  "org_lgl_bus_name": "WAYNE STATE UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "M6K6NTJ2MNE5"
 },
 "perf_inst": {
  "perf_inst_name": "Wayne State University",
  "perf_str_addr": "5050 Anthony Wayne Dr.",
  "perf_city_name": "Detroit",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "482023902",
  "perf_ctry_code": "US",
  "perf_cong_dist": "13",
  "perf_st_cong_dist": "MI13",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7354",
   "pgm_ref_txt": "COMPUTER SYSTEMS"
  },
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0115",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001516DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0116",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001617DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 321782.0
  },
  {
   "fund_oblg_fiscal_yr": 2015,
   "fund_oblg_amt": 24000.0
  },
  {
   "fund_oblg_fiscal_yr": 2016,
   "fund_oblg_amt": 4000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The project aims to maintain both high execution parallelism and high I/O efficiency for I/O-intensive parallel applications. Traditionally it is hard to achieve these two goals at the same time because access locality, which is required for high I/O efficiency, can be compromised by high execution parallelism or concurrency. In other words, the scheduling of processes/tasks and scheduling of I/O requests can be inherently in conflict, which fundamentally limits performance potential of parallel execution systems. These systems can be either a multi-core system or a parallel cluster-based systems. By monitoring whether CPU or I/O devices are the performance bottleneck and leveraging buffer cache widely available at various computing environments and software levels, the PI proposed the dual-mode execution technique to adaptively trade the flexibility of one scheduling for larger room of performance improvement in the other one. While this proposed solution has the potential to significantly accelerate processing of I/O-intensive programs, it could introduce additional management overhead that possibly offsets its performance advantage if not handled properly. Accordingly, this project makes efforts to identify pitfalls and limits of the proposed design and provides solutions to them in various computing scenarios.</p>\n<p>&nbsp;</p>\n<p>After years of extensive research on the issues, the PI and his team obtained three major outcomes demonstrating intellectual merits of the project. First, they found that the conflict on performance optimization between parallel/concurrent executions and I/O processing is widespread from a multi-core server, traditional MPI computing cluster, to large-scale data-parallel execution platforms, and from traditional block-interfaced hard disks/SSDs to currently popular key-value or object-based storage systems. While proposed dual-mode execution can fundamentally address the issue, different computing scenarios and platforms have their specific issues to be carefully addressed. Second, buffers/caches at the software levels are of different sizes and sensitivities to access pattern characteristics and their changes. Computing entities must be scheduled to produce preferred access patterns and the cache management must be carefully designed to take advantage of the access patterns. Third, to make the proposed idea truly effective in practice, prototypes for various computing platforms and different software environments must be implemented and evaluated to remove any issues that can only be identified in real systems running real workloads.</p>\n<p>&nbsp;</p>\n<p>The broader impacts of the project are demonstrated by the prototyped systems, publications, as well as human resource training produced during execution of the project. In particular, the PI and his team prototyped multiple systems. They are those directly incorporating the dual-mode execution technique, including iHarmonizer, that automatically parallelizes an openMP program and guides parallel execution to adaptively schedule I/O according to shifting performance bottleneck and DualPar, that regulates an MPI program&rsquo;s execution by predicting future I/O patterns and accordingly adjusting process scheduling. The systems also are those adapting dual-mode execution idea into emerging storage systems to improve I/O efficiency and users&rsquo; quality of service, including LSM-trie for optimizing small key-value data access, zExpander for exploiting highly skewed access patterns to improve cache hit ratio, NVMcached for emerging NVM storage devices, and Prophet for data-parallel execution platforms. All the systems have been extensively evaluated to demonstrate their performance advantages. There are over ten papers published resulting from the project, including some on top-tier conferences, such as two on USENIX annual technical conferences, and one on European conference on computer systems. At Wayne State University one Ph.D student and two Master students had graduated with this project as major parts of their thesis work. There are two more Ph.D students who have been substantially involved in the project. Six undergraduate students, including one female student, four African-American students, participated in the project. They learned skills for selecting and running benchmarks as well as collecting and analyzing measurements. Two of them have co-authored two papers and presented them on international conferences. Another three under-graduate students published a poster and presented it on an international conference. Two new graduate-level topic courses (&ldquo;ECE7995: High-performance I/O Service for Data-intensive Computing&rdquo; and &ldquo;ECE7995: Scalable and Secure Internet Services and Architecture ---- A Systems Perspective&rdquo;) were created. Some of this project&rsquo;s research findings are included in the teaching.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/30/2016<br>\n\t\t\t\t\tModified by: Song&nbsp;Jiang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe project aims to maintain both high execution parallelism and high I/O efficiency for I/O-intensive parallel applications. Traditionally it is hard to achieve these two goals at the same time because access locality, which is required for high I/O efficiency, can be compromised by high execution parallelism or concurrency. In other words, the scheduling of processes/tasks and scheduling of I/O requests can be inherently in conflict, which fundamentally limits performance potential of parallel execution systems. These systems can be either a multi-core system or a parallel cluster-based systems. By monitoring whether CPU or I/O devices are the performance bottleneck and leveraging buffer cache widely available at various computing environments and software levels, the PI proposed the dual-mode execution technique to adaptively trade the flexibility of one scheduling for larger room of performance improvement in the other one. While this proposed solution has the potential to significantly accelerate processing of I/O-intensive programs, it could introduce additional management overhead that possibly offsets its performance advantage if not handled properly. Accordingly, this project makes efforts to identify pitfalls and limits of the proposed design and provides solutions to them in various computing scenarios.\n\n \n\nAfter years of extensive research on the issues, the PI and his team obtained three major outcomes demonstrating intellectual merits of the project. First, they found that the conflict on performance optimization between parallel/concurrent executions and I/O processing is widespread from a multi-core server, traditional MPI computing cluster, to large-scale data-parallel execution platforms, and from traditional block-interfaced hard disks/SSDs to currently popular key-value or object-based storage systems. While proposed dual-mode execution can fundamentally address the issue, different computing scenarios and platforms have their specific issues to be carefully addressed. Second, buffers/caches at the software levels are of different sizes and sensitivities to access pattern characteristics and their changes. Computing entities must be scheduled to produce preferred access patterns and the cache management must be carefully designed to take advantage of the access patterns. Third, to make the proposed idea truly effective in practice, prototypes for various computing platforms and different software environments must be implemented and evaluated to remove any issues that can only be identified in real systems running real workloads.\n\n \n\nThe broader impacts of the project are demonstrated by the prototyped systems, publications, as well as human resource training produced during execution of the project. In particular, the PI and his team prototyped multiple systems. They are those directly incorporating the dual-mode execution technique, including iHarmonizer, that automatically parallelizes an openMP program and guides parallel execution to adaptively schedule I/O according to shifting performance bottleneck and DualPar, that regulates an MPI program?s execution by predicting future I/O patterns and accordingly adjusting process scheduling. The systems also are those adapting dual-mode execution idea into emerging storage systems to improve I/O efficiency and users? quality of service, including LSM-trie for optimizing small key-value data access, zExpander for exploiting highly skewed access patterns to improve cache hit ratio, NVMcached for emerging NVM storage devices, and Prophet for data-parallel execution platforms. All the systems have been extensively evaluated to demonstrate their performance advantages. There are over ten papers published resulting from the project, including some on top-tier conferences, such as two on USENIX annual technical conferences, and one on European conference on computer systems. At Wayne State University one Ph.D student and two Master students had graduated with this project as major parts of their thesis work. There are two more Ph.D students who have been substantially involved in the project. Six undergraduate students, including one female student, four African-American students, participated in the project. They learned skills for selecting and running benchmarks as well as collecting and analyzing measurements. Two of them have co-authored two papers and presented them on international conferences. Another three under-graduate students published a poster and presented it on an international conference. Two new graduate-level topic courses (\"ECE7995: High-performance I/O Service for Data-intensive Computing\" and \"ECE7995: Scalable and Secure Internet Services and Architecture ---- A Systems Perspective\") were created. Some of this project?s research findings are included in the teaching.\n\n \n\n\t\t\t\t\tLast Modified: 12/30/2016\n\n\t\t\t\t\tSubmitted by: Song Jiang"
 }
}