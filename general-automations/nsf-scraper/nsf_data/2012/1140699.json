{
 "awd_id": "1140699",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "Collaborative Research: Modeling from Molecules to Moose: Teaching Students to Develop Agent-Based Simulations in Biology",
 "cfda_num": "47.076",
 "org_code": "11040200",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Terry S. Woodin",
 "awd_eff_date": "2012-08-01",
 "awd_exp_date": "2015-07-31",
 "tot_intn_awd_amt": 52653.0,
 "awd_amount": 52653.0,
 "awd_min_amd_letter_date": "2012-07-17",
 "awd_max_amd_letter_date": "2012-07-17",
 "awd_abstract_narration": "In this collaborative project Worcester Polytechnic Institute and the University of Massachusetts at Boston are joining forces to provide undergraduate students with experience in computational modeling, simulation, and systems approaches to biology.  Using StarLogoTNG software, developed at the Massachusetts Institute of Technology, students can represent various levels of biological organization from molecules to cells or even organisms.  They can define the rules anticipated to govern the behavior of the designated agents and compare the simulated behavior to that observed experimentally.  The closeness of fit estimates the accuracy of the definition of the rules.  Through hypothesis testing and successive refinement of the simulation, the important rules are revealed.  This hands-on, team-project-oriented approach not only immerses students in engaging learning but also provides an appreciation for the value of mathematics and computational modeling in understanding biology.  Ongoing evaluation measures how successful these strategies are at influencing student learning in both a small, private, technological institution and a large public university.  Widespread dissemination is anticipated.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "EDU",
 "org_dir_long_name": "Directorate for STEM Education",
 "div_abbr": "DUE",
 "org_div_long_name": "Division Of Undergraduate Education",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Brian",
   "pi_last_name": "White",
   "pi_mid_init": "T",
   "pi_sufx_name": "",
   "pi_full_name": "Brian T White",
   "pi_email_addr": "brian.white@umb.edu",
   "nsf_id": "000105410",
   "pi_start_date": "2012-07-17",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Massachusetts Boston",
  "inst_street_address": "100 WILLIAM T MORRISSEY BLVD",
  "inst_street_address_2": "",
  "inst_city_name": "DORCHESTER",
  "inst_state_code": "MA",
  "inst_state_name": "Massachusetts",
  "inst_phone_num": "6172875370",
  "inst_zip_code": "021253300",
  "inst_country_name": "United States",
  "cong_dist_code": "08",
  "st_cong_dist_code": "MA08",
  "org_lgl_bus_name": "UNIVERSITY OF MASS AT BOSTON",
  "org_prnt_uei_num": "CGCDJ24JJLZ1",
  "org_uei_num": "CGCDJ24JJLZ1"
 },
 "perf_inst": {
  "perf_inst_name": "University of Massachusetts Boston",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "MA",
  "perf_st_name": "Massachusetts",
  "perf_zip_code": "021253393",
  "perf_ctry_code": "US",
  "perf_cong_dist": "08",
  "perf_st_cong_dist": "MA08",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "153600",
   "pgm_ele_name": "S-STEM-Schlr Sci Tech Eng&Math"
  },
  {
   "pgm_ele_code": "751300",
   "pgm_ele_name": "TUES-Type 1 Project"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "SMET",
   "pgm_ref_txt": "SCIENCE, MATH, ENG & TECH EDUCATION"
  }
 ],
 "app_fund": [
  {
   "app_code": "0412",
   "app_name": "NSF Education & Human Resource",
   "app_symb_id": "040106",
   "fund_code": "04001213DB",
   "fund_name": "NSF Education & Human Resource",
   "fund_symb_id": "040106"
  },
  {
   "app_code": "13XX",
   "app_name": "H-1B FUND, EHR, NSF",
   "app_symb_id": "045176",
   "fund_code": "1300XXXXDB",
   "fund_name": "H-1B FUND, EDU, NSF",
   "fund_symb_id": "045176"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 52653.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>&nbsp;&nbsp;&nbsp; Computer simulations are a large and growing part of scientific research and engineering. Constructing a working simulation of a scientific phenomenon is an excellent learning opportunity.&nbsp; However, until recently, constructing sophisticated simulations was out of reach of undergraduate students because of limited access to computing power and the difficulty of learning to program traditional text-based programming languages. Lately, the computing power available in desktop and laptop computers has reached a level where powerful simulations can be run and graphic-based computer languages (see first image) have been developed that make learning to program significantly easier.</p>\n<p>&nbsp;&nbsp;&nbsp; Our project was based on developing an upper-level undergraduate biology course where students choose biological or chemical phenomena, design simulations of these phenomena, build and debug the simulations, and then conduct experiments on the simulations. We used the computer language StarLOGO TNG which was developed at MIT to build our simulations. The simulations were \"agent-based\", that is, each simulation consisted of many instances of several different types of agents, each with a programmed set of behaviors. For example, the second picture shows a simulation of diabetes where the agents include insulin molecules, glucose molecules, and pancreatic cells. Each of these types of agents was programmed with specific behaviors to create the fully functioning simulation.</p>\n<p>&nbsp;&nbsp; In the course, we helped students to design, build, debug, and test simulations (as opposed to simply using simulations made by experts) in order to acheive the following goals; for each goal, I will give an example of how it was achieved:</p>\n<ul>\n<li><strong>Learn how simulations can be used to explore scientific phenomena. </strong>One student built a simulation of the interaction between breast cancer cells and fat cells that he was studying in an off-campus \"wet\" lab. In building the simulation, he discovered several gaps in the model the researchers were using; these gaps will inspire future research.</li>\n<li><strong>Learn how to think deeply and critically about your work and the work of others.</strong> Every day in class, students needed to be sure that their work was proceeding properly. To do this, they needed to think very clearly about their goals and whether or not they had acheived them. For example, in a simulation of slime molds solving a simple maze, the student needed to be sure that the behavior of her cells was at all times \"scientifically reasonable\". This required independent reading of primary literature, careful observation of the behavior of her simulation, and detailed analysis of her code. </li>\n<li><strong>Learn scientific hypothesis testing.</strong> This is a crucial part of science education and often overlooked. It occurrs at a wide range of levels from \"What will happen to my simulation of wolves and rabbits if I allow rabbits to hide in rabbit holes?\" to \"Is this little piece of code actually simulating HIV infection?\" For each of these, the student must devise a test, conduct an experiment, and analyze the results. </li>\n<li><strong>Learn science content.</strong> Cells and molecules cannot \"see\" so they cannot hunt each other. However, insulin does bind to body cells and cause a response. The student building the diabetes simulation had to devise a biologically-reasonable mechanism for this interaction and in so doing learned about diffusion and molecular recognition.</li>\n<li><strong>Learn to write and debug computer programs.</strong> This is a very important skill for modern STEM majors and can be very challenging. The language we use in the course has been designed to make this process as easy as possible. Furthermore, the students are very engaged in the process as they are developing programs based on their own sci...",
  "por_txt_cntn": "\n    Computer simulations are a large and growing part of scientific research and engineering. Constructing a working simulation of a scientific phenomenon is an excellent learning opportunity.  However, until recently, constructing sophisticated simulations was out of reach of undergraduate students because of limited access to computing power and the difficulty of learning to program traditional text-based programming languages. Lately, the computing power available in desktop and laptop computers has reached a level where powerful simulations can be run and graphic-based computer languages (see first image) have been developed that make learning to program significantly easier.\n\n    Our project was based on developing an upper-level undergraduate biology course where students choose biological or chemical phenomena, design simulations of these phenomena, build and debug the simulations, and then conduct experiments on the simulations. We used the computer language StarLOGO TNG which was developed at MIT to build our simulations. The simulations were \"agent-based\", that is, each simulation consisted of many instances of several different types of agents, each with a programmed set of behaviors. For example, the second picture shows a simulation of diabetes where the agents include insulin molecules, glucose molecules, and pancreatic cells. Each of these types of agents was programmed with specific behaviors to create the fully functioning simulation.\n\n   In the course, we helped students to design, build, debug, and test simulations (as opposed to simply using simulations made by experts) in order to acheive the following goals; for each goal, I will give an example of how it was achieved:\n\nLearn how simulations can be used to explore scientific phenomena. One student built a simulation of the interaction between breast cancer cells and fat cells that he was studying in an off-campus \"wet\" lab. In building the simulation, he discovered several gaps in the model the researchers were using; these gaps will inspire future research.\nLearn how to think deeply and critically about your work and the work of others. Every day in class, students needed to be sure that their work was proceeding properly. To do this, they needed to think very clearly about their goals and whether or not they had acheived them. For example, in a simulation of slime molds solving a simple maze, the student needed to be sure that the behavior of her cells was at all times \"scientifically reasonable\". This required independent reading of primary literature, careful observation of the behavior of her simulation, and detailed analysis of her code. \nLearn scientific hypothesis testing. This is a crucial part of science education and often overlooked. It occurrs at a wide range of levels from \"What will happen to my simulation of wolves and rabbits if I allow rabbits to hide in rabbit holes?\" to \"Is this little piece of code actually simulating HIV infection?\" For each of these, the student must devise a test, conduct an experiment, and analyze the results. \nLearn science content. Cells and molecules cannot \"see\" so they cannot hunt each other. However, insulin does bind to body cells and cause a response. The student building the diabetes simulation had to devise a biologically-reasonable mechanism for this interaction and in so doing learned about diffusion and molecular recognition.\nLearn to write and debug computer programs. This is a very important skill for modern STEM majors and can be very challenging. The language we use in the course has been designed to make this process as easy as possible. Furthermore, the students are very engaged in the process as they are developing programs based on their own scientific interests. For example, one student modeling mutagens and cancer had to learn to build a model of cells where damage by carcinogens could be reduced by anti-oxidants.\n\n\n  A rigorous external evaluation of student learning outcomes from this cou..."
 }
}