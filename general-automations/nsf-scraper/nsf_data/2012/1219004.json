{
 "awd_id": "1219004",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "NeTS: Small: Towards Exposing and Mitigating End-to-End TCP Performance and Fairness Issues in Data Center Networks",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Darleen Fisher",
 "awd_eff_date": "2012-08-01",
 "awd_exp_date": "2016-07-31",
 "tot_intn_awd_amt": 300000.0,
 "awd_amount": 300000.0,
 "awd_min_amd_letter_date": "2012-08-06",
 "awd_max_amd_letter_date": "2015-05-29",
 "awd_abstract_narration": "While TCP was designed to work in any environment, it has a long history of problems whenever introduced in newer environments (e.g., wireless networks, satellite networks, high-capacity networks) that it was not explicitly designed and tested for.  A similar new frontier that challenges TCP is the data center and cloud environments that have become popular in recent times.  This project will conduct research on exposing end-to-end challenges that TCP faces in the modern cloud computing and data center environments and propose solutions to address them.  \r\n\r\nSpecifically, it focuses on three major issues surrounding TCP in data center and cloud environments: First, in virtualized cloud environments, when multiple VMs share the CPU, CPU access latency for each VM (i.e., the interval during which a VM waits for the CPU) is in the order of tens/hundreds of milliseconds and can be orders of magnitude higher than the typical sub-millisecond network RTTs.  This high RTT causes significant reduction in TCP throughput.  Second, in multirooted data center networks, under certain conditions, TCP connections sharing a common link exhibit severe unfairness.  Finally, in data center networks today, equal-cost multipath routing (ECMP) is often used to split traffic across multiple paths, but it can potentially cause significant load imbalance.  Researchers have refrained from suggesting packet-level multipath routing in the past because of its ability to cause reordering that may reduce TCP throughput. It is however not clear whether this poor interactions with multipath routing exists even under symmetric topologies such as fattrees, or more generally, multi-rooted tree topologies. \r\n\r\nIntellectual Merit: The goal of this project is to comprehensively investigate these afore-mentioned three major issues discussed above, propose new solutions to address the problems, and finally, validate these solutions and hypotheses using real prototype implementations and through extensive evaluations.  (1) To address TCP's performance deterioration in virtualized cloud environments, the project will explore a new approach called transport function delegation, where certain TCP functions are delegated to the driver domain or hypervisor.  (2) It will conduct extensive experimentation using real testbeds to expose, and characterize the unfairness issue, and also propose and evaluate classic solutions (e.g., RED) and a new routing algorithm called equal-length routing to mitigate this problem. (3) It will revisit the conventional wisdom that fine-grained multi-path traffic splitting protocols interact poorly with TCP, in the context of data center networks which have regular topologies such as multi-rooted trees. \r\n\r\nBroader Impact: The broader impact of this research comprises of the following: (1) It will help improve the key aspects of TCP such as performance and fairness in data center and cloud environments, that will benefit all data center systems and applications.  (2) Results of this research will be transferred to industry. (3) Results of this research will be integrated into courses such as operating systems, computer networks, and cloud computing. It will also provide training to graduate students and several Ph.D. theses are expected to come out of this research. (4) It will include participation of minorities (under-represented minorities and women).",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Dongyan",
   "pi_last_name": "Xu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Dongyan Xu",
   "pi_email_addr": "dxu@cs.purdue.edu",
   "nsf_id": "000295392",
   "pi_start_date": "2015-05-29",
   "pi_end_date": null
  },
  {
   "pi_role": "Former Principal Investigator",
   "pi_first_name": "Ramana",
   "pi_last_name": "Kompella",
   "pi_mid_init": "R",
   "pi_sufx_name": "",
   "pi_full_name": "Ramana R Kompella",
   "pi_email_addr": "Kompella@cs.purdue.edu",
   "nsf_id": "000501961",
   "pi_start_date": "2012-08-06",
   "pi_end_date": "2015-05-29"
  },
  {
   "pi_role": "Former Co-Principal Investigator",
   "pi_first_name": "Dongyan",
   "pi_last_name": "Xu",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Dongyan Xu",
   "pi_email_addr": "dxu@cs.purdue.edu",
   "nsf_id": "000295392",
   "pi_start_date": "2012-08-06",
   "pi_end_date": "2015-05-29"
  }
 ],
 "inst": {
  "inst_name": "Purdue University",
  "inst_street_address": "2550 NORTHWESTERN AVE # 1100",
  "inst_street_address_2": "",
  "inst_city_name": "WEST LAFAYETTE",
  "inst_state_code": "IN",
  "inst_state_name": "Indiana",
  "inst_phone_num": "7654941055",
  "inst_zip_code": "479061332",
  "inst_country_name": "United States",
  "cong_dist_code": "04",
  "st_cong_dist_code": "IN04",
  "org_lgl_bus_name": "PURDUE UNIVERSITY",
  "org_prnt_uei_num": "YRXVL4JYCEF5",
  "org_uei_num": "YRXVL4JYCEF5"
 },
 "perf_inst": {
  "perf_inst_name": "Purdue University",
  "perf_str_addr": "305 N. University St",
  "perf_city_name": "West Lafayette",
  "perf_st_code": "IN",
  "perf_st_name": "Indiana",
  "perf_zip_code": "479072107",
  "perf_ctry_code": "US",
  "perf_cong_dist": "04",
  "perf_st_cong_dist": "IN04",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "736300",
   "pgm_ele_name": "Networking Technology and Syst"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 300000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Datacenters are critical infrastructures that enable cloud computing applications and services. In a datacenter, system and network virtualization has been widely adopted as the methodology for creating virtual infrastructures on behalf of cloud-hosted tenants, on top of shared physical machines and networks. An unexpected problem arises from the resource-sharing nature of such virtual infrastructures (e.g., virtual machines or VMs): the VM scheduling latency and overhead negatively affects the throughput of (and fairness among) network connections between VMs. Furthermore, such a problem can be generalized to the end-to-end I/O path that involves both network and end-system resources. In this project, we aim at addressing this class of network I/O performance and fairness problems arising from virtualization in a datacenter.&nbsp;</p>\n<p>On the intellectual merit front, we have developed a suite of solutions that address different aspects of the end-to-end I/O path: (1) <strong>vSlicer</strong> is an adaptive VM scheduler that differentiates between computation-intensive and I/O-intensive VMs, with the goal of improving network throughput of the latter while maintaining CPU-sharing fairness; (2) <strong>vTurbo</strong> involves dedicating a CPU core for fast I/O event processing on behalf of all VMs in the same physical machine; (3) <strong>vPipe</strong> is an I/O-piping method that creates shortcuts on end-to-end I/O paths (e.g., network to disk, network to network, and disk to disk) for improved throughput, latency, and application performance; (4) <strong>vFair</strong> is a storage I/O scheduling framework that achieves storage resource sharing fairness among all tenant VMs; (5) <strong>vHaul</strong> enables minimum-disruption live migration of cloud applications across datacenter networks; (6) <strong>vRead</strong> optimizes data read operation performance for tenant VMs when accessing the Hadoop distributed file system; (7)<strong> StorM </strong>enables software-defined network middle-boxes between tenant VMs and backend storage for deploying tenant-specific reliability and security services for cloud data.</p>\n<p>On the broader impact front, three PhD students have been trained and graduated in the past three years. The project also involved two undergraduate students who gained valuable research experience during their junior and senior years. Results from this project have been integrated into both undergraduate and graduate operating systems courses (e.g., in CPU scheduling, interrupt handling, and network protocol stack chapters) taught by the PI. This project also led to fruitful collaborations with industry (e.g., Microsoft, AT&amp;T, VMware, and IBM). Software artifacts developed by project members have been shared with our industry partners. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 06/07/2017<br>\n\t\t\t\t\tModified by: Dongyan&nbsp;Xu</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nDatacenters are critical infrastructures that enable cloud computing applications and services. In a datacenter, system and network virtualization has been widely adopted as the methodology for creating virtual infrastructures on behalf of cloud-hosted tenants, on top of shared physical machines and networks. An unexpected problem arises from the resource-sharing nature of such virtual infrastructures (e.g., virtual machines or VMs): the VM scheduling latency and overhead negatively affects the throughput of (and fairness among) network connections between VMs. Furthermore, such a problem can be generalized to the end-to-end I/O path that involves both network and end-system resources. In this project, we aim at addressing this class of network I/O performance and fairness problems arising from virtualization in a datacenter. \n\nOn the intellectual merit front, we have developed a suite of solutions that address different aspects of the end-to-end I/O path: (1) vSlicer is an adaptive VM scheduler that differentiates between computation-intensive and I/O-intensive VMs, with the goal of improving network throughput of the latter while maintaining CPU-sharing fairness; (2) vTurbo involves dedicating a CPU core for fast I/O event processing on behalf of all VMs in the same physical machine; (3) vPipe is an I/O-piping method that creates shortcuts on end-to-end I/O paths (e.g., network to disk, network to network, and disk to disk) for improved throughput, latency, and application performance; (4) vFair is a storage I/O scheduling framework that achieves storage resource sharing fairness among all tenant VMs; (5) vHaul enables minimum-disruption live migration of cloud applications across datacenter networks; (6) vRead optimizes data read operation performance for tenant VMs when accessing the Hadoop distributed file system; (7) StorM enables software-defined network middle-boxes between tenant VMs and backend storage for deploying tenant-specific reliability and security services for cloud data.\n\nOn the broader impact front, three PhD students have been trained and graduated in the past three years. The project also involved two undergraduate students who gained valuable research experience during their junior and senior years. Results from this project have been integrated into both undergraduate and graduate operating systems courses (e.g., in CPU scheduling, interrupt handling, and network protocol stack chapters) taught by the PI. This project also led to fruitful collaborations with industry (e.g., Microsoft, AT&amp;T, VMware, and IBM). Software artifacts developed by project members have been shared with our industry partners.         \n\n\t\t\t\t\tLast Modified: 06/07/2017\n\n\t\t\t\t\tSubmitted by: Dongyan Xu"
 }
}