{
 "awd_id": "1252456",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "EAGER: Optimization without Round-off Errors",
 "cfda_num": "47.041",
 "org_code": "07030000",
 "po_phone": "7032922443",
 "po_email": "gaklutke@nsf.gov",
 "po_sign_block_name": "Georgia-Ann Klutke",
 "awd_eff_date": "2012-09-15",
 "awd_exp_date": "2016-08-31",
 "tot_intn_awd_amt": 120000.0,
 "awd_amount": 124750.0,
 "awd_min_amd_letter_date": "2012-09-11",
 "awd_max_amd_letter_date": "2014-01-27",
 "awd_abstract_narration": "This Early-concept Grant for Exploratory Research (EAGER) provides funding to further develop an algorithm to solve systems of linear equations with a specific advantage over Gaussian Elimination in that the algorithm does not have round-off errors. The algorithm will be tailored and adapted to be used within existing optimization algorithms. The key property of the algorithm being further developed is that it maintains the integrality of the numbers throughout its execution. In particular, although the algorithm does contain divisions (which is crucial for the polynomial-time complexity of the\r\nalgorithm) all the divisions have a remainder of zero. A detailed complexity analysis of the algorithm will be performed; specifically, both its running time and the number of bits required to represent the numbers throughout the algorithm's execution will be investigated. A modification of the algorithm to perform LU factorizations will also be studied. Finally, the algorithm will be adapted to enable its use for the basis updates performed in state-of-the-art implementations of the revised simplex method.\r\n\r\nIf successful, the outcomes of this research will lead to a deeper understanding of computational linear algebra free of round-off errors and the associated applications within optimization algorithms. In the linear programming (LP) context, this research will enable us to solve large-scale LPs exactly; this, in turn, will significantly improve the accuracy and speed of integer programming solvers. In addition, since solving systems of linear equations is a critical subroutine of many numerical algorithms, this research will impact many application areas where linear systems frequently arise, including economics, physics, chemistry, and engineering.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "ENG",
 "org_dir_long_name": "Directorate for Engineering",
 "div_abbr": "CMMI",
 "org_div_long_name": "Division of Civil, Mechanical, and Manufacturing Innovation",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Erick",
   "pi_last_name": "Moreno-Centeno",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Erick Moreno-Centeno",
   "pi_email_addr": "emc@tamu.edu",
   "nsf_id": "000575840",
   "pi_start_date": "2012-09-11",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Texas A&M Engineering Experiment Station",
  "inst_street_address": "3124 TAMU",
  "inst_street_address_2": "",
  "inst_city_name": "COLLEGE STATION",
  "inst_state_code": "TX",
  "inst_state_name": "Texas",
  "inst_phone_num": "9798626777",
  "inst_zip_code": "778433124",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "TX10",
  "org_lgl_bus_name": "TEXAS A&M ENGINEERING EXPERIMENT STATION",
  "org_prnt_uei_num": "QD1MX6N5YTN4",
  "org_uei_num": "QD1MX6N5YTN4"
 },
 "perf_inst": {
  "perf_inst_name": "Texas Engineering Experiment Station",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "TX",
  "perf_st_name": "Texas",
  "perf_zip_code": "778454645",
  "perf_ctry_code": "US",
  "perf_cong_dist": "10",
  "perf_st_cong_dist": "TX10",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "178700",
   "pgm_ele_name": "SERVICE ENTERPRISE SYSTEMS"
  },
  {
   "pgm_ele_code": "551400",
   "pgm_ele_name": "OPERATIONS RESEARCH"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "072E",
   "pgm_ref_txt": "NETWORKS & QUEUING SYSTEMS"
  },
  {
   "pgm_ref_code": "073E",
   "pgm_ref_txt": "OPTIMIZATION & DECISION MAKING"
  },
  {
   "pgm_ref_code": "077E",
   "pgm_ref_txt": "SIMULATION MODELS"
  },
  {
   "pgm_ref_code": "116E",
   "pgm_ref_txt": "RESEARCH EXP FOR UNDERGRADS"
  },
  {
   "pgm_ref_code": "1786",
   "pgm_ref_txt": "MANFG ENTERPRISE SYSTEMS"
  },
  {
   "pgm_ref_code": "7916",
   "pgm_ref_txt": "EAGER"
  },
  {
   "pgm_ref_code": "9102",
   "pgm_ref_txt": "WOMEN, MINORITY, DISABLED, NEC"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9231",
   "pgm_ref_txt": "SUPPL FOR UNDERGRAD RES ASSIST"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0114",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001415DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 120000.0
  },
  {
   "fund_oblg_fiscal_yr": 2014,
   "fund_oblg_amt": 4750.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The outcomes of this project range from direct societal benefits to the advancement of the computational linear algebra directly related to solving optimization problems. First, through this project, two underrepresented (Hispanic) minority students gained invaluable research experience. The first student was a U.S. permanent resident undergraduate student who participated in the project for one year. This student developed optimization algorithms using high level programming languages and advanced optimization solvers&mdash;thus, greatly enhancing his undergraduate education and professional skillset. The second student, a Ph.D. student, was a Hispanic U.S. citizen who participated in this project throughout its duration. The project allowed the project&rsquo;s principal investigator to work closely with this student in order to train him and develop his research abilities. Indeed, one of the key achievements of this project is that, thanks to the rigorous training he received and the research he performed on this project, this former student is now an Assistant Professor at Arizona State University (ASU). Note that this achievement effectively multiplies the broader societal impacts of this project: not only does this directly increase the diversity of the faculty at ASU, but this new professor will also serve as a role model and contribute to the development of a diverse next generation of engineers.</p>\n<p>On the technical side, the fundamental goal of this project was to lay the theoretical foundation needed to develop efficient roundoff-error-free (REF), and thus truly exact, optimization methods (algorithms). Broadly speaking, the main outcomes were: (1) providing a new framework for efficiently solving a system of linear equations (SLE) without accruing round-off errors; (2) adapting the newly developed algorithms to enable their use within state-of-the-art linear optimization algorithms; and (3) demonstrating, in theory and practice, that the newly developed algorithms are more efficient (both in storage and computational time) than those previously available. The ensuing paragraphs provide more details on these outcomes.</p>\n<p>We developed two REF factorizations whose calculations require storing the same number of individual elements and performing a similar number of operations as the traditional (non-REF) LU and Cholesky factorizations. We also developed supplementary REF forward and backward substitution algorithms, thereby providing a complete framework for solving SLEs exactly and efficiently. These novel factorizations and substitution algorithms are REF because their operations preserve the integrality of all the intermediate numeric values (entries) throughout their computations. Finally, we performed a detailed complexity analysis of the algorithms. Specifically, we analyzed both their number of operations, which we proved are equivalent to those of the traditional factorizations, and the number of digits (bits) required to represent the entries throughout the algorithms. In the latter respect, an important property of these factorizations and algorithms is that the bit-size of the entries obtained throughout the computations is bounded polynomially by the bit-size of the determinant of the SLE&rsquo;s underlying matrix. Unlike the rational-arithmetic methods used in practice to solve SLEs exactly, the developed integer-preserving algorithms do not require any computationally expensive greatest common divisor calculations to limit the growth of the numbers&mdash;this greatly accelerates our algorithms.</p>\n<p>Next, we adapted our REF factorizations and algorithms for their use within state-of-the-art implementations of the simplex method (one of the premier algorithms to solve linear optimization problems). Specifically, we developed algorithms to efficiently update our factorizations in response to (small) changes in the underlying SLE. These update algorithms are needed because the simplex method solves very similar SLEs in consecutive iterations, so updating the factorization between consecutive iterations is significantly more efficient than computing the factorization from scratch. In this respect, our first finding was that using the traditional factorization-update algorithms on our REF factorizations is unviable because they are not integer-preserving. Moreover, the na&iuml;ve adaptations of the traditional update algorithms to preserve integrality were very inefficient. Specifically, on these adaptations, the intermediate entries become unnecessarily large; and thus, the resulting algorithms are more costly computationally than constructing the REF factorizations from scratch. To overcome this limitation, we developed a completely new factorization-update approach, which we called the push-and-swap approach, specifically designed to efficiently update our REF factorizations. This approach requires the same number of operations as the traditional non-REF update algorithms and does not cause further growth in the entries&rsquo; bit-sizes. In short, our results parallel the advances that Bartels and Golub, Forrest and Tomlin, and others accomplished for the traditional LU and Cholesky factorizations.</p>\n<p>Finally, we made key derivations relating our REF factorization framework to the exact rational-arithmetic factorization approach used currently by state-of-the-art exact optimization solvers. We also developed and analyzed a new efficient implementation of Edmonds&rsquo; Q-Matrices (another approach to solve exactly linear optimization problems). Most significantly, our theoretical analyses and computational tests showed that our REF factorization framework is significantly more efficient than these two alternatives in terms of both storage requirements and computational effort.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 11/30/2016<br>\n\t\t\t\t\tModified by: Erick&nbsp;Moreno-Centeno</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe outcomes of this project range from direct societal benefits to the advancement of the computational linear algebra directly related to solving optimization problems. First, through this project, two underrepresented (Hispanic) minority students gained invaluable research experience. The first student was a U.S. permanent resident undergraduate student who participated in the project for one year. This student developed optimization algorithms using high level programming languages and advanced optimization solvers&mdash;thus, greatly enhancing his undergraduate education and professional skillset. The second student, a Ph.D. student, was a Hispanic U.S. citizen who participated in this project throughout its duration. The project allowed the project?s principal investigator to work closely with this student in order to train him and develop his research abilities. Indeed, one of the key achievements of this project is that, thanks to the rigorous training he received and the research he performed on this project, this former student is now an Assistant Professor at Arizona State University (ASU). Note that this achievement effectively multiplies the broader societal impacts of this project: not only does this directly increase the diversity of the faculty at ASU, but this new professor will also serve as a role model and contribute to the development of a diverse next generation of engineers.\n\nOn the technical side, the fundamental goal of this project was to lay the theoretical foundation needed to develop efficient roundoff-error-free (REF), and thus truly exact, optimization methods (algorithms). Broadly speaking, the main outcomes were: (1) providing a new framework for efficiently solving a system of linear equations (SLE) without accruing round-off errors; (2) adapting the newly developed algorithms to enable their use within state-of-the-art linear optimization algorithms; and (3) demonstrating, in theory and practice, that the newly developed algorithms are more efficient (both in storage and computational time) than those previously available. The ensuing paragraphs provide more details on these outcomes.\n\nWe developed two REF factorizations whose calculations require storing the same number of individual elements and performing a similar number of operations as the traditional (non-REF) LU and Cholesky factorizations. We also developed supplementary REF forward and backward substitution algorithms, thereby providing a complete framework for solving SLEs exactly and efficiently. These novel factorizations and substitution algorithms are REF because their operations preserve the integrality of all the intermediate numeric values (entries) throughout their computations. Finally, we performed a detailed complexity analysis of the algorithms. Specifically, we analyzed both their number of operations, which we proved are equivalent to those of the traditional factorizations, and the number of digits (bits) required to represent the entries throughout the algorithms. In the latter respect, an important property of these factorizations and algorithms is that the bit-size of the entries obtained throughout the computations is bounded polynomially by the bit-size of the determinant of the SLE?s underlying matrix. Unlike the rational-arithmetic methods used in practice to solve SLEs exactly, the developed integer-preserving algorithms do not require any computationally expensive greatest common divisor calculations to limit the growth of the numbers&mdash;this greatly accelerates our algorithms.\n\nNext, we adapted our REF factorizations and algorithms for their use within state-of-the-art implementations of the simplex method (one of the premier algorithms to solve linear optimization problems). Specifically, we developed algorithms to efficiently update our factorizations in response to (small) changes in the underlying SLE. These update algorithms are needed because the simplex method solves very similar SLEs in consecutive iterations, so updating the factorization between consecutive iterations is significantly more efficient than computing the factorization from scratch. In this respect, our first finding was that using the traditional factorization-update algorithms on our REF factorizations is unviable because they are not integer-preserving. Moreover, the na&iuml;ve adaptations of the traditional update algorithms to preserve integrality were very inefficient. Specifically, on these adaptations, the intermediate entries become unnecessarily large; and thus, the resulting algorithms are more costly computationally than constructing the REF factorizations from scratch. To overcome this limitation, we developed a completely new factorization-update approach, which we called the push-and-swap approach, specifically designed to efficiently update our REF factorizations. This approach requires the same number of operations as the traditional non-REF update algorithms and does not cause further growth in the entries? bit-sizes. In short, our results parallel the advances that Bartels and Golub, Forrest and Tomlin, and others accomplished for the traditional LU and Cholesky factorizations.\n\nFinally, we made key derivations relating our REF factorization framework to the exact rational-arithmetic factorization approach used currently by state-of-the-art exact optimization solvers. We also developed and analyzed a new efficient implementation of Edmonds? Q-Matrices (another approach to solve exactly linear optimization problems). Most significantly, our theoretical analyses and computational tests showed that our REF factorization framework is significantly more efficient than these two alternatives in terms of both storage requirements and computational effort.\n\n\t\t\t\t\tLast Modified: 11/30/2016\n\n\t\t\t\t\tSubmitted by: Erick Moreno-Centeno"
 }
}