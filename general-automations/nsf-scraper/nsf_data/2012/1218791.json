{
 "awd_id": "1218791",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF: Small: Exploring Algebraic Methods in Computational and Combinatorial Geometry",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Joseph Maurice Rojas",
 "awd_eff_date": "2012-09-01",
 "awd_exp_date": "2018-08-31",
 "tot_intn_awd_amt": 348272.0,
 "awd_amount": 348272.0,
 "awd_min_amd_letter_date": "2012-07-23",
 "awd_max_amd_letter_date": "2017-08-09",
 "awd_abstract_narration": "Building on recent progress in applying algebraic methods to traditional problems of computational and combinatorial geometry, the PI will explore further use of the tools of algebraic geometry in this subject.  In particular, the PI will develop novel algebraic techniques\r\n-- as an alternative to random sampling,\r\n-- for addressing geometric incidence problems,\r\n-- for tackling range searching questions,\r\n-- for making progress on the problem of repeated distances in the plane, and\r\n-- to facilitate multilevel partitioning schemes, \r\nby extending the ideas of Guth and Katz, and of Sharir and co-authors, combining algebraic tools such as Bezout's theorem, fast Fourier transform, and Veronese lifting with existing methods from computational and combinatorial geometry.\r\n\r\nThis work will significantly expand the arsenal of tools available to researchers in computational and combinatorial geometry.  The techniques of this field, in turn, have wide-ranging applications in a variety of practical subjects, such as computer graphics, geographic information systems, machine learning, and robotics path planning, amongst others.\r\n\r\nPI's home institution (Polytechnic Institute of NYU) has historically had a very diverse student body.  Education is much more effective when in the classroom students encounter easily accessible research problems that remain open to this day.  Such problems have been and will be discussed in computational geometry and algorithms courses taught by PI, increasing accessibility and public appreciation of the somewhat nebulous \"research in theoretical computer science.\"",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Boris",
   "pi_last_name": "Aronov",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Boris Aronov",
   "pi_email_addr": "boris.aronov@nyu.edu",
   "nsf_id": "000169109",
   "pi_start_date": "2012-07-23",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "New York University",
  "inst_street_address": "70 WASHINGTON SQ S",
  "inst_street_address_2": "",
  "inst_city_name": "NEW YORK",
  "inst_state_code": "NY",
  "inst_state_name": "New York",
  "inst_phone_num": "2129982121",
  "inst_zip_code": "100121019",
  "inst_country_name": "United States",
  "cong_dist_code": "10",
  "st_cong_dist_code": "NY10",
  "org_lgl_bus_name": "NEW YORK UNIVERSITY",
  "org_prnt_uei_num": "",
  "org_uei_num": "NX9PXMKW5KW8"
 },
 "perf_inst": {
  "perf_inst_name": "Polytechnic University of New York",
  "perf_str_addr": "Six MetroTech Center",
  "perf_city_name": "Brooklyn",
  "perf_st_code": "NY",
  "perf_st_name": "New York",
  "perf_zip_code": "112013840",
  "perf_ctry_code": "US",
  "perf_cong_dist": "07",
  "perf_st_cong_dist": "NY07",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7929",
   "pgm_ref_txt": "COMPUTATIONAL GEOMETRY"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 348272.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The research of the project focused on combining traditional computational geometry techniques with algebraic methods, to obtain new efficient algorithms.&nbsp; The main results include:<br /><br /><br /><strong>Polynomial partitioning</strong>:&nbsp; A series of breakthrough results of Guth and Katz has somewhat shaken the combinatorial geometry community.&nbsp; One of the tools they used was the so-called \"polynomial partitioning\" method.&nbsp; Applied to a set S of N points in 3D, it states that, for any K&gt;0, there exists a polynomial P of degree at most K, so that removing the zero set of P breaks the space into about K<sup>3</sup> connected sets (\"cells\"), each meeting at most roughly N/K<sup>3</sup> points of S (some of the given points may lie in the zero set). <br /><br />A more general version of polynomial partitioning states, say, in 3D, that, given a collection C of N algebraic curves of small degree, and a parameter K, one can construct a polynomial, so that each of the roughly K<sup>3</sup> cells obtained by the removal of its zero set meets at most roughly N/K<sup>2</sup> of the curves of C.&nbsp; An analogous statement holds in higher dimensions for algebraic objects of various dimension (such as surfaces in 3D).<br /><br />While it was known how to efficiently compute the partitioning polynomial for points, the analogous question for lines in 3D was open.&nbsp; In this project, an efficient construction was obtained specifically for lines in 3D and a slightly less efficient one for bounded-degree algebraic curves in 3D.<br /><br />Subsequently, the team constructed a general algorithm for efficiently producing such a polynomial in <em>any</em> dimension, for a given set of objects of any fixed dimension, such as points, curves, surfaces, and so forth.<br /><br />This breakthrough result had the following algorithmic consequences, substantially improving previously known bounds:</p>\n<ul>\n<li>An efficient algorithm for preprocessing a set of semi-algebraic objects for point-enclosure queries: Given a query point, report the number of objects enclosing it.</li>\n<li>An efficient algorithm for preprocessing a set of semi-algebraic objects for vertical ray-shooting: Given a point, what is the first object met by a vertical ray emanating from it? </li>\n<li>An efficient algorithm for semi-algebraic range searching: Given a family of semi-algebraic sets, e.g., ellipsoids in 3D, and a set of N points P in 3D, preprocess P so that one can count the number of points of P contained in a query ellipsoid.</li>\n</ul>\n<p><br /><strong>Depth cycles</strong>: Given a set of simple objects in 3D and a vertical viewing direction, it is natural to define a below-above relation between the objects.&nbsp; In general, this relation may contain cycles (A is above B, B is above C, while C is above A).&nbsp; More than thirty years ago, motivated by a computer graphics problem, the following question was asked: A given collection of triangles can be cut into smaller pieces that have no cycles in their below-above relation.&nbsp; What is the smallest number of pieces required in the worst case, if one starts with, say, N disjoint triangles?<br /><br />A nearly worst-case optimal answer has been recently obtained, but the bound was not entirely constructive.&nbsp; The above polynomial partitioning algorithm applied to the lines supporting the triangle edges implies a near-worst-case optimal algorithm for finding the pieces into which one can cut the triangles, in order to eliminate all cycles in the below-above relation.<br /><br />Distance between functions: Consider two piecewise-linear bivariate functions, defined by natural interpolation over two different triangulations of the unit square into N triangles.&nbsp; As the overlay of the two triangulations may have a quadratic (in N) number of polygons, the na?ve way to compute the L<sub>2</sub> distance between the two functions would require quadratic time.&nbsp; Using algebraic and computational geometry tools, the researchers constructed a near-linear-time algorithm for computing this distance.<br /><br /><strong>SINR model:</strong> the <em>SINR mode</em>l of wireless networking models the reception in a wireless network with multiple simultaneous transmitters and background noise.&nbsp; It describes whether, at a given point in space, a specific transmitter can be \"heard,\" given the position and power of all transmitters.&nbsp; Labeling the space according to who can be heard where produces the <em>SINR diagram</em>.&nbsp; It is a difficult object to manipulate as its region boundaries are described by high-degree algebraic equations.&nbsp; Evaluating the conditions exactly is expensive.&nbsp; The team combined algebraic and data structure tools to efficiently answer approximate <em>batched</em> SINR point-location queries, where one is given not only the power and location of transmitters, but also a large set of receivers.<br /><br />These results, in turn, have been used to drastically speed up existing data structures for approximate SINR single-shot (rather than batched) point-location queries.<br /><br /><br /><br />Two PhD students worked on this project and were partially supported by the grant.&nbsp; One of the students proceeded to receive his degree.&nbsp; One post-doctoral level visitor was also partially supported by the grant.<br /><br />Pankaj K. Agarwal, Boris Aronov, and Esther Ezra organized a workshop at CG Week 2019 on \"Algebraic Methods in Discrete and Computational Geometry\".</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 05/20/2020<br>\n\t\t\t\t\tModified by: Boris&nbsp;Aronov</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe research of the project focused on combining traditional computational geometry techniques with algebraic methods, to obtain new efficient algorithms.  The main results include:\n\n\nPolynomial partitioning:  A series of breakthrough results of Guth and Katz has somewhat shaken the combinatorial geometry community.  One of the tools they used was the so-called \"polynomial partitioning\" method.  Applied to a set S of N points in 3D, it states that, for any K&gt;0, there exists a polynomial P of degree at most K, so that removing the zero set of P breaks the space into about K3 connected sets (\"cells\"), each meeting at most roughly N/K3 points of S (some of the given points may lie in the zero set). \n\nA more general version of polynomial partitioning states, say, in 3D, that, given a collection C of N algebraic curves of small degree, and a parameter K, one can construct a polynomial, so that each of the roughly K3 cells obtained by the removal of its zero set meets at most roughly N/K2 of the curves of C.  An analogous statement holds in higher dimensions for algebraic objects of various dimension (such as surfaces in 3D).\n\nWhile it was known how to efficiently compute the partitioning polynomial for points, the analogous question for lines in 3D was open.  In this project, an efficient construction was obtained specifically for lines in 3D and a slightly less efficient one for bounded-degree algebraic curves in 3D.\n\nSubsequently, the team constructed a general algorithm for efficiently producing such a polynomial in any dimension, for a given set of objects of any fixed dimension, such as points, curves, surfaces, and so forth.\n\nThis breakthrough result had the following algorithmic consequences, substantially improving previously known bounds:\n\nAn efficient algorithm for preprocessing a set of semi-algebraic objects for point-enclosure queries: Given a query point, report the number of objects enclosing it.\nAn efficient algorithm for preprocessing a set of semi-algebraic objects for vertical ray-shooting: Given a point, what is the first object met by a vertical ray emanating from it? \nAn efficient algorithm for semi-algebraic range searching: Given a family of semi-algebraic sets, e.g., ellipsoids in 3D, and a set of N points P in 3D, preprocess P so that one can count the number of points of P contained in a query ellipsoid.\n\n\n\nDepth cycles: Given a set of simple objects in 3D and a vertical viewing direction, it is natural to define a below-above relation between the objects.  In general, this relation may contain cycles (A is above B, B is above C, while C is above A).  More than thirty years ago, motivated by a computer graphics problem, the following question was asked: A given collection of triangles can be cut into smaller pieces that have no cycles in their below-above relation.  What is the smallest number of pieces required in the worst case, if one starts with, say, N disjoint triangles?\n\nA nearly worst-case optimal answer has been recently obtained, but the bound was not entirely constructive.  The above polynomial partitioning algorithm applied to the lines supporting the triangle edges implies a near-worst-case optimal algorithm for finding the pieces into which one can cut the triangles, in order to eliminate all cycles in the below-above relation.\n\nDistance between functions: Consider two piecewise-linear bivariate functions, defined by natural interpolation over two different triangulations of the unit square into N triangles.  As the overlay of the two triangulations may have a quadratic (in N) number of polygons, the na?ve way to compute the L2 distance between the two functions would require quadratic time.  Using algebraic and computational geometry tools, the researchers constructed a near-linear-time algorithm for computing this distance.\n\nSINR model: the SINR model of wireless networking models the reception in a wireless network with multiple simultaneous transmitters and background noise.  It describes whether, at a given point in space, a specific transmitter can be \"heard,\" given the position and power of all transmitters.  Labeling the space according to who can be heard where produces the SINR diagram.  It is a difficult object to manipulate as its region boundaries are described by high-degree algebraic equations.  Evaluating the conditions exactly is expensive.  The team combined algebraic and data structure tools to efficiently answer approximate batched SINR point-location queries, where one is given not only the power and location of transmitters, but also a large set of receivers.\n\nThese results, in turn, have been used to drastically speed up existing data structures for approximate SINR single-shot (rather than batched) point-location queries.\n\n\n\nTwo PhD students worked on this project and were partially supported by the grant.  One of the students proceeded to receive his degree.  One post-doctoral level visitor was also partially supported by the grant.\n\nPankaj K. Agarwal, Boris Aronov, and Esther Ezra organized a workshop at CG Week 2019 on \"Algebraic Methods in Discrete and Computational Geometry\".\n\n\t\t\t\t\tLast Modified: 05/20/2020\n\n\t\t\t\t\tSubmitted by: Boris Aronov"
 }
}