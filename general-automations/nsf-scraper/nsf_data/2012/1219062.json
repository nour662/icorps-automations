{
 "awd_id": "1219062",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "CSR: Small: Cache Design for Solid-State Drives and Its Application in Data-intensive Applications",
 "cfda_num": "47.070",
 "org_code": "05050000",
 "po_phone": "7032925197",
 "po_email": "mmcclure@nsf.gov",
 "po_sign_block_name": "Marilyn McClure",
 "awd_eff_date": "2012-10-01",
 "awd_exp_date": "2015-09-30",
 "tot_intn_awd_amt": 230000.0,
 "awd_amount": 246000.0,
 "awd_min_amd_letter_date": "2012-09-18",
 "awd_max_amd_letter_date": "2013-03-19",
 "awd_abstract_narration": "Solid-State Drives (SSDs) are capable of providing much higher data access bandwidth than the hard disk drives (HDDs). However, the typical configuration of SSDs as emulating HDDs in computer systems significantly limits their impact for data-intensive applications. The objective of this research is to develop new use paradigms of SSDs in data-intensive applications on a Reconfigurable Polymorphous Processing Architecture (RPPA).  RPPA consists of three major components: (1) heterogeneous processors such as CPUs and custom processing units, (2) data storage devices such as SSDs and DRAMs, and (3) a reconfigurable interconnect. The interconnect can be adaptively reconfigured as desired to fit the data communication and access pattern between the processors and the data storage devices to maximize the performance for various applications such as image processing and image registration. The direct output of this research has two folds. First, novel and application-specific use paradigms of SSD for various data-intensive applications are demonstrated. Second, the methodology and the infrastructure to develop the RPPA for exploiting the performance potentials of SSDs are established.  The results of this project can transform the way SSDs are used in future computer systems for data-intensive applications. The integration of research results into several related CSE courses, such as computer organization and embedded system, provides hands-on experience in application-specific platform design to undergraduates, especially minority and women students.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CNS",
 "org_div_long_name": "Division Of Computer and Network Systems",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Miaoqing",
   "pi_last_name": "Huang",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Miaoqing Huang",
   "pi_email_addr": "mqhuang@uark.edu",
   "nsf_id": "000557777",
   "pi_start_date": "2012-09-18",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "University of Arkansas",
  "inst_street_address": "1125 W MAPLE ST STE 316",
  "inst_street_address_2": "",
  "inst_city_name": "FAYETTEVILLE",
  "inst_state_code": "AR",
  "inst_state_name": "Arkansas",
  "inst_phone_num": "4795753845",
  "inst_zip_code": "727013124",
  "inst_country_name": "United States",
  "cong_dist_code": "03",
  "st_cong_dist_code": "AR03",
  "org_lgl_bus_name": "UNIVERSITY OF ARKANSAS",
  "org_prnt_uei_num": "",
  "org_uei_num": "MECEHTM8DB17"
 },
 "perf_inst": {
  "perf_inst_name": "University of Arkansas",
  "perf_str_addr": "504 J B Hunt Building",
  "perf_city_name": "Fayetteville",
  "perf_st_code": "AR",
  "perf_st_name": "Arkansas",
  "perf_zip_code": "727011201",
  "perf_ctry_code": "US",
  "perf_cong_dist": "03",
  "perf_st_cong_dist": "AR03",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "171400",
   "pgm_ele_name": "Special Projects - CNS"
  },
  {
   "pgm_ele_code": "735400",
   "pgm_ele_name": "CSR-Computer Systems Research"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "9150",
   "pgm_ref_txt": "EXP PROG TO STIM COMP RES"
  },
  {
   "pgm_ref_code": "9178",
   "pgm_ref_txt": "UNDERGRADUATE EDUCATION"
  },
  {
   "pgm_ref_code": "9251",
   "pgm_ref_txt": "REU SUPP-Res Exp for Ugrd Supp"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  },
  {
   "app_code": "0113",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001314DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 230000.0
  },
  {
   "fund_oblg_fiscal_yr": 2013,
   "fund_oblg_amt": 16000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>This project designed techniques and tools to facilitate the application development on hybrid manycore architectures. Field-programmable gate arrays (FPGAs) were used as the experimental platforms. The more specific outcomes are as follows. (1) A unified OpenCL-flavor parallel programming model and the corresponding hybrid computing platform. This hybrid computing platform contains one global host processor and a set of Group Computation Units (GCUs). Each Group Computation Unit (GCU) contains one local host and several slaves. The local host is responsible for coordinating group execution inside each GCU. Software kernels run on the general-purpose processors as software programs. Hardware kernels are hardware accelerators implemented from high-level synthesis tools. The number of software and hardware kernels is configurable as input specifics into the platform generator. (2) Hardware abstraction techniques that can significantly reduce the difficulties in creating, managing, and re-use hardware accelerators (i.e., hardware threads) on hybrid manycore platforms. (3) Archborn: an open source tool that automates the generation of modifiable chip heterogeneous multiprocessor systems on chip (CHMPs). This is an open source multiprocessor architecture generation tool based on TCL scripts on platform FPGAs, to unify different hardware multiprocessor architectures with various programming models for rapid system generation. By providing the Archborn APIs, the Archborn templates, and a design flow for rapid prototyping, various configurations of hybrid manycore architectures can be efficiently designed and evaluated. (4) A router architecture for implementing network-on-chip. (5) The applicability of replacing SRAM LUTs with spin-torque transfer magnetoresistive RAM (STT-MRAM) LUTs for achieving both power and performance advantages.</p>\n<p>&nbsp;</p>\n<p>In addition, we developed the mechanism for using deduplication and delta-encoding techniques to reduce the writes to SSDs. We built a prototype file system, i.e., CSA-FS, for demonstration.</p>\n<p>&nbsp;</p>\n<p>Three PhD students and 4 undergraduate REU students have been involved in this project in a 3-year period. Twelve conference papers have been published based on the research results from this project.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 12/23/2015<br>\n\t\t\t\t\tModified by: Miaoqing&nbsp;Huang</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThis project designed techniques and tools to facilitate the application development on hybrid manycore architectures. Field-programmable gate arrays (FPGAs) were used as the experimental platforms. The more specific outcomes are as follows. (1) A unified OpenCL-flavor parallel programming model and the corresponding hybrid computing platform. This hybrid computing platform contains one global host processor and a set of Group Computation Units (GCUs). Each Group Computation Unit (GCU) contains one local host and several slaves. The local host is responsible for coordinating group execution inside each GCU. Software kernels run on the general-purpose processors as software programs. Hardware kernels are hardware accelerators implemented from high-level synthesis tools. The number of software and hardware kernels is configurable as input specifics into the platform generator. (2) Hardware abstraction techniques that can significantly reduce the difficulties in creating, managing, and re-use hardware accelerators (i.e., hardware threads) on hybrid manycore platforms. (3) Archborn: an open source tool that automates the generation of modifiable chip heterogeneous multiprocessor systems on chip (CHMPs). This is an open source multiprocessor architecture generation tool based on TCL scripts on platform FPGAs, to unify different hardware multiprocessor architectures with various programming models for rapid system generation. By providing the Archborn APIs, the Archborn templates, and a design flow for rapid prototyping, various configurations of hybrid manycore architectures can be efficiently designed and evaluated. (4) A router architecture for implementing network-on-chip. (5) The applicability of replacing SRAM LUTs with spin-torque transfer magnetoresistive RAM (STT-MRAM) LUTs for achieving both power and performance advantages.\n\n \n\nIn addition, we developed the mechanism for using deduplication and delta-encoding techniques to reduce the writes to SSDs. We built a prototype file system, i.e., CSA-FS, for demonstration.\n\n \n\nThree PhD students and 4 undergraduate REU students have been involved in this project in a 3-year period. Twelve conference papers have been published based on the research results from this project.\n\n\t\t\t\t\tLast Modified: 12/23/2015\n\n\t\t\t\t\tSubmitted by: Miaoqing Huang"
 }
}