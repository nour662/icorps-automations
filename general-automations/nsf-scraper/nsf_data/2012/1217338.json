{
 "awd_id": "1217338",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "AF:Small:Data Structures for Dynamic Networks",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Rahul Shah",
 "awd_eff_date": "2012-08-01",
 "awd_exp_date": "2016-07-31",
 "tot_intn_awd_amt": 499861.0,
 "awd_amount": 499861.0,
 "awd_min_amd_letter_date": "2012-07-17",
 "awd_max_amd_letter_date": "2012-07-17",
 "awd_abstract_narration": "Physical networks (such as communications networks and road networks) are dynamic objects, prone to sudden failures, congestion, and malicious attacks.  Nonetheless, we must be able to compute basic functions of the current state of these networks, i.e., as network components fail and recover, we need dynamic algorithms and data structures to route along shortest paths and to calculate distances, flow/cut capacities, and point-to-point connectivity.  Currently deployed systems typically deal with the problem of transient failures by periodically recomputing from scratch all the network properties of interest.  Solutions of this type are insufficient in two ways.  They are computationally inefficient, the extent to which depends on the given network property, and they do not respond to network component failures dynamically.\r\n\r\nThe technical aims of this project are two-fold.  The first is to develop abstract representations of graphs and graph properties, along the lines of cactus trees and Gomory-Hu trees.  These graph representations are useful in the design of efficient algorithms and data structures, but are also of interest to the broader mathematics community.  The second is to develop data structures in the dynamic subgraph model and d-failure model.  These abstract models capture the situation found in many real world applications: there is a fixed substrate network, which can be processed in advance by possibly inefficient algorithms, which is subject to a sequence of node/link failures and recoveries intermixed with queries.  A pervasive theme of the project is to determine what gains in efficiency can be had (in running time, space consumption) by accepting approximate solutions, e.g., approximately shortest routes or approximately minimum cuts that are guaranteed to be accurate up to some fixed multiplicative or additive error.\r\n\r\nIn addition to its specific research goals, the aims of this project are to (i) train undergraduate and graduate students in the design and rigorous analysis of efficient data structures, and (ii) incorporate modern data structures into the computer science curriculum by developing course materials appropriate to students at\r\nthe graduate or advanced undergraduate level.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Seth",
   "pi_last_name": "Pettie",
   "pi_mid_init": "",
   "pi_sufx_name": "",
   "pi_full_name": "Seth Pettie",
   "pi_email_addr": "pettie@umich.edu",
   "nsf_id": "000477111",
   "pi_start_date": "2012-07-17",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Regents of the University of Michigan - Ann Arbor",
  "inst_street_address": "1109 GEDDES AVE STE 3300",
  "inst_street_address_2": "",
  "inst_city_name": "ANN ARBOR",
  "inst_state_code": "MI",
  "inst_state_name": "Michigan",
  "inst_phone_num": "7347636438",
  "inst_zip_code": "481091015",
  "inst_country_name": "United States",
  "cong_dist_code": "06",
  "st_cong_dist_code": "MI06",
  "org_lgl_bus_name": "REGENTS OF THE UNIVERSITY OF MICHIGAN",
  "org_prnt_uei_num": "",
  "org_uei_num": "GNJ7BBP73WE9"
 },
 "perf_inst": {
  "perf_inst_name": "University of Michigan Ann Arbor",
  "perf_str_addr": "2260 Hayward St.",
  "perf_city_name": "Ann Arbor",
  "perf_st_code": "MI",
  "perf_st_name": "Michigan",
  "perf_zip_code": "481092121",
  "perf_ctry_code": "US",
  "perf_cong_dist": "06",
  "perf_st_cong_dist": "MI06",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "779600",
   "pgm_ele_name": "Algorithmic Foundations"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7926",
   "pgm_ref_txt": "ALGORITHMS"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 499861.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>Real world networks (say communications networks) are both physical and conceptual objects.&nbsp; They are dynamically changing a prone to failure.&nbsp;&nbsp; The aim of this project was to design algorithms and data structures that could compute properties of dynamically changing networks.</p>\n<p>Many networks (e.g., router networks) can be viewed as essentially fixed, but subject to the sudden failure of multiple nodes or links.&nbsp; This project developed a new class of time and space-efficient data structures that can confirm point-to-point connectivity after the failure of up to D network components.&nbsp;&nbsp; The failures are processed in time quadratic in D and point-to-point connectivity queries are answered in time linear in D.&nbsp;&nbsp; Moreover, we proved that the efficiency of this data structure cannot be improved in one important respect.&nbsp; Conditioned on the validity of the Integer 3SUM Conjecture, no such data structure can answer queries in nearly-constant time, independent of D.</p>\n<p>We also investigated the complexity of the fully dynamic connectivity problem, in which network links are dynamically added/deleted over time and point-to-point connectivity queries must be answered with respect to the current network.&nbsp; We developed faster fully dynamic connectivity algorithms, one of which measures the worst-case latency of any update operation, and the other measures the latency of the average update operation, averaged over the lifetime of the data structure.&nbsp; The second data structure completes all operations in time that is nearly logarithmic in the number of vertices, which is close to optimal, due to a logarithmic lower bound.</p>\n<p>We refuted the strongest version of the Real 3SUM conjecture by designing a strongly subquadratic decision tree for the problem and a mildly subqudratic uniform algorithm.&nbsp; Versions of the 3SUM conjecture are commonly used to prove conditional lower bounds on dynamic data structural problems.&nbsp; Our results cast some doubts on the validity of weaker versions of the 3SUM conjecture but do not completely invalidate any previous conditional lower bounds.</p>\n<p>In distributed networks the nodes are identified with computers and the edges with bidirected communication links.&nbsp; We studied the complexity of many fundamental symmetry-breaking problems in distributed network models in which the global network topology is unknown to the participating computers.&nbsp; A long-standing question in this model is whether access to uniformly random bits are useful for accelerating the computation.&nbsp; We proved the first separation between randomized and deterministic complexity in this model, and showed that there is usually an exponential gap between the running time of the optimal randomized and deterministic algorithms for typical symmetry-breaking problems.&nbsp; Furthermore, we explained exactly how this complexity gap arises by designing a new algorithmic technique called &ldquo;graph shattering&rdquo; that explicitly reduces the randomized complexity of a problem to its deterministic complexity on an exponentially reduced problem size.</p>\n<p>We developed more efficient algorithms for the classical problem of optimum weighted perfect matching on general (non-bipartite) graphs, which implies faster algorithms for several problems in discrete optimization, e.g., computing approximately optimal traveling salesman tours via Christofides&rsquo; algorithm or computing optimum Chinese postman tours.&nbsp; The algorithm is of the primal-dual variety, and takes a new approach of computing only near-optimal near-perfect matchings at intermediate stages of the algorithm.</p>\n<p>This grant supported a postdoctoral researcher and one PhD student through graduation.&nbsp; They have taken positions as a research scientist at Bar-Ilan University and a postdoctoral researcher at MIT.</p>\n<p>&nbsp;</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 10/30/2016<br>\n\t\t\t\t\tModified by: Seth&nbsp;Pettie</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nReal world networks (say communications networks) are both physical and conceptual objects.  They are dynamically changing a prone to failure.   The aim of this project was to design algorithms and data structures that could compute properties of dynamically changing networks.\n\nMany networks (e.g., router networks) can be viewed as essentially fixed, but subject to the sudden failure of multiple nodes or links.  This project developed a new class of time and space-efficient data structures that can confirm point-to-point connectivity after the failure of up to D network components.   The failures are processed in time quadratic in D and point-to-point connectivity queries are answered in time linear in D.   Moreover, we proved that the efficiency of this data structure cannot be improved in one important respect.  Conditioned on the validity of the Integer 3SUM Conjecture, no such data structure can answer queries in nearly-constant time, independent of D.\n\nWe also investigated the complexity of the fully dynamic connectivity problem, in which network links are dynamically added/deleted over time and point-to-point connectivity queries must be answered with respect to the current network.  We developed faster fully dynamic connectivity algorithms, one of which measures the worst-case latency of any update operation, and the other measures the latency of the average update operation, averaged over the lifetime of the data structure.  The second data structure completes all operations in time that is nearly logarithmic in the number of vertices, which is close to optimal, due to a logarithmic lower bound.\n\nWe refuted the strongest version of the Real 3SUM conjecture by designing a strongly subquadratic decision tree for the problem and a mildly subqudratic uniform algorithm.  Versions of the 3SUM conjecture are commonly used to prove conditional lower bounds on dynamic data structural problems.  Our results cast some doubts on the validity of weaker versions of the 3SUM conjecture but do not completely invalidate any previous conditional lower bounds.\n\nIn distributed networks the nodes are identified with computers and the edges with bidirected communication links.  We studied the complexity of many fundamental symmetry-breaking problems in distributed network models in which the global network topology is unknown to the participating computers.  A long-standing question in this model is whether access to uniformly random bits are useful for accelerating the computation.  We proved the first separation between randomized and deterministic complexity in this model, and showed that there is usually an exponential gap between the running time of the optimal randomized and deterministic algorithms for typical symmetry-breaking problems.  Furthermore, we explained exactly how this complexity gap arises by designing a new algorithmic technique called \"graph shattering\" that explicitly reduces the randomized complexity of a problem to its deterministic complexity on an exponentially reduced problem size.\n\nWe developed more efficient algorithms for the classical problem of optimum weighted perfect matching on general (non-bipartite) graphs, which implies faster algorithms for several problems in discrete optimization, e.g., computing approximately optimal traveling salesman tours via Christofides? algorithm or computing optimum Chinese postman tours.  The algorithm is of the primal-dual variety, and takes a new approach of computing only near-optimal near-perfect matchings at intermediate stages of the algorithm.\n\nThis grant supported a postdoctoral researcher and one PhD student through graduation.  They have taken positions as a research scientist at Bar-Ilan University and a postdoctoral researcher at MIT.\n\n \n\n\t\t\t\t\tLast Modified: 10/30/2016\n\n\t\t\t\t\tSubmitted by: Seth Pettie"
 }
}