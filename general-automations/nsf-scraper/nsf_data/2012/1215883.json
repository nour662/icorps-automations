{
 "awd_id": "1215883",
 "agcy_id": "NSF",
 "tran_type": "Grant",
 "awd_istr_txt": "Standard Grant",
 "awd_titl_txt": "ICES: Small: Computational Fair Division: From Cake Cutting to Cloud Computing",
 "cfda_num": "47.070",
 "org_code": "05010000",
 "po_phone": null,
 "po_email": "",
 "po_sign_block_name": "Tracy Kimbrel",
 "awd_eff_date": "2012-07-01",
 "awd_exp_date": "2016-06-30",
 "tot_intn_awd_amt": 390000.0,
 "awd_amount": 390000.0,
 "awd_min_amd_letter_date": "2012-06-27",
 "awd_max_amd_letter_date": "2012-06-27",
 "awd_abstract_narration": "For millennia thinkers have struggled with a seemingly simple question: how does one fairly divide goods among several people? The 20th century has seen a shift towards mathematically rigorous approaches to fairness; economists, mathematicians, and political scientists have all contributed to the large body of literature on fair division. In contrast, to date there is little work in algorithmic economics on fair division, relative to this field's weight in microeconomic theory. In particular, computational work on the fair allocation of divisible goods (such as land, time, or computer memory) is rather sparse. \r\n\r\nThe theme of this proposal is that computational thinking can transform research on the fair allocation of divisible goods, while novel research on the fair allocation of divisible goods can find compelling applications in computer science. This theme is explored in two domains: (i) in cake cutting --- a metaphor for the allocation of a heterogeneous divisible good --- the proposed research focuses on issues such as complexity, representation, and optimization; (ii) in cloud computing, where one needs to allocate multiple homogeneous divisible goods (e.g., CPU, RAM), the proposed research aims to design and validate algorithms that exhibit superior performance in practice. \r\n\r\nThis proposal focuses the attention of the algorithmic economics community on fair division via four main activities: a book, a summer school, magazine articles, and tutorials. In turn, the increased computational attention can lead to a surge of deployed applications of fair division methods.",
 "awd_arra_amount": 0.0,
 "dir_abbr": "CSE",
 "org_dir_long_name": "Directorate for Computer and Information Science and Engineering",
 "div_abbr": "CCF",
 "org_div_long_name": "Division of Computing and Communication Foundations",
 "awd_agcy_code": "4900",
 "fund_agcy_code": "4900",
 "pi": [
  {
   "pi_role": "Principal Investigator",
   "pi_first_name": "Ariel",
   "pi_last_name": "Procaccia",
   "pi_mid_init": "D",
   "pi_sufx_name": "",
   "pi_full_name": "Ariel D Procaccia",
   "pi_email_addr": "arielpro@seas.harvard.edu",
   "nsf_id": "000596429",
   "pi_start_date": "2012-06-27",
   "pi_end_date": null
  }
 ],
 "inst": {
  "inst_name": "Carnegie-Mellon University",
  "inst_street_address": "5000 FORBES AVE",
  "inst_street_address_2": "",
  "inst_city_name": "PITTSBURGH",
  "inst_state_code": "PA",
  "inst_state_name": "Pennsylvania",
  "inst_phone_num": "4122688746",
  "inst_zip_code": "152133815",
  "inst_country_name": "United States",
  "cong_dist_code": "12",
  "st_cong_dist_code": "PA12",
  "org_lgl_bus_name": "CARNEGIE MELLON UNIVERSITY",
  "org_prnt_uei_num": "U3NKNFLNQ613",
  "org_uei_num": "U3NKNFLNQ613"
 },
 "perf_inst": {
  "perf_inst_name": "Carnegie-Mellon University",
  "perf_str_addr": "",
  "perf_city_name": "",
  "perf_st_code": "PA",
  "perf_st_name": "Pennsylvania",
  "perf_zip_code": "152133890",
  "perf_ctry_code": "US",
  "perf_cong_dist": "12",
  "perf_st_cong_dist": "PA12",
  "perf_ctry_name": "United States",
  "perf_ctry_flag": "1"
 },
 "pgm_ele": [
  {
   "pgm_ele_code": "805200",
   "pgm_ele_name": "Inter Com Sci Econ Soc S (ICE)"
  }
 ],
 "pgm_ref": [
  {
   "pgm_ref_code": "7923",
   "pgm_ref_txt": "SMALL PROJECT"
  },
  {
   "pgm_ref_code": "7932",
   "pgm_ref_txt": "COMPUT GAME THEORY & ECON"
  }
 ],
 "app_fund": [
  {
   "app_code": "0112",
   "app_name": "NSF RESEARCH & RELATED ACTIVIT",
   "app_symb_id": "040100",
   "fund_code": "01001213DB",
   "fund_name": "NSF RESEARCH & RELATED ACTIVIT",
   "fund_symb_id": "040100"
  }
 ],
 "oblg_fy": [
  {
   "fund_oblg_fiscal_yr": 2012,
   "fund_oblg_amt": 390000.0
  }
 ],
 "por": {
  "por_cntn": "<div class=\"porColContainerWBG\">\n<div class=\"porContentCol\"><p>The project has significantly advanced the theory and practice of computational fair division. Perhaps the most striking (and unexpected) product is a not-for-profit fair division website called Spliddit (http://www.spliddit.org), which offers provably fair solutions for everyday problems. Spliddit's mission is twofold: to provide easy access to carefully designed fair division methods, thereby making the world a bit fairer; and to communicate to the public the beauty and value of theoretical research in computer science, mathematics, and economics, from an unusual perspective. Since its launch in November 2014, Spliddit has attracted more than 80,000 users (as of September 2016). <br /><br />Arguably the most exciting research carried out as part of the project has to do with the development of some of the algorithms that underlie Spliddit. In particular, Spliddit's algorithm for dividing rent (deployed in May 2015) focuses on a compelling fairness notion known as envy-freeness: Each participant is at least as happy with getting her room for her price as getting any other room for the price of that room. The algorithm is innovative in that it selects the \"fairest\" among all envy-free solutions (in a rigorous sense), and does so in a computationally efficient way. Fairly allocating indivisible goods (such as artworks or jewelry) is another major application of computational fair division, and the project has led to several generations of deployed algorithms. One difficulty is that envy-freeness is infeasible in this setting; the algorithms developed by the PI and his collaborators therefore aim to guarantee relaxed notions of fairness, such as approximate maximin share (deployed in November 2014) or envy-freeness up to one good (deployed in May 2016). <br /><br />Other major research results deal with the fair allocation of computational resources, such as CPU or RAM, in shared clusters or cloud computing environments. Of special note are algorithms that provide provable fairness guarantees even when jobs are discrete; and significant progress on the challenging problem of guaranteeing fairness even in dynamic settings where participants may arrive and depart over time.</p><br>\n<p>\n\t\t\t\t      \tLast Modified: 09/21/2016<br>\n\t\t\t\t\tModified by: Ariel&nbsp;D&nbsp;Procaccia</p>\n</div>\n<div class=\"porSideCol\"></div>\n</div>",
  "por_txt_cntn": "\nThe project has significantly advanced the theory and practice of computational fair division. Perhaps the most striking (and unexpected) product is a not-for-profit fair division website called Spliddit (http://www.spliddit.org), which offers provably fair solutions for everyday problems. Spliddit's mission is twofold: to provide easy access to carefully designed fair division methods, thereby making the world a bit fairer; and to communicate to the public the beauty and value of theoretical research in computer science, mathematics, and economics, from an unusual perspective. Since its launch in November 2014, Spliddit has attracted more than 80,000 users (as of September 2016). \n\nArguably the most exciting research carried out as part of the project has to do with the development of some of the algorithms that underlie Spliddit. In particular, Spliddit's algorithm for dividing rent (deployed in May 2015) focuses on a compelling fairness notion known as envy-freeness: Each participant is at least as happy with getting her room for her price as getting any other room for the price of that room. The algorithm is innovative in that it selects the \"fairest\" among all envy-free solutions (in a rigorous sense), and does so in a computationally efficient way. Fairly allocating indivisible goods (such as artworks or jewelry) is another major application of computational fair division, and the project has led to several generations of deployed algorithms. One difficulty is that envy-freeness is infeasible in this setting; the algorithms developed by the PI and his collaborators therefore aim to guarantee relaxed notions of fairness, such as approximate maximin share (deployed in November 2014) or envy-freeness up to one good (deployed in May 2016). \n\nOther major research results deal with the fair allocation of computational resources, such as CPU or RAM, in shared clusters or cloud computing environments. Of special note are algorithms that provide provable fairness guarantees even when jobs are discrete; and significant progress on the challenging problem of guaranteeing fairness even in dynamic settings where participants may arrive and depart over time.\n\n\t\t\t\t\tLast Modified: 09/21/2016\n\n\t\t\t\t\tSubmitted by: Ariel D Procaccia"
 }
}